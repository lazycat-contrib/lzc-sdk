syntax = "proto3";

package cloud.lazycat.apis.sys;
import "google/protobuf/empty.proto";

option go_package = "gitee.com/linakesi/lzc-sdk/lang/go/sys";

service OSUpgradeService {
  // 获取当前系统的版本状态
  rpc Local(google.protobuf.Empty) returns (LocalSystemVersionInfo) {}

  // 获取远程系统的版本状态
  rpc Remote(google.protobuf.Empty) returns (RemoteSystemVersionInfo) {}

  // 获取远程系统的版本的信息
  rpc GetRemote(SystemVersion) returns (SystemVersionInfo) {}

  // 选择远程某个版本，获取到大小准备下载
  rpc Select(SystemVersion) returns (google.protobuf.Empty) {}

  // 开始下载
  rpc Start(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  // 暂停下载
  rpc Pause(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  // 获取下载进度
  rpc Progress(google.protobuf.Empty) returns (UpgradeProgressInfo) {}

  // 安装当前已下好的版本
  rpc Install(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  // 切换到某个版本（需要重启生效）
  rpc Switch(SystemVersion) returns (google.protobuf.Empty) {}

  // 清理（阻塞）
  rpc Prune(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  // 重启
  rpc Reboot(google.protobuf.Empty) returns (google.protobuf.Empty) {}
}

message LocalSystemVersionInfo {
  // 当前正在运行的系统版本与下一次重启的系统版本，两者通常是一样的
  //    更新之后，会改变 rebootVersion 的值从而两者不一样，表示需要重启才能生效
  string currentVersion = 1;
  string rebootVersion = 2;

  // 当前磁盘中所有版本列表（由于产品设计上只允许切换到最新版本，该字段仅供调试）
  repeated string versions = 3;
}

message SystemVersionInfo {
  // 系统版本
  string version = 1;

  // ChangeLog
  string changelog = 2;
}

message RemoteSystemVersionInfo {
  // 最新版本
  //     需要对比该字段与当前运行的版本是否一致来确定当前系统是否是最新的
  SystemVersionInfo latestVersion = 1;

  // 线上可下载的所有版本列表，按顺序最新版本在前（由于产品设计上只下载最新版本，该字段仅暂时保留）
  repeated string versions = 3;
}

enum DownloaderStatus {
  ready = 0;
  downloading = 1;
  paused = 2;
  completed = 3;
  error = 4;
}

message UpgradeProgressInfo {
  // 正在下载的系统版本，（为空表示没有正在下载的进度，后面所有字段都没有意义）
  string version = 1;

  DownloaderStatus status = 2;

  // 已下载的大小（字节）
  int64 complete = 3;

  // 总需要下载的大小（字节）
  int64 total = 4;

  // 错误信息（在没有错误时该值为空）
  string error = 5;
}

message SystemVersion {
  string version = 1;
}
