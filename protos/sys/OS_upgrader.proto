syntax = "proto3";

package cloud.lazycat.apis.sys;

import "google/protobuf/empty.proto";

option go_package = "gitee.com/linakesi/lzc-sdk/lang/go/sys";

service OSUpgradeService {
  // 获取当前系统的版本状态
  rpc Local(google.protobuf.Empty) returns (SystemVersionInfo) {}

  // 获取指定版本系统信息
  rpc Remote(SystemVersion) returns (SystemVersionInfo) {}

  // 获取指定发行类型的最新系统信息
  rpc GetLatest(GetLatestRequest) returns (SystemVersionInfo) {}

  // 选择远程某个版本，获取到大小准备下载
  rpc Select(SystemVersion) returns (google.protobuf.Empty) {}

  // 获取下载器当前已选择的版本
  rpc GetSelected(google.protobuf.Empty) returns (SystemVersionInfo) {}

  // 开始下载
  rpc Start(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  // 暂停下载
  rpc Pause(google.protobuf.Empty) returns (google.protobuf.Empty) {}

  // 获取下载进度
  rpc Progress(google.protobuf.Empty) returns (UpgradeProgressInfo) {}

  // 清理（阻塞）
  rpc Prune(google.protobuf.Empty) returns (google.protobuf.Empty) {}
}

message GetLatestRequest {
  repeated string groups = 1;
}

message SystemVersionInfo {
  // 系统版本
  string version = 1;

  // ChangeLog
  string changelog = 2;

  // 大小（字节）
  uint64 size = 3;
}

enum DownloaderStatus {
  ready = 0;
  downloading = 1;
  paused = 2;
  completed = 3;
  error = 4;
}

message UpgradeProgressInfo {
  // 正在下载的系统版本，（为空表示没有正在下载的进度，后面所有字段都没有意义）
  string version = 1;

  DownloaderStatus status = 2;

  // 已下载的大小（字节）
  int64 complete = 3;

  // 总需要下载的大小（字节）
  int64 total = 4;

  // 错误信息（在没有错误时该值为空）
  string error = 5;
}

message SystemVersion {
  string version = 1;
}
