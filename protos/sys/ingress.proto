syntax = "proto3";

package cloud.lazycat.apis.sys;

import "google/protobuf/empty.proto";

option go_package = "gitee.com/linakesi/lzc-sdk/lang/go/sys";

// 这里 Access Control 的逻辑是：
// 1. 默认用户可以访问所有 app
// 2. 如果调用了 AllowAdd ，则该用户进入白名单模式，只有被管理员允许访问的应用才可以访问
service IngressService {
    rpc GetDevSetting(google.protobuf.Empty) returns (DevSetting) {}

    rpc SetDevSetting(DevSetting) returns (DevSetting) {}

    // 允许一个用户对指定 app 的访问
    rpc AllowAdd(IngressAllowRequest)  returns (google.protobuf.Empty) {}

    // 阻止一个用户对指定 app 的访问权限
    rpc AllowDel(IngressAllowRequest) returns (google.protobuf.Empty) {}

    // 阻止一个用户对所有 app 的访问权限
    rpc AllowDelAll(IngressAllowDelAllRequest) returns (google.protobuf.Empty) {}

    // 查询一个用户是否被允许访问指定 app
    rpc AllowGet(IngressAllowGetRequest) returns (IngressAllowGetResponse) {}

    // 列出一个用户的所有被允许访问的 app 列表
    rpc AllowList(IngressAllowListRequest) returns (IngressAllowListResponse) {}

    // 清空白名单
    rpc AllowClear(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // 启用/禁用白名单
    rpc AllowManage(IngressAllowManageRequest) returns (IngressAllowManageResponse) {}

    // 获取指定 app 最后一次被访问的时刻
    rpc GetAppLastAccessTime(IngressAppLastAccessTimeRequest) returns (IngressAppLastAccessTimeResponse) {}
}

message DevSetting {
    // 默认使用 http，而不是 https（禁用TLS）
    bool HttpOnlyMode = 1;
    // 默认使用 http，而不是 https（不禁用TLS）
    bool HttpMode = 2;
    // 禁用自动休眠长时间未使用的应用
    bool DisableHibernation = 3;
    // 开启 debug bridge
    bool DebugBridge = 4;
    // 开启 sshd 服务
    bool DebugSshd = 5;
}

message IngressAllowRequest {
    string UserId = 1;
    repeated string AppIdList = 2;
}

message IngressAllowDelAllRequest {
    string UserId = 1;
}

message IngressAllowListRequest {
    string UserId = 1;
}

message IngressAllowListResponse {
    repeated string AppIdList = 1;
}

message IngressAllowGetRequest {
    string UserId = 1;
    string AppId = 2;
}

message IngressAllowGetResponse {
    bool IsAllowed = 1;
}

message IngressAppLastAccessTimeRequest {
    string AppId = 1;
}

message IngressAppLastAccessTimeResponse {
    int64 UnixTime = 1;
}

message IngressAllowManageRequest {
    optional bool Enabled = 1;
}

message IngressAllowManageResponse {
    bool Enabled = 1;
}
