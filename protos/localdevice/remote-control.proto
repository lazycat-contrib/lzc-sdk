syntax = "proto3";

package cloud.lazycat.apis.localdevice;

option go_package = "gitee.com/linakesi/lzc-sdk/lang/go/localdevice";
import "google/protobuf/empty.proto";


// /usr/include/linux/input-event-codes.h
enum InputEvent {
  KEY_HOME = 0;
  KEY_BACK = 1;
  KEY_F11 = 2;
  KEY_MENU = 3;
  KEY_UP = 4;
  KEY_DOWN = 5;
  KEY_LEFT = 6;
  KEY_RIGHT = 7;
  KEY_PAGEUP = 8;
  KEY_PAGEDOWN = 9;
  KEY_ENTER = 10;
  KEY_BACKSPACE = 11;
}

enum EventState {
  PRESS = 0;
  RELEASE = 1;
}


// uinput TouchPad interface
enum TouchEvent {
  MoveTo = 0;
  LeftClick = 1;
  RightClick = 2;
  LeftPress = 3;
  LeftRelease = 4;
  RightPress = 5;
  TouchDown = 6;
  TouchUp = 7;
}

message SendKeyboardEventRequest {
  InputEvent code = 1;
  EventState state = 2;
}

message MovePosition {
  int32 x = 1;
  int32 y = 2;
}

message SendTouchpadEventRequest {
  TouchEvent event = 1;
  optional MovePosition position = 2;
}

message SendTouchpadMoveRequest {
  MovePosition position = 1;
}

message SendMouseMoveByDirectionRequest {
  int32 pixel = 1;
}

message SendMouseMoveRequest {
  int32 x = 1;
  int32 y = 2;
}

message SendMouseWheelRequest {
  bool horizontal = 1;
  int32 delta = 2;
}

message SetRemoteScreenRectRequest {
  int32 height = 1;
  int32 width = 2;
}

message WriteClipboardRequest {
  string text = 1;
}

message ReadClipboardResponse {
  string text = 1;
}


service RemoteControl{
  // 发送键盘输入事件
  rpc SendKeyboardEvent(SendKeyboardEventRequest) returns (google.protobuf.Empty) {}
  // 发送触摸板输入事件
  // 此接口发送的事件都是源事件，比如发送LeftPress，只会发起按下，不会发起松开
  // 如果是想要单击等操作使用其他接口
  rpc SendTouchpadEvent(SendTouchpadEventRequest) returns (google.protobuf.Empty) {}
  // 发送左键
  rpc SendTouchpadClick(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  // 发送右键
  rpc SendTouchpadRightClick(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  // 发送双击
  rpc SendTouchpadDoubleClick(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  // 发送触摸板滑动
  rpc SendTouchpadMove(SendTouchpadMoveRequest) returns (google.protobuf.Empty) {}
  // 发起鼠标向左移动
  rpc SendMouseMoveLeft(SendMouseMoveByDirectionRequest) returns (google.protobuf.Empty) {}
  // 发起鼠标向右移动
  rpc SendMouseMoveRight(SendMouseMoveByDirectionRequest) returns (google.protobuf.Empty) {}
  // 发起鼠标向上移动
  rpc SendMouseMoveUp(SendMouseMoveByDirectionRequest) returns (google.protobuf.Empty) {}
  // 发起鼠标向下移动
  rpc SendMouseMove(SendMouseMoveRequest) returns (google.protobuf.Empty) {}
  // 发起鼠标左键单击事件
  rpc SendMouseLeftClick(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  // 发起鼠标右键单击事件
  rpc SendMouseRightClick(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  // 发起鼠标中键单击事件
  rpc SendMouseMiddleClick(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  // 发起鼠标滚动
  rpc SendMouseWheel(SendMouseWheelRequest) returns (google.protobuf.Empty) {}
  // 发起鼠标双击左键事件
  rpc SendMouseDoubleClick(google.protobuf.Empty) returns (google.protobuf.Empty) {}
  // 设置远程屏幕的宽高(用于计算鼠标，触控板移动的同比例偏移)
  rpc SetRemoteScreenRect(SetRemoteScreenRectRequest) returns (google.protobuf.Empty) {}
  // 写入剪贴板
  rpc WriteClipboard(WriteClipboardRequest) returns (google.protobuf.Empty) {}
  // 读取剪贴板
  rpc ReadClipboard(google.protobuf.Empty) returns (ReadClipboardResponse) {}
  // 粘贴
  rpc DoPaste(google.protobuf.Empty) returns (google.protobuf.Empty) {}
}
