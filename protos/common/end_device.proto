syntax = "proto3";

package cloud.lazycat.apis.common;

option go_package = "gitee.com/linakesi/lzc-sdk/lang/go/common";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "common/security_context.proto";

// 懒猫云客户端设备管理服务
service EndDeviceService {
  // 枚举当前登陆用户所有的设备信息
  rpc ListEndDevices(ListEndDeviceRequest) returns (ListEndDeviceReply) {}

  // 将发起请求的设备与登陆用户的其他所有设备建立其虚拟网络隧道
  // 以便发起请求的faile浏览器可以绕过盒子直接访问其他节点上的设备API，比如剪贴板、文件拷贝等
  // 后端代码本身就与任意设备建立好了虚拟网络隧道，因此不需要使用此API。
  // 前端代码可以调用browseronly.proto:PairAllDeivce自动设置相关参数。
  rpc PairAllEndDevices_(PairEndDeviceRequest) returns (stream google.protobuf.Empty) {}

  // 移除指定uid下面的指定设备(如果设备id为空，将会移除所有的设备）
  rpc RemoveEndDevice(RemoveEndDeviceRequest) returns (google.protobuf.Empty){
    option (cloud.lazycat.apis.common.scontext).require_user_class = TARGET_USER;
  }
}

message PairEndDeviceRequest {
  string user_token = 1; //用户登陆时hserver返回的token
}

message EndDevice {
  // TODO 待删除
  string peer_id = 1;
  bool is_online = 2;
  // 因为device api的监听端口可能会变化，所以此url有效性不会太长
  string device_api_url = 3;

  // 由盒子维护的设备唯一ID，此ID是
  // 根据客户端的多个特征推理出来的稳定ID
  // 应用程序可以假设此ID是稳定不变的(实际依旧有可能变化)
  string unique_deivce_id = 4;

  // 设备型号，如果可以获取到
  string model = 5;

  // 设备名称，如果可以获取到
  string name = 6;

  // 设备第一次允许登陆的时间戳
  google.protobuf.Timestamp binding_time = 7;

  // 设备是否是移动平台
  bool is_mobile = 8;

  // 设备是否是电视平台
  bool is_tv = 9;
}

message ListEndDeviceRequest {
  string uid = 1;
}
message ListEndDeviceReply {
  repeated EndDevice devices = 1;
}

message RemoveEndDeviceRequest{
  string uid = 1;
  string unique_deivce_id = 2;
}
