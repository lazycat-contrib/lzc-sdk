syntax = "proto3";

package cloud.lazycat.apis.common;

import "google/protobuf/empty.proto";

option go_package = "gitee.com/linakesi/lzc-sdk/lang/go/common";

service BoxService {
  rpc QueryInfo(google.protobuf.Empty) returns (BoxInfo) {}

  rpc ChangeDisplayName(ChangeDisplayNameRequest) returns (google.protobuf.Empty) {}

  rpc ChangePowerLed(ChangePowerLedRequest) returns (google.protobuf.Empty) {}

  rpc SetBootOption(BootOption) returns (google.protobuf.Empty) {}

  rpc Shutdown(ShutdownRequest) returns (google.protobuf.Empty) {}

  rpc QueryDisksInfo(google.protobuf.Empty) returns (DisksInfo) {}

  rpc ChangeDataDisksPassword(ChangeDataDisksPasswordRequest) returns (ChangeDataDisksPasswordResponse) {}
}

message BoxInfo {
  // 硬件唯一ID,出厂后则不再变化
  string udid = 1;

  // 盒子的唯一名称，此名称是向中心化服务器注册产生，创建后不可修改
  string box_name = 2;

  // 盒子的唯一域名
  string box_domain = 3;

  // 盒子内部显示名称，可以随意修改，若不设置则为box_name
  string display_name = 4;

  message Memory {
    int64 total = 1;

    int64 free = 2;
  }
  Memory memory = 8;

  message DiskSpace {
    int64 total = 1;

    int64 free = 2;
  }
  DiskSpace disk_space = 5;

  bool no_space = 6;

  // 电源灯是否亮
  bool power_led = 7;
}

message ChangeDisplayNameRequest {
  string display_name = 1;
}

message ChangePowerLedRequest {
  bool power_led = 1;
}

message ShutdownRequest {
  enum Action {
    // 关机
    Poweroff = 0;

    // 重启
    Reboot = 1;

    // 软重启（仅重启 lzc-os 容器，不关闭 lzc-base-os）
    //    通常用于系统更新、故障修复等场景
    SoftReboot = 2;
  }

  Action action = 1;
}

message BootOption {
  enum BootOptionType {
    // 无操作（清空所有已设置的操作）
    BOOT_OPTION_NONE = 0;

    // 回滚到上一个版本
    BOOT_OPTION_ROLLBACK = 1;

    // 重置系统（清空系统的 var 数据）
    BOOT_OPTION_RESET = 2;

    // 恢复出厂设置（清空用户信息、系统的 var 数据和用户数据）
    BOOT_OPTION_FACTORY_RESET = 3;
  }
  BootOptionType type = 1;
}


message DiskInfo {
  enum DiskType {
    Unknown = 0;
    System = 1;
    Data = 2;
  }

  // 磁盘类型
  DiskType type = 1;

  bool encrypted = 11;

  // 盘位（仅当 type 为 Data 时才有效）
  int32 slot = 2;

  // 型号
  string model = 3;

  // 序列号
  string serial = 4;

  // 磁盘容量（字节）（如果该值为 0，则表示该盘位未插盘）
  int64 size = 5;

  // 剩余空间（字节）
  int64 free = 6;

  // 温度
  int32 temperature = 7;

  // 运行时间（小时）
  int32 power_on_hours = 8;

  // 健康状态
  enum Health {
    Normal = 0;
    Caution = 1;
    Bad = 2;
  }
  Health health = 9;

  // 健康状态理由
  string health_reason = 10;
}

message DisksInfo {
  repeated DiskInfo disks = 1;
}

message ChangeDataDisksPasswordRequest {
  string old_password = 1;
  string new_password = 2;
}

message ChangeDataDisksPasswordResponse {
  bool ok = 1;
}
