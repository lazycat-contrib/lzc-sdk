// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.1
// source: dlna/dlna.proto

package dlna

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DoActionRequest_Action int32

const (
	DoActionRequest_Unknown DoActionRequest_Action = 0
	// 需要在mediaFile中设置对应的媒体路径，
	// 支持http://类型或/开头的本地资源路径(相当于当前用户目录)
	DoActionRequest_Play  DoActionRequest_Action = 1
	DoActionRequest_Pause DoActionRequest_Action = 2
	// 若当前是paused状态，则恢复播放，否则不做任何处理，返回成功。
	DoActionRequest_Continue DoActionRequest_Action = 3
	// 停止对此instance上的任何操作，后续操作需要重新调用play开始
	DoActionRequest_Stop DoActionRequest_Action = 4
	DoActionRequest_Seek DoActionRequest_Action = 5
)

// Enum value maps for DoActionRequest_Action.
var (
	DoActionRequest_Action_name = map[int32]string{
		0: "Unknown",
		1: "Play",
		2: "Pause",
		3: "Continue",
		4: "Stop",
		5: "Seek",
	}
	DoActionRequest_Action_value = map[string]int32{
		"Unknown":  0,
		"Play":     1,
		"Pause":    2,
		"Continue": 3,
		"Stop":     4,
		"Seek":     5,
	}
)

func (x DoActionRequest_Action) Enum() *DoActionRequest_Action {
	p := new(DoActionRequest_Action)
	*p = x
	return p
}

func (x DoActionRequest_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DoActionRequest_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_dlna_dlna_proto_enumTypes[0].Descriptor()
}

func (DoActionRequest_Action) Type() protoreflect.EnumType {
	return &file_dlna_dlna_proto_enumTypes[0]
}

func (x DoActionRequest_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DoActionRequest_Action.Descriptor instead.
func (DoActionRequest_Action) EnumDescriptor() ([]byte, []int) {
	return file_dlna_dlna_proto_rawDescGZIP(), []int{0, 0}
}

type RMPStatus_Status int32

const (
	RMPStatus_Unknown RMPStatus_Status = 0
	RMPStatus_Playing RMPStatus_Status = 1
	RMPStatus_Paused  RMPStatus_Status = 2
	RMPStatus_Stopped RMPStatus_Status = 3
)

// Enum value maps for RMPStatus_Status.
var (
	RMPStatus_Status_name = map[int32]string{
		0: "Unknown",
		1: "Playing",
		2: "Paused",
		3: "Stopped",
	}
	RMPStatus_Status_value = map[string]int32{
		"Unknown": 0,
		"Playing": 1,
		"Paused":  2,
		"Stopped": 3,
	}
)

func (x RMPStatus_Status) Enum() *RMPStatus_Status {
	p := new(RMPStatus_Status)
	*p = x
	return p
}

func (x RMPStatus_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RMPStatus_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_dlna_dlna_proto_enumTypes[1].Descriptor()
}

func (RMPStatus_Status) Type() protoreflect.EnumType {
	return &file_dlna_dlna_proto_enumTypes[1]
}

func (x RMPStatus_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RMPStatus_Status.Descriptor instead.
func (RMPStatus_Status) EnumDescriptor() ([]byte, []int) {
	return file_dlna_dlna_proto_rawDescGZIP(), []int{1, 0}
}

type DoActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerUuid    string                 `protobuf:"bytes,1,opt,name=player_uuid,json=playerUuid,proto3" json:"player_uuid,omitempty"`
	Action        DoActionRequest_Action `protobuf:"varint,2,opt,name=action,proto3,enum=lzc.dlna.DoActionRequest_Action" json:"action,omitempty"`
	MediaFile     *string                `protobuf:"bytes,3,opt,name=media_file,json=mediaFile,proto3,oneof" json:"media_file,omitempty"`
	MediaSubtitle *string                `protobuf:"bytes,4,opt,name=media_subtitle,json=mediaSubtitle,proto3,oneof" json:"media_subtitle,omitempty"`
	SeekTarget    *string                `protobuf:"bytes,5,opt,name=seek_target,json=seekTarget,proto3,oneof" json:"seek_target,omitempty"`
}

func (x *DoActionRequest) Reset() {
	*x = DoActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dlna_dlna_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoActionRequest) ProtoMessage() {}

func (x *DoActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dlna_dlna_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoActionRequest.ProtoReflect.Descriptor instead.
func (*DoActionRequest) Descriptor() ([]byte, []int) {
	return file_dlna_dlna_proto_rawDescGZIP(), []int{0}
}

func (x *DoActionRequest) GetPlayerUuid() string {
	if x != nil {
		return x.PlayerUuid
	}
	return ""
}

func (x *DoActionRequest) GetAction() DoActionRequest_Action {
	if x != nil {
		return x.Action
	}
	return DoActionRequest_Unknown
}

func (x *DoActionRequest) GetMediaFile() string {
	if x != nil && x.MediaFile != nil {
		return *x.MediaFile
	}
	return ""
}

func (x *DoActionRequest) GetMediaSubtitle() string {
	if x != nil && x.MediaSubtitle != nil {
		return *x.MediaSubtitle
	}
	return ""
}

func (x *DoActionRequest) GetSeekTarget() string {
	if x != nil && x.SeekTarget != nil {
		return *x.SeekTarget
	}
	return ""
}

type RMPStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status RMPStatus_Status `protobuf:"varint,1,opt,name=status,proto3,enum=lzc.dlna.RMPStatus_Status" json:"status,omitempty"`
	Pos    string           `protobuf:"bytes,2,opt,name=pos,proto3" json:"pos,omitempty"`
	Len    string           `protobuf:"bytes,3,opt,name=len,proto3" json:"len,omitempty"`
}

func (x *RMPStatus) Reset() {
	*x = RMPStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dlna_dlna_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RMPStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RMPStatus) ProtoMessage() {}

func (x *RMPStatus) ProtoReflect() protoreflect.Message {
	mi := &file_dlna_dlna_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RMPStatus.ProtoReflect.Descriptor instead.
func (*RMPStatus) Descriptor() ([]byte, []int) {
	return file_dlna_dlna_proto_rawDescGZIP(), []int{1}
}

func (x *RMPStatus) GetStatus() RMPStatus_Status {
	if x != nil {
		return x.Status
	}
	return RMPStatus_Unknown
}

func (x *RMPStatus) GetPos() string {
	if x != nil {
		return x.Pos
	}
	return ""
}

func (x *RMPStatus) GetLen() string {
	if x != nil {
		return x.Len
	}
	return ""
}

type ScanRMPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteMediaPlayers []*RemoteMediaPlayer `protobuf:"bytes,1,rep,name=remote_media_players,json=remoteMediaPlayers,proto3" json:"remote_media_players,omitempty"`
}

func (x *ScanRMPResponse) Reset() {
	*x = ScanRMPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dlna_dlna_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanRMPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanRMPResponse) ProtoMessage() {}

func (x *ScanRMPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dlna_dlna_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanRMPResponse.ProtoReflect.Descriptor instead.
func (*ScanRMPResponse) Descriptor() ([]byte, []int) {
	return file_dlna_dlna_proto_rawDescGZIP(), []int{2}
}

func (x *ScanRMPResponse) GetRemoteMediaPlayers() []*RemoteMediaPlayer {
	if x != nil {
		return x.RemoteMediaPlayers
	}
	return nil
}

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerUuid string `protobuf:"bytes,1,opt,name=player_uuid,json=playerUuid,proto3" json:"player_uuid,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dlna_dlna_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dlna_dlna_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_dlna_dlna_proto_rawDescGZIP(), []int{3}
}

func (x *SubscribeRequest) GetPlayerUuid() string {
	if x != nil {
		return x.PlayerUuid
	}
	return ""
}

type RemoteMediaPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid     string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IconData string `protobuf:"bytes,3,opt,name=icon_data,json=iconData,proto3" json:"icon_data,omitempty"`
}

func (x *RemoteMediaPlayer) Reset() {
	*x = RemoteMediaPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dlna_dlna_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteMediaPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteMediaPlayer) ProtoMessage() {}

func (x *RemoteMediaPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_dlna_dlna_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteMediaPlayer.ProtoReflect.Descriptor instead.
func (*RemoteMediaPlayer) Descriptor() ([]byte, []int) {
	return file_dlna_dlna_proto_rawDescGZIP(), []int{4}
}

func (x *RemoteMediaPlayer) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RemoteMediaPlayer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RemoteMediaPlayer) GetIconData() string {
	if x != nil {
		return x.IconData
	}
	return ""
}

var File_dlna_dlna_proto protoreflect.FileDescriptor

var file_dlna_dlna_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x64, 0x6c, 0x6e, 0x61, 0x2f, 0x64, 0x6c, 0x6e, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x6c, 0x7a, 0x63, 0x2e, 0x64, 0x6c, 0x6e, 0x61, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x02, 0x0a, 0x0f, 0x44, 0x6f, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x38, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x6c, 0x7a, 0x63, 0x2e, 0x64, 0x6c, 0x6e, 0x61, 0x2e, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x73, 0x65, 0x65, 0x6b, 0x5f,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a,
	0x73, 0x65, 0x65, 0x6b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x88, 0x01, 0x01, 0x22, 0x4c, 0x0a,
	0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x6c, 0x61, 0x79, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x50, 0x61, 0x75, 0x73, 0x65, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x65, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x10,
	0x04, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x65, 0x65, 0x6b, 0x10, 0x05, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x73, 0x65, 0x65, 0x6b, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0xa0, 0x01,
	0x0a, 0x09, 0x52, 0x4d, 0x50, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6c, 0x7a,
	0x63, 0x2e, 0x64, 0x6c, 0x6e, 0x61, 0x2e, 0x52, 0x4d, 0x50, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x6f,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6c, 0x65, 0x6e, 0x22, 0x3b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x6c,
	0x61, 0x79, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x61, 0x75, 0x73, 0x65,
	0x64, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x10, 0x03,
	0x22, 0x60, 0x0a, 0x0f, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x4d, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x14, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x7a, 0x63, 0x2e, 0x64, 0x6c, 0x6e, 0x61, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x12,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x22, 0x33, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0x58, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x32, 0xd7, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c,
	0x0a, 0x07, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x4d, 0x50, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x19, 0x2e, 0x6c, 0x7a, 0x63, 0x2e, 0x64, 0x6c, 0x6e, 0x61, 0x2e, 0x53, 0x63, 0x61,
	0x6e, 0x52, 0x4d, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x09,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1a, 0x2e, 0x6c, 0x7a, 0x63, 0x2e,
	0x64, 0x6c, 0x6e, 0x61, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6c, 0x7a, 0x63, 0x2e, 0x64, 0x6c, 0x6e, 0x61,
	0x2e, 0x52, 0x4d, 0x50, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x30, 0x01, 0x12, 0x3d, 0x0a, 0x08,
	0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x6c, 0x7a, 0x63, 0x2e, 0x64,
	0x6c, 0x6e, 0x61, 0x2e, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x29, 0x5a, 0x27, 0x67,
	0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x6e, 0x61, 0x6b, 0x65, 0x73,
	0x69, 0x2f, 0x6c, 0x7a, 0x63, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x67,
	0x6f, 0x2f, 0x64, 0x6c, 0x6e, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dlna_dlna_proto_rawDescOnce sync.Once
	file_dlna_dlna_proto_rawDescData = file_dlna_dlna_proto_rawDesc
)

func file_dlna_dlna_proto_rawDescGZIP() []byte {
	file_dlna_dlna_proto_rawDescOnce.Do(func() {
		file_dlna_dlna_proto_rawDescData = protoimpl.X.CompressGZIP(file_dlna_dlna_proto_rawDescData)
	})
	return file_dlna_dlna_proto_rawDescData
}

var file_dlna_dlna_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_dlna_dlna_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_dlna_dlna_proto_goTypes = []interface{}{
	(DoActionRequest_Action)(0), // 0: lzc.dlna.DoActionRequest.Action
	(RMPStatus_Status)(0),       // 1: lzc.dlna.RMPStatus.Status
	(*DoActionRequest)(nil),     // 2: lzc.dlna.DoActionRequest
	(*RMPStatus)(nil),           // 3: lzc.dlna.RMPStatus
	(*ScanRMPResponse)(nil),     // 4: lzc.dlna.ScanRMPResponse
	(*SubscribeRequest)(nil),    // 5: lzc.dlna.SubscribeRequest
	(*RemoteMediaPlayer)(nil),   // 6: lzc.dlna.RemoteMediaPlayer
	(*emptypb.Empty)(nil),       // 7: google.protobuf.Empty
}
var file_dlna_dlna_proto_depIdxs = []int32{
	0, // 0: lzc.dlna.DoActionRequest.action:type_name -> lzc.dlna.DoActionRequest.Action
	1, // 1: lzc.dlna.RMPStatus.status:type_name -> lzc.dlna.RMPStatus.Status
	6, // 2: lzc.dlna.ScanRMPResponse.remote_media_players:type_name -> lzc.dlna.RemoteMediaPlayer
	7, // 3: lzc.dlna.RemoteMediaPlayerService.ScanRMP:input_type -> google.protobuf.Empty
	5, // 4: lzc.dlna.RemoteMediaPlayerService.Subscribe:input_type -> lzc.dlna.SubscribeRequest
	2, // 5: lzc.dlna.RemoteMediaPlayerService.DoAction:input_type -> lzc.dlna.DoActionRequest
	4, // 6: lzc.dlna.RemoteMediaPlayerService.ScanRMP:output_type -> lzc.dlna.ScanRMPResponse
	3, // 7: lzc.dlna.RemoteMediaPlayerService.Subscribe:output_type -> lzc.dlna.RMPStatus
	7, // 8: lzc.dlna.RemoteMediaPlayerService.DoAction:output_type -> google.protobuf.Empty
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_dlna_dlna_proto_init() }
func file_dlna_dlna_proto_init() {
	if File_dlna_dlna_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dlna_dlna_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dlna_dlna_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RMPStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dlna_dlna_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanRMPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dlna_dlna_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dlna_dlna_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteMediaPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dlna_dlna_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dlna_dlna_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dlna_dlna_proto_goTypes,
		DependencyIndexes: file_dlna_dlna_proto_depIdxs,
		EnumInfos:         file_dlna_dlna_proto_enumTypes,
		MessageInfos:      file_dlna_dlna_proto_msgTypes,
	}.Build()
	File_dlna_dlna_proto = out.File
	file_dlna_dlna_proto_rawDesc = nil
	file_dlna_dlna_proto_goTypes = nil
	file_dlna_dlna_proto_depIdxs = nil
}
