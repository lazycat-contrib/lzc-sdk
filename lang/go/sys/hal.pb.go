// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.23.4
// source: sys/hal.proto

package sys

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ButtonEventQueue_ButtonEventKind int32

const (
	// 按钮被按下
	ButtonEventQueue_BUTTON_DOWN ButtonEventQueue_ButtonEventKind = 0
	// 按钮被松开
	ButtonEventQueue_BUTTON_UP ButtonEventQueue_ButtonEventKind = 1
	// 按钮被点击（按下后被快速松开，两次点击间隔不超过 500 毫秒）
	// 当按钮被点击时，会先产生 BUTTON_DOWN 事件，然后产生 BUTTON_UP 事件，最后产生 BUTTON_CLICK 事件
	// 如果只需要监听按钮被点击事件，可以忽略 BUTTON_DOWN 和 BUTTON_UP 事件
	// 如果需要判断按钮是单击还是双击，需要自行等待 500 毫秒，如果没有收到 BUTTON_DOUBLE_CLICK 事件，则表示是单击
	ButtonEventQueue_BUTTON_CLICK ButtonEventQueue_ButtonEventKind = 2
	// 按钮被双击（两次点击间隔不超过 500 毫秒）
	// 当按钮被双击时，会产生两次 BUTTON_CLICK 事件后才产生 BUTTON_DOUBLE_CLICK 事件
	// 如果只需要监听按钮被双击事件，可以忽略 BUTTON_CLICK、BUTTON_DOWN、BUTTON_UP 事件
	ButtonEventQueue_BUTTON_DOUBLE_CLICK ButtonEventQueue_ButtonEventKind = 3
	// 按钮被长按（按下时间超过 2 秒还未松开）
	// 按钮被长按的事件过程：会先产生 BUTTON_DOWN 事件，然后产生 BUTTON_LONG_PRESS 事件，等到按钮被松开时，会产生 BUTTON_UP 事件
	ButtonEventQueue_BUTTON_LONG_PRESS ButtonEventQueue_ButtonEventKind = 4
	// 按钮被长按（按下时间超过 10 秒还未松开）
	// 按钮被长按超过10秒的事件过程，会先产生 BUTTON_DOWN 事件，然后2秒后产生 BUTTON_LONG_PRESS 事件，然后8秒后产生 BUTTON_LONG_PRESS_10S 事件，等到按钮被松开时，会产生 BUTTON_UP 事件
	ButtonEventQueue_BUTTON_LONG_PRESS_10S ButtonEventQueue_ButtonEventKind = 5
)

// Enum value maps for ButtonEventQueue_ButtonEventKind.
var (
	ButtonEventQueue_ButtonEventKind_name = map[int32]string{
		0: "BUTTON_DOWN",
		1: "BUTTON_UP",
		2: "BUTTON_CLICK",
		3: "BUTTON_DOUBLE_CLICK",
		4: "BUTTON_LONG_PRESS",
		5: "BUTTON_LONG_PRESS_10S",
	}
	ButtonEventQueue_ButtonEventKind_value = map[string]int32{
		"BUTTON_DOWN":           0,
		"BUTTON_UP":             1,
		"BUTTON_CLICK":          2,
		"BUTTON_DOUBLE_CLICK":   3,
		"BUTTON_LONG_PRESS":     4,
		"BUTTON_LONG_PRESS_10S": 5,
	}
)

func (x ButtonEventQueue_ButtonEventKind) Enum() *ButtonEventQueue_ButtonEventKind {
	p := new(ButtonEventQueue_ButtonEventKind)
	*p = x
	return p
}

func (x ButtonEventQueue_ButtonEventKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ButtonEventQueue_ButtonEventKind) Descriptor() protoreflect.EnumDescriptor {
	return file_sys_hal_proto_enumTypes[0].Descriptor()
}

func (ButtonEventQueue_ButtonEventKind) Type() protoreflect.EnumType {
	return &file_sys_hal_proto_enumTypes[0]
}

func (x ButtonEventQueue_ButtonEventKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ButtonEventQueue_ButtonEventKind.Descriptor instead.
func (ButtonEventQueue_ButtonEventKind) EnumDescriptor() ([]byte, []int) {
	return file_sys_hal_proto_rawDescGZIP(), []int{2, 0}
}

type PLedState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *PLedState) Reset() {
	*x = PLedState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_hal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PLedState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PLedState) ProtoMessage() {}

func (x *PLedState) ProtoReflect() protoreflect.Message {
	mi := &file_sys_hal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PLedState.ProtoReflect.Descriptor instead.
func (*PLedState) Descriptor() ([]byte, []int) {
	return file_sys_hal_proto_rawDescGZIP(), []int{0}
}

func (x *PLedState) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type SLedState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *SLedState) Reset() {
	*x = SLedState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_hal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SLedState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLedState) ProtoMessage() {}

func (x *SLedState) ProtoReflect() protoreflect.Message {
	mi := &file_sys_hal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLedState.ProtoReflect.Descriptor instead.
func (*SLedState) Descriptor() ([]byte, []int) {
	return file_sys_hal_proto_rawDescGZIP(), []int{1}
}

func (x *SLedState) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type ButtonEventQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queue []*ButtonEventQueue_ButtonEvent `protobuf:"bytes,1,rep,name=queue,proto3" json:"queue,omitempty"`
}

func (x *ButtonEventQueue) Reset() {
	*x = ButtonEventQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_hal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ButtonEventQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ButtonEventQueue) ProtoMessage() {}

func (x *ButtonEventQueue) ProtoReflect() protoreflect.Message {
	mi := &file_sys_hal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ButtonEventQueue.ProtoReflect.Descriptor instead.
func (*ButtonEventQueue) Descriptor() ([]byte, []int) {
	return file_sys_hal_proto_rawDescGZIP(), []int{2}
}

func (x *ButtonEventQueue) GetQueue() []*ButtonEventQueue_ButtonEvent {
	if x != nil {
		return x.Queue
	}
	return nil
}

type FanRpm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rpm int64 `protobuf:"varint,1,opt,name=rpm,proto3" json:"rpm,omitempty"`
}

func (x *FanRpm) Reset() {
	*x = FanRpm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_hal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FanRpm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FanRpm) ProtoMessage() {}

func (x *FanRpm) ProtoReflect() protoreflect.Message {
	mi := &file_sys_hal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FanRpm.ProtoReflect.Descriptor instead.
func (*FanRpm) Descriptor() ([]byte, []int) {
	return file_sys_hal_proto_rawDescGZIP(), []int{3}
}

func (x *FanRpm) GetRpm() int64 {
	if x != nil {
		return x.Rpm
	}
	return 0
}

type ButtonEventQueue_ButtonEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind      ButtonEventQueue_ButtonEventKind `protobuf:"varint,1,opt,name=kind,proto3,enum=cloud.lazycat.apis.sys.ButtonEventQueue_ButtonEventKind" json:"kind,omitempty"`
	Timestamp *timestamppb.Timestamp           `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ButtonEventQueue_ButtonEvent) Reset() {
	*x = ButtonEventQueue_ButtonEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_hal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ButtonEventQueue_ButtonEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ButtonEventQueue_ButtonEvent) ProtoMessage() {}

func (x *ButtonEventQueue_ButtonEvent) ProtoReflect() protoreflect.Message {
	mi := &file_sys_hal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ButtonEventQueue_ButtonEvent.ProtoReflect.Descriptor instead.
func (*ButtonEventQueue_ButtonEvent) Descriptor() ([]byte, []int) {
	return file_sys_hal_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ButtonEventQueue_ButtonEvent) GetKind() ButtonEventQueue_ButtonEventKind {
	if x != nil {
		return x.Kind
	}
	return ButtonEventQueue_BUTTON_DOWN
}

func (x *ButtonEventQueue_ButtonEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_sys_hal_proto protoreflect.FileDescriptor

var file_sys_hal_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x79, 0x73, 0x2f, 0x68, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x16, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x25, 0x0a, 0x09, 0x50, 0x4c, 0x65, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x25, 0x0a, 0x09,
	0x53, 0x4c, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x22, 0x87, 0x03, 0x0a, 0x10, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x1a, 0x95, 0x01, 0x0a, 0x0b, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x38, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63,
	0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x42, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x8e, 0x01, 0x0a,
	0x0f, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x69, 0x6e, 0x64,
	0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x43, 0x4c, 0x49, 0x43, 0x4b,
	0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x55,
	0x42, 0x4c, 0x45, 0x5f, 0x43, 0x4c, 0x49, 0x43, 0x4b, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x42,
	0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x53,
	0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x4c, 0x4f, 0x4e,
	0x47, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x31, 0x30, 0x53, 0x10, 0x05, 0x22, 0x1a, 0x0a,
	0x06, 0x46, 0x61, 0x6e, 0x52, 0x70, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x70, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x70, 0x6d, 0x32, 0x86, 0x03, 0x0a, 0x0a, 0x48, 0x61,
	0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x50,
	0x4c, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79,
	0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x4c, 0x65,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x46, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x4c, 0x65, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79,
	0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x50, 0x4c, 0x65,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x53,
	0x4c, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79,
	0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x4c, 0x65,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x59, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x28, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x46, 0x61, 0x6e, 0x52, 0x70, 0x6d, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x1e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x46, 0x61, 0x6e, 0x52, 0x70, 0x6d,
	0x22, 0x00, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6c, 0x69, 0x6e, 0x61, 0x6b, 0x65, 0x73, 0x69, 0x2f, 0x6c, 0x7a, 0x63, 0x2d, 0x73, 0x64, 0x6b,
	0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x79, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sys_hal_proto_rawDescOnce sync.Once
	file_sys_hal_proto_rawDescData = file_sys_hal_proto_rawDesc
)

func file_sys_hal_proto_rawDescGZIP() []byte {
	file_sys_hal_proto_rawDescOnce.Do(func() {
		file_sys_hal_proto_rawDescData = protoimpl.X.CompressGZIP(file_sys_hal_proto_rawDescData)
	})
	return file_sys_hal_proto_rawDescData
}

var file_sys_hal_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sys_hal_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_sys_hal_proto_goTypes = []interface{}{
	(ButtonEventQueue_ButtonEventKind)(0), // 0: cloud.lazycat.apis.sys.ButtonEventQueue.ButtonEventKind
	(*PLedState)(nil),                     // 1: cloud.lazycat.apis.sys.PLedState
	(*SLedState)(nil),                     // 2: cloud.lazycat.apis.sys.SLedState
	(*ButtonEventQueue)(nil),              // 3: cloud.lazycat.apis.sys.ButtonEventQueue
	(*FanRpm)(nil),                        // 4: cloud.lazycat.apis.sys.FanRpm
	(*ButtonEventQueue_ButtonEvent)(nil),  // 5: cloud.lazycat.apis.sys.ButtonEventQueue.ButtonEvent
	(*timestamppb.Timestamp)(nil),         // 6: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                 // 7: google.protobuf.Empty
}
var file_sys_hal_proto_depIdxs = []int32{
	5, // 0: cloud.lazycat.apis.sys.ButtonEventQueue.queue:type_name -> cloud.lazycat.apis.sys.ButtonEventQueue.ButtonEvent
	0, // 1: cloud.lazycat.apis.sys.ButtonEventQueue.ButtonEvent.kind:type_name -> cloud.lazycat.apis.sys.ButtonEventQueue.ButtonEventKind
	6, // 2: cloud.lazycat.apis.sys.ButtonEventQueue.ButtonEvent.timestamp:type_name -> google.protobuf.Timestamp
	1, // 3: cloud.lazycat.apis.sys.HalService.SetPLed:input_type -> cloud.lazycat.apis.sys.PLedState
	7, // 4: cloud.lazycat.apis.sys.HalService.GetPLed:input_type -> google.protobuf.Empty
	2, // 5: cloud.lazycat.apis.sys.HalService.SetSLed:input_type -> cloud.lazycat.apis.sys.SLedState
	7, // 6: cloud.lazycat.apis.sys.HalService.GetButtonEventQueue:input_type -> google.protobuf.Empty
	7, // 7: cloud.lazycat.apis.sys.HalService.GetFanRpm:input_type -> google.protobuf.Empty
	7, // 8: cloud.lazycat.apis.sys.HalService.SetPLed:output_type -> google.protobuf.Empty
	1, // 9: cloud.lazycat.apis.sys.HalService.GetPLed:output_type -> cloud.lazycat.apis.sys.PLedState
	7, // 10: cloud.lazycat.apis.sys.HalService.SetSLed:output_type -> google.protobuf.Empty
	3, // 11: cloud.lazycat.apis.sys.HalService.GetButtonEventQueue:output_type -> cloud.lazycat.apis.sys.ButtonEventQueue
	4, // 12: cloud.lazycat.apis.sys.HalService.GetFanRpm:output_type -> cloud.lazycat.apis.sys.FanRpm
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_sys_hal_proto_init() }
func file_sys_hal_proto_init() {
	if File_sys_hal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sys_hal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PLedState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_hal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SLedState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_hal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ButtonEventQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_hal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FanRpm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_hal_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ButtonEventQueue_ButtonEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sys_hal_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sys_hal_proto_goTypes,
		DependencyIndexes: file_sys_hal_proto_depIdxs,
		EnumInfos:         file_sys_hal_proto_enumTypes,
		MessageInfos:      file_sys_hal_proto_msgTypes,
	}.Build()
	File_sys_hal_proto = out.File
	file_sys_hal_proto_rawDesc = nil
	file_sys_hal_proto_goTypes = nil
	file_sys_hal_proto_depIdxs = nil
}
