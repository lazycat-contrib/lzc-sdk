// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.1
// source: sys/portal-server/portal-server.proto

package portal_server

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Role int32

const (
	Role_NORMAL Role = 0
	Role_ADMIN  Role = 1
)

// Enum value maps for Role.
var (
	Role_name = map[int32]string{
		0: "NORMAL",
		1: "ADMIN",
	}
	Role_value = map[string]int32{
		"NORMAL": 0,
		"ADMIN":  1,
	}
)

func (x Role) Enum() *Role {
	p := new(Role)
	*p = x
	return p
}

func (x Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Role) Descriptor() protoreflect.EnumDescriptor {
	return file_sys_portal_server_portal_server_proto_enumTypes[0].Descriptor()
}

func (Role) Type() protoreflect.EnumType {
	return &file_sys_portal_server_portal_server_proto_enumTypes[0]
}

func (x Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Role.Descriptor instead.
func (Role) EnumDescriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{0}
}

type RemoteSocksRequest_LocationType int32

const (
	RemoteSocksRequest_Unkonwn RemoteSocksRequest_LocationType = 0
	//在当前hserver所处的物理网络协议栈上提供socks服务
	RemoteSocksRequest_Local RemoteSocksRequest_LocationType = 1
	//在指定的的hclient所处的物理网络协议栈上提供socks服务
	RemoteSocksRequest_Remote RemoteSocksRequest_LocationType = 2
)

// Enum value maps for RemoteSocksRequest_LocationType.
var (
	RemoteSocksRequest_LocationType_name = map[int32]string{
		0: "Unkonwn",
		1: "Local",
		2: "Remote",
	}
	RemoteSocksRequest_LocationType_value = map[string]int32{
		"Unkonwn": 0,
		"Local":   1,
		"Remote":  2,
	}
)

func (x RemoteSocksRequest_LocationType) Enum() *RemoteSocksRequest_LocationType {
	p := new(RemoteSocksRequest_LocationType)
	*p = x
	return p
}

func (x RemoteSocksRequest_LocationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemoteSocksRequest_LocationType) Descriptor() protoreflect.EnumDescriptor {
	return file_sys_portal_server_portal_server_proto_enumTypes[1].Descriptor()
}

func (RemoteSocksRequest_LocationType) Type() protoreflect.EnumType {
	return &file_sys_portal_server_portal_server_proto_enumTypes[1]
}

func (x RemoteSocksRequest_LocationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemoteSocksRequest_LocationType.Descriptor instead.
func (RemoteSocksRequest_LocationType) EnumDescriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{0, 0}
}

type AuthToken_TokenType int32

const (
	AuthToken_Raw           AuthToken_TokenType = 0 // token return by hportal-server login method
	AuthToken_HTTPBasicAuth AuthToken_TokenType = 1 // QWxhZGRpbjpvcGVuIHNlc2FtZQ==
)

// Enum value maps for AuthToken_TokenType.
var (
	AuthToken_TokenType_name = map[int32]string{
		0: "Raw",
		1: "HTTPBasicAuth",
	}
	AuthToken_TokenType_value = map[string]int32{
		"Raw":           0,
		"HTTPBasicAuth": 1,
	}
)

func (x AuthToken_TokenType) Enum() *AuthToken_TokenType {
	p := new(AuthToken_TokenType)
	*p = x
	return p
}

func (x AuthToken_TokenType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthToken_TokenType) Descriptor() protoreflect.EnumDescriptor {
	return file_sys_portal_server_portal_server_proto_enumTypes[2].Descriptor()
}

func (AuthToken_TokenType) Type() protoreflect.EnumType {
	return &file_sys_portal_server_portal_server_proto_enumTypes[2]
}

func (x AuthToken_TokenType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthToken_TokenType.Descriptor instead.
func (AuthToken_TokenType) EnumDescriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{7, 0}
}

type ChangeTrustEndDeviceRequest_Action int32

const (
	ChangeTrustEndDeviceRequest_Add ChangeTrustEndDeviceRequest_Action = 0
	ChangeTrustEndDeviceRequest_Del ChangeTrustEndDeviceRequest_Action = 1
)

// Enum value maps for ChangeTrustEndDeviceRequest_Action.
var (
	ChangeTrustEndDeviceRequest_Action_name = map[int32]string{
		0: "Add",
		1: "Del",
	}
	ChangeTrustEndDeviceRequest_Action_value = map[string]int32{
		"Add": 0,
		"Del": 1,
	}
)

func (x ChangeTrustEndDeviceRequest_Action) Enum() *ChangeTrustEndDeviceRequest_Action {
	p := new(ChangeTrustEndDeviceRequest_Action)
	*p = x
	return p
}

func (x ChangeTrustEndDeviceRequest_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeTrustEndDeviceRequest_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_sys_portal_server_portal_server_proto_enumTypes[3].Descriptor()
}

func (ChangeTrustEndDeviceRequest_Action) Type() protoreflect.EnumType {
	return &file_sys_portal_server_portal_server_proto_enumTypes[3]
}

func (x ChangeTrustEndDeviceRequest_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeTrustEndDeviceRequest_Action.Descriptor instead.
func (ChangeTrustEndDeviceRequest_Action) EnumDescriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{25, 0}
}

type UpdateBoxSystemStatusRequest_SysStatus int32

const (
	// 系统正在启动中
	UpdateBoxSystemStatusRequest_Booting UpdateBoxSystemStatusRequest_SysStatus = 0
	// 处于正常可用状态
	// 一般此状态下service_url应该设置为https://$boxdomain
	// proxy_the_service_url和only_admin_can_access_service_url都设置为false
	UpdateBoxSystemStatusRequest_Normal UpdateBoxSystemStatusRequest_SysStatus = 1
	// 处于异常状态，具体原因可读取ExceptionReason
	// 一般此状态下service_url需要特殊设置且
	// proxy_the_service_url和only_admin_can_access_service_url都设置为true
	UpdateBoxSystemStatusRequest_Exception UpdateBoxSystemStatusRequest_SysStatus = 2
)

// Enum value maps for UpdateBoxSystemStatusRequest_SysStatus.
var (
	UpdateBoxSystemStatusRequest_SysStatus_name = map[int32]string{
		0: "Booting",
		1: "Normal",
		2: "Exception",
	}
	UpdateBoxSystemStatusRequest_SysStatus_value = map[string]int32{
		"Booting":   0,
		"Normal":    1,
		"Exception": 2,
	}
)

func (x UpdateBoxSystemStatusRequest_SysStatus) Enum() *UpdateBoxSystemStatusRequest_SysStatus {
	p := new(UpdateBoxSystemStatusRequest_SysStatus)
	*p = x
	return p
}

func (x UpdateBoxSystemStatusRequest_SysStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateBoxSystemStatusRequest_SysStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_sys_portal_server_portal_server_proto_enumTypes[4].Descriptor()
}

func (UpdateBoxSystemStatusRequest_SysStatus) Type() protoreflect.EnumType {
	return &file_sys_portal_server_portal_server_proto_enumTypes[4]
}

func (x UpdateBoxSystemStatusRequest_SysStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateBoxSystemStatusRequest_SysStatus.Descriptor instead.
func (UpdateBoxSystemStatusRequest_SysStatus) EnumDescriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{27, 0}
}

type UpdateBoxSystemStatusRequest_ExceptionReason int32

const (
	// 其他原因
	UpdateBoxSystemStatusRequest_Unknown UpdateBoxSystemStatusRequest_ExceptionReason = 0
	// 等待加密数据盘被解密
	UpdateBoxSystemStatusRequest_WaitDataDiskDecryption UpdateBoxSystemStatusRequest_ExceptionReason = 1
)

// Enum value maps for UpdateBoxSystemStatusRequest_ExceptionReason.
var (
	UpdateBoxSystemStatusRequest_ExceptionReason_name = map[int32]string{
		0: "Unknown",
		1: "WaitDataDiskDecryption",
	}
	UpdateBoxSystemStatusRequest_ExceptionReason_value = map[string]int32{
		"Unknown":                0,
		"WaitDataDiskDecryption": 1,
	}
)

func (x UpdateBoxSystemStatusRequest_ExceptionReason) Enum() *UpdateBoxSystemStatusRequest_ExceptionReason {
	p := new(UpdateBoxSystemStatusRequest_ExceptionReason)
	*p = x
	return p
}

func (x UpdateBoxSystemStatusRequest_ExceptionReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateBoxSystemStatusRequest_ExceptionReason) Descriptor() protoreflect.EnumDescriptor {
	return file_sys_portal_server_portal_server_proto_enumTypes[5].Descriptor()
}

func (UpdateBoxSystemStatusRequest_ExceptionReason) Type() protoreflect.EnumType {
	return &file_sys_portal_server_portal_server_proto_enumTypes[5]
}

func (x UpdateBoxSystemStatusRequest_ExceptionReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateBoxSystemStatusRequest_ExceptionReason.Descriptor instead.
func (UpdateBoxSystemStatusRequest_ExceptionReason) EnumDescriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{27, 1}
}

type LogoutRequest_Reason int32

const (
	LogoutRequest_LogoutAndDeleteEndDevice LogoutRequest_Reason = 0 //从受信任列表中，删除udid对应的设备
	LogoutRequest_LogoutByUser             LogoutRequest_Reason = 1 //仅强制注销udid对应的设备
)

// Enum value maps for LogoutRequest_Reason.
var (
	LogoutRequest_Reason_name = map[int32]string{
		0: "LogoutAndDeleteEndDevice",
		1: "LogoutByUser",
	}
	LogoutRequest_Reason_value = map[string]int32{
		"LogoutAndDeleteEndDevice": 0,
		"LogoutByUser":             1,
	}
)

func (x LogoutRequest_Reason) Enum() *LogoutRequest_Reason {
	p := new(LogoutRequest_Reason)
	*p = x
	return p
}

func (x LogoutRequest_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogoutRequest_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_sys_portal_server_portal_server_proto_enumTypes[6].Descriptor()
}

func (LogoutRequest_Reason) Type() protoreflect.EnumType {
	return &file_sys_portal_server_portal_server_proto_enumTypes[6]
}

func (x LogoutRequest_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogoutRequest_Reason.Descriptor instead.
func (LogoutRequest_Reason) EnumDescriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{33, 0}
}

type RemoteSocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationType RemoteSocksRequest_LocationType `protobuf:"varint,1,opt,name=location_type,json=locationType,proto3,enum=cloud.lazycat.apis.sys.RemoteSocksRequest_LocationType" json:"location_type,omitempty"`
	Target       string                          `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"` //若Type为Remote则，填写节点的peer.ID
}

func (x *RemoteSocksRequest) Reset() {
	*x = RemoteSocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteSocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteSocksRequest) ProtoMessage() {}

func (x *RemoteSocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteSocksRequest.ProtoReflect.Descriptor instead.
func (*RemoteSocksRequest) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{0}
}

func (x *RemoteSocksRequest) GetLocationType() RemoteSocksRequest_LocationType {
	if x != nil {
		return x.LocationType
	}
	return RemoteSocksRequest_Unkonwn
}

func (x *RemoteSocksRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type RemoteSocksReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerUrl string `protobuf:"bytes,1,opt,name=server_url,json=serverUrl,proto3" json:"server_url,omitempty"` //返回的socks5服务器地址
}

func (x *RemoteSocksReply) Reset() {
	*x = RemoteSocksReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteSocksReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteSocksReply) ProtoMessage() {}

func (x *RemoteSocksReply) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteSocksReply.ProtoReflect.Descriptor instead.
func (*RemoteSocksReply) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{1}
}

func (x *RemoteSocksReply) GetServerUrl() string {
	if x != nil {
		return x.ServerUrl
	}
	return ""
}

type ListUsersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uids []string `protobuf:"bytes,1,rep,name=uids,proto3" json:"uids,omitempty"`
}

func (x *ListUsersReply) Reset() {
	*x = ListUsersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersReply) ProtoMessage() {}

func (x *ListUsersReply) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersReply.ProtoReflect.Descriptor instead.
func (*ListUsersReply) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{2}
}

func (x *ListUsersReply) GetUids() []string {
	if x != nil {
		return x.Uids
	}
	return nil
}

type AllocVEIPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 简短说明使用原因，方便后续管理
	Usage string `protobuf:"bytes,1,opt,name=usage,proto3" json:"usage,omitempty"`
	// 关联的子域名。hserver会自动将$subdomain.$boxdomain的AAAA/A记录关联到对应的IP上
	// 1. 外部系统需要自行确保subdomain不会冲突
	Subdomain string `protobuf:"bytes,2,opt,name=subdomain,proto3" json:"subdomain,omitempty"`
}

func (x *AllocVEIPRequest) Reset() {
	*x = AllocVEIPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocVEIPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocVEIPRequest) ProtoMessage() {}

func (x *AllocVEIPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocVEIPRequest.ProtoReflect.Descriptor instead.
func (*AllocVEIPRequest) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{3}
}

func (x *AllocVEIPRequest) GetUsage() string {
	if x != nil {
		return x.Usage
	}
	return ""
}

func (x *AllocVEIPRequest) GetSubdomain() string {
	if x != nil {
		return x.Subdomain
	}
	return ""
}

type AllocVEIPReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *AllocVEIPReply) Reset() {
	*x = AllocVEIPReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocVEIPReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocVEIPReply) ProtoMessage() {}

func (x *AllocVEIPReply) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocVEIPReply.ProtoReflect.Descriptor instead.
func (*AllocVEIPReply) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{4}
}

func (x *AllocVEIPReply) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type FreeVEIPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	// 释放VEIP时为了避免DNS cache的问题，会在删除对应DNS record后等待一定时间后再真实的释放对应VEIP
	// 不指定则默认为10分钟
	WaitSecond int32 `protobuf:"varint,2,opt,name=wait_second,json=waitSecond,proto3" json:"wait_second,omitempty"`
}

func (x *FreeVEIPRequest) Reset() {
	*x = FreeVEIPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreeVEIPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeVEIPRequest) ProtoMessage() {}

func (x *FreeVEIPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeVEIPRequest.ProtoReflect.Descriptor instead.
func (*FreeVEIPRequest) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{5}
}

func (x *FreeVEIPRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *FreeVEIPRequest) GetWaitSecond() int32 {
	if x != nil {
		return x.WaitSecond
	}
	return 0
}

type FreeVEIPReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FreeVEIPReply) Reset() {
	*x = FreeVEIPReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreeVEIPReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeVEIPReply) ProtoMessage() {}

func (x *FreeVEIPReply) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeVEIPReply.ProtoReflect.Descriptor instead.
func (*FreeVEIPReply) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{6}
}

type AuthToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 登陆时服务器返回的token
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// 若token_type = HTTPBasicAuth
	// 则必须包含此字段，以便hportal可以分析出正确的登陆设备
	// 若仅仅是为了验证帐号密码是否正确，直接调用CheckPassword接口
	AccessIp  string              `protobuf:"bytes,3,opt,name=access_ip,json=accessIp,proto3" json:"access_ip,omitempty"`
	TokenType AuthToken_TokenType `protobuf:"varint,5,opt,name=token_type,json=tokenType,proto3,enum=cloud.lazycat.apis.sys.AuthToken_TokenType" json:"token_type,omitempty"`
	// 若设置了此地址，则在未检测到auth-token时，
	// 可以使用返回信息中的autologin_token_request_url进行自动查找auth-token
	// 此地址一般是ingress等组件上提供的服务。
	// 会通过html post form形式调用，附带token和redirect两个字段
	// token为自动搜索到的token，redirect为AuthToken.autologin_redirect_url的值。
	// 若token为空表示自动搜索token失败。
	//
	// Deprecated: Do not use.
	AutologinTokenPostUrl string `protobuf:"bytes,2,opt,name=autologin_token_post_url,json=autologinTokenPostUrl,proto3" json:"autologin_token_post_url,omitempty"`
	// Deprecated: Do not use.
	AutologinRedirectUrl string `protobuf:"bytes,4,opt,name=autologin_redirect_url,json=autologinRedirectUrl,proto3" json:"autologin_redirect_url,omitempty"`
}

func (x *AuthToken) Reset() {
	*x = AuthToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthToken) ProtoMessage() {}

func (x *AuthToken) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthToken.ProtoReflect.Descriptor instead.
func (*AuthToken) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{7}
}

func (x *AuthToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AuthToken) GetAccessIp() string {
	if x != nil {
		return x.AccessIp
	}
	return ""
}

func (x *AuthToken) GetTokenType() AuthToken_TokenType {
	if x != nil {
		return x.TokenType
	}
	return AuthToken_Raw
}

// Deprecated: Do not use.
func (x *AuthToken) GetAutologinTokenPostUrl() string {
	if x != nil {
		return x.AutologinTokenPostUrl
	}
	return ""
}

// Deprecated: Do not use.
func (x *AuthToken) GetAutologinRedirectUrl() string {
	if x != nil {
		return x.AutologinRedirectUrl
	}
	return ""
}

type LoginInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	DeviceId string `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// 最近登陆时间，因为针对弱网优化因此不一定等于本次登陆时间
	// 只有hserver重启或调用了ClearLoginSession后，才会真属于退出状态
	When *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=when,proto3" json:"when,omitempty"`
	// 若uid为空, ingress应该返回此html内容给浏览器进行自动登陆。
	// 此html片段会尝试与hclient通讯获取auth-token后post到AuthToken.autologin_token_post_url上
	//
	// Deprecated: Do not use.
	AutologinTokenRequestContent string `protobuf:"bytes,4,opt,name=autologin_token_request_content,json=autologinTokenRequestContent,proto3" json:"autologin_token_request_content,omitempty"`
	// 当前登陆设备的版本信息
	DeviceVersion string `protobuf:"bytes,5,opt,name=device_version,json=deviceVersion,proto3" json:"device_version,omitempty"`
	// 登陆时服务器返回的token
	Token string `protobuf:"bytes,6,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *LoginInfo) Reset() {
	*x = LoginInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginInfo) ProtoMessage() {}

func (x *LoginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginInfo.ProtoReflect.Descriptor instead.
func (*LoginInfo) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{8}
}

func (x *LoginInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *LoginInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *LoginInfo) GetWhen() *timestamppb.Timestamp {
	if x != nil {
		return x.When
	}
	return nil
}

// Deprecated: Do not use.
func (x *LoginInfo) GetAutologinTokenRequestContent() string {
	if x != nil {
		return x.AutologinTokenRequestContent
	}
	return ""
}

func (x *LoginInfo) GetDeviceVersion() string {
	if x != nil {
		return x.DeviceVersion
	}
	return ""
}

func (x *LoginInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type DeviceID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeviceID) Reset() {
	*x = DeviceID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceID) ProtoMessage() {}

func (x *DeviceID) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceID.ProtoReflect.Descriptor instead.
func (*DeviceID) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{9}
}

func (x *DeviceID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type BoxInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 中心化服务器地址, 默认为origin.lazycat.cloud
	OriginServer string `protobuf:"bytes,1,opt,name=origin_server,json=originServer,proto3" json:"origin_server,omitempty"`
	// fc03:1136:38/40地址
	VirtualIp string `protobuf:"bytes,2,opt,name=virtual_ip,json=virtualIp,proto3" json:"virtual_ip,omitempty"`
	// p2p节点id
	BoxId string `protobuf:"bytes,3,opt,name=box_id,json=boxId,proto3" json:"box_id,omitempty"`
	// 注册到origin-server内的名称
	BoxName string `protobuf:"bytes,4,opt,name=box_name,json=boxName,proto3" json:"box_name,omitempty"`
	// 从origin-server获取到的域名
	BoxDomain string `protobuf:"bytes,5,opt,name=box_domain,json=boxDomain,proto3" json:"box_domain,omitempty"`
	// 证书管理器已经就续
	CertReady bool `protobuf:"varint,6,opt,name=cert_ready,json=certReady,proto3" json:"cert_ready,omitempty"`
	// PEM格式的盒子证书, 作为盒子系统其他app cert的CA证书。
	BoxCert string `protobuf:"bytes,7,opt,name=box_cert,json=boxCert,proto3" json:"box_cert,omitempty"`
}

func (x *BoxInfo) Reset() {
	*x = BoxInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoxInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoxInfo) ProtoMessage() {}

func (x *BoxInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoxInfo.ProtoReflect.Descriptor instead.
func (*BoxInfo) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{10}
}

func (x *BoxInfo) GetOriginServer() string {
	if x != nil {
		return x.OriginServer
	}
	return ""
}

func (x *BoxInfo) GetVirtualIp() string {
	if x != nil {
		return x.VirtualIp
	}
	return ""
}

func (x *BoxInfo) GetBoxId() string {
	if x != nil {
		return x.BoxId
	}
	return ""
}

func (x *BoxInfo) GetBoxName() string {
	if x != nil {
		return x.BoxName
	}
	return ""
}

func (x *BoxInfo) GetBoxDomain() string {
	if x != nil {
		return x.BoxDomain
	}
	return ""
}

func (x *BoxInfo) GetCertReady() bool {
	if x != nil {
		return x.CertReady
	}
	return false
}

func (x *BoxInfo) GetBoxCert() string {
	if x != nil {
		return x.BoxCert
	}
	return ""
}

type DomainCertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *DomainCertRequest) Reset() {
	*x = DomainCertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainCertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainCertRequest) ProtoMessage() {}

func (x *DomainCertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainCertRequest.ProtoReflect.Descriptor instead.
func (*DomainCertRequest) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{11}
}

func (x *DomainCertRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type DomainCertReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cert string `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	Key  string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Ocsp []byte `protobuf:"bytes,3,opt,name=ocsp,proto3" json:"ocsp,omitempty"`
}

func (x *DomainCertReply) Reset() {
	*x = DomainCertReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainCertReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainCertReply) ProtoMessage() {}

func (x *DomainCertReply) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainCertReply.ProtoReflect.Descriptor instead.
func (*DomainCertReply) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{12}
}

func (x *DomainCertReply) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *DomainCertReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DomainCertReply) GetOcsp() []byte {
	if x != nil {
		return x.Ocsp
	}
	return nil
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 设备的唯一ID
	Udid string `protobuf:"bytes,7,opt,name=udid,proto3" json:"udid,omitempty"`
	// 此设备当前是否连接到盒子
	IsOnline bool `protobuf:"varint,2,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	// 因为device api的监听端口可能会变化，所以此url有效性不会太长
	DeviceApiUrl string `protobuf:"bytes,3,opt,name=device_api_url,json=deviceApiUrl,proto3" json:"device_api_url,omitempty"`
	// 设备名称
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// 设备型号
	Model string `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	// 设备绑定时间
	BindingTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=binding_time,json=bindingTime,proto3" json:"binding_time,omitempty"`
	// TODO 待删除, 上层不应该感知peer_id
	//
	// Deprecated: Do not use.
	PeerId string `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	// 设备是否是移动平台
	// 此字段应该由上层代码自行分析
	//
	// Deprecated: Do not use.
	IsMobile bool `protobuf:"varint,8,opt,name=is_mobile,json=isMobile,proto3" json:"is_mobile,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{13}
}

func (x *Device) GetUdid() string {
	if x != nil {
		return x.Udid
	}
	return ""
}

func (x *Device) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *Device) GetDeviceApiUrl() string {
	if x != nil {
		return x.DeviceApiUrl
	}
	return ""
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Device) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Device) GetBindingTime() *timestamppb.Timestamp {
	if x != nil {
		return x.BindingTime
	}
	return nil
}

// Deprecated: Do not use.
func (x *Device) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

// Deprecated: Do not use.
func (x *Device) GetIsMobile() bool {
	if x != nil {
		return x.IsMobile
	}
	return false
}

type ListDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ListDeviceRequest) Reset() {
	*x = ListDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceRequest) ProtoMessage() {}

func (x *ListDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceRequest.ProtoReflect.Descriptor instead.
func (*ListDeviceRequest) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{14}
}

func (x *ListDeviceRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type ListDeviceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []*Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *ListDeviceReply) Reset() {
	*x = ListDeviceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDeviceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeviceReply) ProtoMessage() {}

func (x *ListDeviceReply) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeviceReply.ProtoReflect.Descriptor instead.
func (*ListDeviceReply) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{15}
}

func (x *ListDeviceReply) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type UserID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *UserID) Reset() {
	*x = UserID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserID) ProtoMessage() {}

func (x *UserID) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserID.ProtoReflect.Descriptor instead.
func (*UserID) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{16}
}

func (x *UserID) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type ChangeRoleReqeust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Role Role   `protobuf:"varint,2,opt,name=role,proto3,enum=cloud.lazycat.apis.sys.Role" json:"role,omitempty"`
}

func (x *ChangeRoleReqeust) Reset() {
	*x = ChangeRoleReqeust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeRoleReqeust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRoleReqeust) ProtoMessage() {}

func (x *ChangeRoleReqeust) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRoleReqeust.ProtoReflect.Descriptor instead.
func (*ChangeRoleReqeust) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{17}
}

func (x *ChangeRoleReqeust) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ChangeRoleReqeust) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_NORMAL
}

type QueryRoleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Role Role   `protobuf:"varint,2,opt,name=role,proto3,enum=cloud.lazycat.apis.sys.Role" json:"role,omitempty"`
}

func (x *QueryRoleReply) Reset() {
	*x = QueryRoleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRoleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRoleReply) ProtoMessage() {}

func (x *QueryRoleReply) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRoleReply.ProtoReflect.Descriptor instead.
func (*QueryRoleReply) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{18}
}

func (x *QueryRoleReply) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *QueryRoleReply) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_NORMAL
}

type ResetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	NewPassword string `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
}

func (x *ResetPasswordRequest) Reset() {
	*x = ResetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordRequest) ProtoMessage() {}

func (x *ResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{19}
}

func (x *ResetPasswordRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ResetPasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type DeleteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteUserRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Role     Role   `protobuf:"varint,3,opt,name=role,proto3,enum=cloud.lazycat.apis.sys.Role" json:"role,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{21}
}

func (x *CreateUserRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *CreateUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateUserRequest) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_NORMAL
}

type CheckPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *CheckPasswordRequest) Reset() {
	*x = CheckPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPasswordRequest) ProtoMessage() {}

func (x *CheckPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPasswordRequest.ProtoReflect.Descriptor instead.
func (*CheckPasswordRequest) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{22}
}

func (x *CheckPasswordRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *CheckPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ClearLoginSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 对此UID下的所有设备进行处理
	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 但不对以下设备进行操作
	ExcludeDevices []string `protobuf:"bytes,2,rep,name=exclude_devices,json=excludeDevices,proto3" json:"exclude_devices,omitempty"`
}

func (x *ClearLoginSessionRequest) Reset() {
	*x = ClearLoginSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearLoginSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearLoginSessionRequest) ProtoMessage() {}

func (x *ClearLoginSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearLoginSessionRequest.ProtoReflect.Descriptor instead.
func (*ClearLoginSessionRequest) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{23}
}

func (x *ClearLoginSessionRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ClearLoginSessionRequest) GetExcludeDevices() []string {
	if x != nil {
		return x.ExcludeDevices
	}
	return nil
}

type ClearLoginSessionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearLoginSessionReply) Reset() {
	*x = ClearLoginSessionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearLoginSessionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearLoginSessionReply) ProtoMessage() {}

func (x *ClearLoginSessionReply) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearLoginSessionReply.ProtoReflect.Descriptor instead.
func (*ClearLoginSessionReply) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{24}
}

type ChangeTrustEndDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    string                             `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Cid    string                             `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"` //如果是Add,则此字段内容应该为合法的PeerID，若为Del则应该是device_id
	Action ChangeTrustEndDeviceRequest_Action `protobuf:"varint,3,opt,name=action,proto3,enum=cloud.lazycat.apis.sys.ChangeTrustEndDeviceRequest_Action" json:"action,omitempty"`
}

func (x *ChangeTrustEndDeviceRequest) Reset() {
	*x = ChangeTrustEndDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeTrustEndDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTrustEndDeviceRequest) ProtoMessage() {}

func (x *ChangeTrustEndDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTrustEndDeviceRequest.ProtoReflect.Descriptor instead.
func (*ChangeTrustEndDeviceRequest) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{25}
}

func (x *ChangeTrustEndDeviceRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ChangeTrustEndDeviceRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *ChangeTrustEndDeviceRequest) GetAction() ChangeTrustEndDeviceRequest_Action {
	if x != nil {
		return x.Action
	}
	return ChangeTrustEndDeviceRequest_Add
}

type ChangeTrustEndDeviceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangeTrustEndDeviceReply) Reset() {
	*x = ChangeTrustEndDeviceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeTrustEndDeviceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTrustEndDeviceReply) ProtoMessage() {}

func (x *ChangeTrustEndDeviceReply) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTrustEndDeviceReply.ProtoReflect.Descriptor instead.
func (*ChangeTrustEndDeviceReply) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{26}
}

// 此message的字段需要和hportal/apis/boxapi/common.proto中的BoxSystemStatus保持同步
type UpdateBoxSystemStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          UpdateBoxSystemStatusRequest_SysStatus        `protobuf:"varint,1,opt,name=status,proto3,enum=cloud.lazycat.apis.sys.UpdateBoxSystemStatusRequest_SysStatus" json:"status,omitempty"`
	ServiceUrl      string                                        `protobuf:"bytes,2,opt,name=service_url,json=serviceUrl,proto3" json:"service_url,omitempty"`
	ExceptionReason *UpdateBoxSystemStatusRequest_ExceptionReason `protobuf:"varint,3,opt,name=exception_reason,json=exceptionReason,proto3,enum=cloud.lazycat.apis.sys.UpdateBoxSystemStatusRequest_ExceptionReason,oneof" json:"exception_reason,omitempty"`
	// 若为true, 在hclient侧生成一个临时的[fc03:1136:3800::1]:$x地址提供给客户端访问.
	// 具体会体现在shellapi.proto:BoxInfo.BoxHomeUrl上
	ProxyTheServiceUrl bool `protobuf:"varint,4,opt,name=proxy_the_service_url,json=proxyTheServiceUrl,proto3" json:"proxy_the_service_url,omitempty"`
	// 在proxy_the_service_url=true时，支持设置是否仅管理员用户可以访问service_url
	// 此处的权限管控仅是网络传输层面,service_url本身需要做基本的网络隔离，比如使用unix socket协议
	OnlyAdminCanAccessServiceUrl bool `protobuf:"varint,5,opt,name=only_admin_can_access_service_url,json=onlyAdminCanAccessServiceUrl,proto3" json:"only_admin_can_access_service_url,omitempty"`
}

func (x *UpdateBoxSystemStatusRequest) Reset() {
	*x = UpdateBoxSystemStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBoxSystemStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBoxSystemStatusRequest) ProtoMessage() {}

func (x *UpdateBoxSystemStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBoxSystemStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateBoxSystemStatusRequest) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateBoxSystemStatusRequest) GetStatus() UpdateBoxSystemStatusRequest_SysStatus {
	if x != nil {
		return x.Status
	}
	return UpdateBoxSystemStatusRequest_Booting
}

func (x *UpdateBoxSystemStatusRequest) GetServiceUrl() string {
	if x != nil {
		return x.ServiceUrl
	}
	return ""
}

func (x *UpdateBoxSystemStatusRequest) GetExceptionReason() UpdateBoxSystemStatusRequest_ExceptionReason {
	if x != nil && x.ExceptionReason != nil {
		return *x.ExceptionReason
	}
	return UpdateBoxSystemStatusRequest_Unknown
}

func (x *UpdateBoxSystemStatusRequest) GetProxyTheServiceUrl() bool {
	if x != nil {
		return x.ProxyTheServiceUrl
	}
	return false
}

func (x *UpdateBoxSystemStatusRequest) GetOnlyAdminCanAccessServiceUrl() bool {
	if x != nil {
		return x.OnlyAdminCanAccessServiceUrl
	}
	return false
}

type UpdateBoxSystemStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateBoxSystemStatusResponse) Reset() {
	*x = UpdateBoxSystemStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBoxSystemStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBoxSystemStatusResponse) ProtoMessage() {}

func (x *UpdateBoxSystemStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBoxSystemStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateBoxSystemStatusResponse) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{28}
}

// 以下接口废弃-------------------------
//
// Deprecated: Do not use.
type UpdateBoxStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 盒子是否启动完毕
	StartUp *bool `protobuf:"varint,1,opt,name=start_up,json=startUp,proto3,oneof" json:"start_up,omitempty"`
	// 盒子数据盘状态是否OK
	DataPartition *bool `protobuf:"varint,2,opt,name=data_partition,json=dataPartition,proto3,oneof" json:"data_partition,omitempty"`
}

func (x *UpdateBoxStatusRequest) Reset() {
	*x = UpdateBoxStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBoxStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBoxStatusRequest) ProtoMessage() {}

func (x *UpdateBoxStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBoxStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateBoxStatusRequest) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateBoxStatusRequest) GetStartUp() bool {
	if x != nil && x.StartUp != nil {
		return *x.StartUp
	}
	return false
}

func (x *UpdateBoxStatusRequest) GetDataPartition() bool {
	if x != nil && x.DataPartition != nil {
		return *x.DataPartition
	}
	return false
}

// Deprecated: Do not use.
type UpdateBoxStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateBoxStatusResponse) Reset() {
	*x = UpdateBoxStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBoxStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBoxStatusResponse) ProtoMessage() {}

func (x *UpdateBoxStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBoxStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateBoxStatusResponse) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{30}
}

// Deprecated: Do not use.
type TrustUserDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Udid string `protobuf:"bytes,1,opt,name=udid,proto3" json:"udid,omitempty"`
	User string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *TrustUserDeviceRequest) Reset() {
	*x = TrustUserDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrustUserDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustUserDeviceRequest) ProtoMessage() {}

func (x *TrustUserDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustUserDeviceRequest.ProtoReflect.Descriptor instead.
func (*TrustUserDeviceRequest) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{31}
}

func (x *TrustUserDeviceRequest) GetUdid() string {
	if x != nil {
		return x.Udid
	}
	return ""
}

func (x *TrustUserDeviceRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

// Deprecated: Do not use.
type ForceResetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	NewPassword string `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
}

func (x *ForceResetPasswordRequest) Reset() {
	*x = ForceResetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForceResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceResetPasswordRequest) ProtoMessage() {}

func (x *ForceResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*ForceResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{32}
}

func (x *ForceResetPasswordRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ForceResetPasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

// Deprecated: Do not use.
type LogoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 设备唯一id
	Udid string `protobuf:"bytes,2,opt,name=udid,proto3" json:"udid,omitempty"` //若为空，表示uid下的所有设备
	// 注销原因
	Reason LogoutRequest_Reason `protobuf:"varint,3,opt,name=reason,proto3,enum=cloud.lazycat.apis.sys.LogoutRequest_Reason" json:"reason,omitempty"`
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRequest.ProtoReflect.Descriptor instead.
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{33}
}

func (x *LogoutRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *LogoutRequest) GetUdid() string {
	if x != nil {
		return x.Udid
	}
	return ""
}

func (x *LogoutRequest) GetReason() LogoutRequest_Reason {
	if x != nil {
		return x.Reason
	}
	return LogoutRequest_LogoutAndDeleteEndDevice
}

type AppCertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	// 单实例则为空，多实例为APP所部署时的UID
	Uid string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// 证书有效时间，单位s
	ValidSeconds int32 `protobuf:"varint,3,opt,name=valid_seconds,json=validSeconds,proto3" json:"valid_seconds,omitempty"`
}

func (x *AppCertRequest) Reset() {
	*x = AppCertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppCertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppCertRequest) ProtoMessage() {}

func (x *AppCertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppCertRequest.ProtoReflect.Descriptor instead.
func (*AppCertRequest) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{34}
}

func (x *AppCertRequest) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *AppCertRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AppCertRequest) GetValidSeconds() int32 {
	if x != nil {
		return x.ValidSeconds
	}
	return 0
}

type AppCertReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PEM格式的APP证书
	Cert string `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	// PEM格式的APP私钥
	PrivateKey string `protobuf:"bytes,2,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// 盒子证书，同一盒子内所有app的box_cert都是相同的，
	// 可以作为CA证书的角色来使用
	BoxCert string `protobuf:"bytes,3,opt,name=box_cert,json=boxCert,proto3" json:"box_cert,omitempty"`
}

func (x *AppCertReply) Reset() {
	*x = AppCertReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_portal_server_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppCertReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppCertReply) ProtoMessage() {}

func (x *AppCertReply) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_portal_server_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppCertReply.ProtoReflect.Descriptor instead.
func (*AppCertReply) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_portal_server_proto_rawDescGZIP(), []int{35}
}

func (x *AppCertReply) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *AppCertReply) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *AppCertReply) GetBoxCert() string {
	if x != nil {
		return x.BoxCert
	}
	return ""
}

var File_sys_portal_server_portal_server_proto protoreflect.FileDescriptor

var file_sys_portal_server_portal_server_proto_rawDesc = []byte{
	0x0a, 0x25, 0x73, 0x79, 0x73, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x01,
	0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x6f, 0x63, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x32, 0x0a, 0x0c, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e,
	0x6b, 0x6f, 0x6e, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x10, 0x02, 0x22, 0x31,
	0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x72,
	0x6c, 0x22, 0x24, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x69, 0x64, 0x73, 0x22, 0x46, 0x0a, 0x10, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x56, 0x45, 0x49, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22,
	0x20, 0x0a, 0x0e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x56, 0x45, 0x49, 0x50, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x70, 0x22, 0x42, 0x0a, 0x0f, 0x46, 0x72, 0x65, 0x65, 0x56, 0x45, 0x49, 0x50, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x77, 0x61, 0x69, 0x74, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x46, 0x72, 0x65, 0x65, 0x56, 0x45, 0x49,
	0x50, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xaa, 0x02, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x70, 0x12, 0x4a, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x18, 0x61, 0x75, 0x74, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x72, 0x6c,
	0x12, 0x38, 0x0a, 0x16, 0x61, 0x75, 0x74, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x14, 0x61, 0x75, 0x74, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x27, 0x0a, 0x09, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x61, 0x77, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x48, 0x54, 0x54, 0x50, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74,
	0x68, 0x10, 0x01, 0x22, 0xf2, 0x01, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x2e, 0x0a, 0x04, 0x77, 0x68, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x77, 0x68, 0x65, 0x6e,
	0x12, 0x49, 0x0a, 0x1f, 0x61, 0x75, 0x74, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x1c, 0x61,
	0x75, 0x74, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xd8, 0x01, 0x0a, 0x07, 0x42, 0x6f, 0x78, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x49, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62,
	0x6f, 0x78, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x6f, 0x78, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x78, 0x5f, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x78, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x78, 0x5f, 0x63, 0x65, 0x72, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6f, 0x78, 0x43, 0x65, 0x72, 0x74, 0x22,
	0x2b, 0x0a, 0x11, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x4b, 0x0a, 0x0f,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x65, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x63, 0x73, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x6f, 0x63, 0x73, 0x70, 0x22, 0x86, 0x02, 0x0a, 0x06, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x64, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x64, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x3d, 0x0a, 0x0c, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x22, 0x25, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x4b, 0x0a, 0x0f, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x07,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x1a, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x57, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x65, 0x75, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x54, 0x0a, 0x0e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x30, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x22, 0x51, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e,
	0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4a, 0x04,
	0x08, 0x02, 0x10, 0x03, 0x22, 0x25, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x73, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x30,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x22, 0x44, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x55, 0x0a, 0x18, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x18, 0x0a,
	0x16, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xb1, 0x01, 0x0a, 0x1b, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x52, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x45, 0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x1a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x64, 0x64,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x65, 0x6c, 0x10, 0x01, 0x22, 0x1b, 0x0a, 0x19, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x8f, 0x04, 0x0a, 0x1c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x6f, 0x78, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x78, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x53, 0x79, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x74, 0x0a, 0x10, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x78, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x5f, 0x74, 0x68, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x54, 0x68,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x47, 0x0a, 0x21, 0x6f,
	0x6e, 0x6c, 0x79, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x6f, 0x6e, 0x6c, 0x79, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x43, 0x61, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x72, 0x6c, 0x22, 0x33, 0x0a, 0x09, 0x53, 0x79, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x78,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x22, 0x3a, 0x0a, 0x0f, 0x45, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x57, 0x61, 0x69,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69, 0x73, 0x6b, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x1f, 0x0a, 0x1d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x78, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x16,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x55, 0x70, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01,
	0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x3a, 0x02, 0x18, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x75, 0x70, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1d, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x6f, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x44, 0x0a, 0x16, 0x54, 0x72, 0x75, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x64, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x54, 0x0a, 0x19, 0x46,
	0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65,
	0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x02, 0x18,
	0x01, 0x22, 0xb9, 0x01, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x64, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x64, 0x69, 0x64, 0x12, 0x44, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x38, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x18, 0x4c, 0x6f, 0x67,
	0x6f, 0x75, 0x74, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x10, 0x01, 0x3a, 0x02, 0x18, 0x01, 0x22, 0x5d, 0x0a,
	0x0e, 0x41, 0x70, 0x70, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x5e, 0x0a, 0x0c,
	0x41, 0x70, 0x70, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x78, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6f, 0x78, 0x43, 0x65, 0x72, 0x74, 0x2a, 0x1d, 0x0a, 0x04,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x01, 0x32, 0xc2, 0x12, 0x0a, 0x0a,
	0x48, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x53, 0x79, 0x73, 0x12, 0x54, 0x0a, 0x0a, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x21, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x21, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00,
	0x12, 0x49, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x6f, 0x78, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x42, 0x6f, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x12, 0x29, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x6c, 0x0a, 0x16, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50, 0x12, 0x28, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x56, 0x45, 0x49, 0x50, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x56, 0x45, 0x49, 0x50, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x69, 0x0a, 0x15, 0x46, 0x72, 0x65, 0x65, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x50, 0x12, 0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x56, 0x45, 0x49, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63,
	0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x46, 0x72, 0x65, 0x65,
	0x56, 0x45, 0x49, 0x50, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x09, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x29, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x57, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0d, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2c, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x55, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x1e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a,
	0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0a, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x65, 0x75,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a,
	0x14, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61,
	0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x45, 0x6e, 0x64, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x45,
	0x6e, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x63, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x29,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x1a, 0x1e, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x11, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63,
	0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x6f,
	0x63, 0x6b, 0x73, 0x12, 0x2a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79,
	0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x53, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53,
	0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a, 0x15,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x78, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61,
	0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x78, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x78, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x53, 0x65, 0x6c, 0x66, 0x43, 0x65, 0x72, 0x74, 0x12, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73,
	0x79, 0x73, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a,
	0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x03, 0x88,
	0x02, 0x01, 0x12, 0x77, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x78, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61,
	0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61,
	0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x03, 0x88, 0x02, 0x01, 0x12, 0x64, 0x0a, 0x12, 0x46,
	0x6f, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x31, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x03, 0x88, 0x02,
	0x01, 0x12, 0x4c, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x25, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x03, 0x88, 0x02, 0x01, 0x12,
	0x5e, 0x0a, 0x0f, 0x54, 0x72, 0x75, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x2e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63,
	0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x54, 0x72, 0x75, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x03, 0x88, 0x02, 0x01, 0x12,
	0x5f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x65, 0x72, 0x74, 0x12, 0x26, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61,
	0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x41,
	0x70, 0x70, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x03, 0x88, 0x02, 0x01,
	0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69,
	0x6e, 0x61, 0x6b, 0x65, 0x73, 0x69, 0x2f, 0x6c, 0x7a, 0x63, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x6c,
	0x61, 0x6e, 0x67, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x61,
	0x6c, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sys_portal_server_portal_server_proto_rawDescOnce sync.Once
	file_sys_portal_server_portal_server_proto_rawDescData = file_sys_portal_server_portal_server_proto_rawDesc
)

func file_sys_portal_server_portal_server_proto_rawDescGZIP() []byte {
	file_sys_portal_server_portal_server_proto_rawDescOnce.Do(func() {
		file_sys_portal_server_portal_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_sys_portal_server_portal_server_proto_rawDescData)
	})
	return file_sys_portal_server_portal_server_proto_rawDescData
}

var file_sys_portal_server_portal_server_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_sys_portal_server_portal_server_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_sys_portal_server_portal_server_proto_goTypes = []interface{}{
	(Role)(0),                                         // 0: cloud.lazycat.apis.sys.Role
	(RemoteSocksRequest_LocationType)(0),              // 1: cloud.lazycat.apis.sys.RemoteSocksRequest.LocationType
	(AuthToken_TokenType)(0),                          // 2: cloud.lazycat.apis.sys.AuthToken.TokenType
	(ChangeTrustEndDeviceRequest_Action)(0),           // 3: cloud.lazycat.apis.sys.ChangeTrustEndDeviceRequest.Action
	(UpdateBoxSystemStatusRequest_SysStatus)(0),       // 4: cloud.lazycat.apis.sys.UpdateBoxSystemStatusRequest.SysStatus
	(UpdateBoxSystemStatusRequest_ExceptionReason)(0), // 5: cloud.lazycat.apis.sys.UpdateBoxSystemStatusRequest.ExceptionReason
	(LogoutRequest_Reason)(0),                         // 6: cloud.lazycat.apis.sys.LogoutRequest.Reason
	(*RemoteSocksRequest)(nil),                        // 7: cloud.lazycat.apis.sys.RemoteSocksRequest
	(*RemoteSocksReply)(nil),                          // 8: cloud.lazycat.apis.sys.RemoteSocksReply
	(*ListUsersReply)(nil),                            // 9: cloud.lazycat.apis.sys.ListUsersReply
	(*AllocVEIPRequest)(nil),                          // 10: cloud.lazycat.apis.sys.AllocVEIPRequest
	(*AllocVEIPReply)(nil),                            // 11: cloud.lazycat.apis.sys.AllocVEIPReply
	(*FreeVEIPRequest)(nil),                           // 12: cloud.lazycat.apis.sys.FreeVEIPRequest
	(*FreeVEIPReply)(nil),                             // 13: cloud.lazycat.apis.sys.FreeVEIPReply
	(*AuthToken)(nil),                                 // 14: cloud.lazycat.apis.sys.AuthToken
	(*LoginInfo)(nil),                                 // 15: cloud.lazycat.apis.sys.LoginInfo
	(*DeviceID)(nil),                                  // 16: cloud.lazycat.apis.sys.DeviceID
	(*BoxInfo)(nil),                                   // 17: cloud.lazycat.apis.sys.BoxInfo
	(*DomainCertRequest)(nil),                         // 18: cloud.lazycat.apis.sys.DomainCertRequest
	(*DomainCertReply)(nil),                           // 19: cloud.lazycat.apis.sys.DomainCertReply
	(*Device)(nil),                                    // 20: cloud.lazycat.apis.sys.Device
	(*ListDeviceRequest)(nil),                         // 21: cloud.lazycat.apis.sys.ListDeviceRequest
	(*ListDeviceReply)(nil),                           // 22: cloud.lazycat.apis.sys.ListDeviceReply
	(*UserID)(nil),                                    // 23: cloud.lazycat.apis.sys.UserID
	(*ChangeRoleReqeust)(nil),                         // 24: cloud.lazycat.apis.sys.ChangeRoleReqeust
	(*QueryRoleReply)(nil),                            // 25: cloud.lazycat.apis.sys.QueryRoleReply
	(*ResetPasswordRequest)(nil),                      // 26: cloud.lazycat.apis.sys.ResetPasswordRequest
	(*DeleteUserRequest)(nil),                         // 27: cloud.lazycat.apis.sys.DeleteUserRequest
	(*CreateUserRequest)(nil),                         // 28: cloud.lazycat.apis.sys.CreateUserRequest
	(*CheckPasswordRequest)(nil),                      // 29: cloud.lazycat.apis.sys.CheckPasswordRequest
	(*ClearLoginSessionRequest)(nil),                  // 30: cloud.lazycat.apis.sys.ClearLoginSessionRequest
	(*ClearLoginSessionReply)(nil),                    // 31: cloud.lazycat.apis.sys.ClearLoginSessionReply
	(*ChangeTrustEndDeviceRequest)(nil),               // 32: cloud.lazycat.apis.sys.ChangeTrustEndDeviceRequest
	(*ChangeTrustEndDeviceReply)(nil),                 // 33: cloud.lazycat.apis.sys.ChangeTrustEndDeviceReply
	(*UpdateBoxSystemStatusRequest)(nil),              // 34: cloud.lazycat.apis.sys.UpdateBoxSystemStatusRequest
	(*UpdateBoxSystemStatusResponse)(nil),             // 35: cloud.lazycat.apis.sys.UpdateBoxSystemStatusResponse
	(*UpdateBoxStatusRequest)(nil),                    // 36: cloud.lazycat.apis.sys.UpdateBoxStatusRequest
	(*UpdateBoxStatusResponse)(nil),                   // 37: cloud.lazycat.apis.sys.UpdateBoxStatusResponse
	(*TrustUserDeviceRequest)(nil),                    // 38: cloud.lazycat.apis.sys.TrustUserDeviceRequest
	(*ForceResetPasswordRequest)(nil),                 // 39: cloud.lazycat.apis.sys.ForceResetPasswordRequest
	(*LogoutRequest)(nil),                             // 40: cloud.lazycat.apis.sys.LogoutRequest
	(*AppCertRequest)(nil),                            // 41: cloud.lazycat.apis.sys.AppCertRequest
	(*AppCertReply)(nil),                              // 42: cloud.lazycat.apis.sys.AppCertReply
	(*timestamppb.Timestamp)(nil),                     // 43: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                             // 44: google.protobuf.Empty
}
var file_sys_portal_server_portal_server_proto_depIdxs = []int32{
	1,  // 0: cloud.lazycat.apis.sys.RemoteSocksRequest.location_type:type_name -> cloud.lazycat.apis.sys.RemoteSocksRequest.LocationType
	2,  // 1: cloud.lazycat.apis.sys.AuthToken.token_type:type_name -> cloud.lazycat.apis.sys.AuthToken.TokenType
	43, // 2: cloud.lazycat.apis.sys.LoginInfo.when:type_name -> google.protobuf.Timestamp
	43, // 3: cloud.lazycat.apis.sys.Device.binding_time:type_name -> google.protobuf.Timestamp
	20, // 4: cloud.lazycat.apis.sys.ListDeviceReply.devices:type_name -> cloud.lazycat.apis.sys.Device
	0,  // 5: cloud.lazycat.apis.sys.ChangeRoleReqeust.role:type_name -> cloud.lazycat.apis.sys.Role
	0,  // 6: cloud.lazycat.apis.sys.QueryRoleReply.role:type_name -> cloud.lazycat.apis.sys.Role
	0,  // 7: cloud.lazycat.apis.sys.CreateUserRequest.role:type_name -> cloud.lazycat.apis.sys.Role
	3,  // 8: cloud.lazycat.apis.sys.ChangeTrustEndDeviceRequest.action:type_name -> cloud.lazycat.apis.sys.ChangeTrustEndDeviceRequest.Action
	4,  // 9: cloud.lazycat.apis.sys.UpdateBoxSystemStatusRequest.status:type_name -> cloud.lazycat.apis.sys.UpdateBoxSystemStatusRequest.SysStatus
	5,  // 10: cloud.lazycat.apis.sys.UpdateBoxSystemStatusRequest.exception_reason:type_name -> cloud.lazycat.apis.sys.UpdateBoxSystemStatusRequest.ExceptionReason
	6,  // 11: cloud.lazycat.apis.sys.LogoutRequest.reason:type_name -> cloud.lazycat.apis.sys.LogoutRequest.Reason
	14, // 12: cloud.lazycat.apis.sys.HPortalSys.QueryLogin:input_type -> cloud.lazycat.apis.sys.AuthToken
	44, // 13: cloud.lazycat.apis.sys.HPortalSys.QueryBoxInfo:input_type -> google.protobuf.Empty
	18, // 14: cloud.lazycat.apis.sys.HPortalSys.GetDomainCert:input_type -> cloud.lazycat.apis.sys.DomainCertRequest
	10, // 15: cloud.lazycat.apis.sys.HPortalSys.AllocVirtualExternalIP:input_type -> cloud.lazycat.apis.sys.AllocVEIPRequest
	12, // 16: cloud.lazycat.apis.sys.HPortalSys.FreeVirtualExternalIP:input_type -> cloud.lazycat.apis.sys.FreeVEIPRequest
	44, // 17: cloud.lazycat.apis.sys.HPortalSys.ListUsers:input_type -> google.protobuf.Empty
	28, // 18: cloud.lazycat.apis.sys.HPortalSys.CreateUser:input_type -> cloud.lazycat.apis.sys.CreateUserRequest
	27, // 19: cloud.lazycat.apis.sys.HPortalSys.DeleteUser:input_type -> cloud.lazycat.apis.sys.DeleteUserRequest
	26, // 20: cloud.lazycat.apis.sys.HPortalSys.ResetPassword:input_type -> cloud.lazycat.apis.sys.ResetPasswordRequest
	29, // 21: cloud.lazycat.apis.sys.HPortalSys.CheckPassword:input_type -> cloud.lazycat.apis.sys.CheckPasswordRequest
	23, // 22: cloud.lazycat.apis.sys.HPortalSys.QueryRole:input_type -> cloud.lazycat.apis.sys.UserID
	24, // 23: cloud.lazycat.apis.sys.HPortalSys.ChangeRole:input_type -> cloud.lazycat.apis.sys.ChangeRoleReqeust
	32, // 24: cloud.lazycat.apis.sys.HPortalSys.ChangeTrustEndDevice:input_type -> cloud.lazycat.apis.sys.ChangeTrustEndDeviceRequest
	21, // 25: cloud.lazycat.apis.sys.HPortalSys.ListDevices:input_type -> cloud.lazycat.apis.sys.ListDeviceRequest
	16, // 26: cloud.lazycat.apis.sys.HPortalSys.QueryDeviceByID:input_type -> cloud.lazycat.apis.sys.DeviceID
	30, // 27: cloud.lazycat.apis.sys.HPortalSys.ClearLoginSession:input_type -> cloud.lazycat.apis.sys.ClearLoginSessionRequest
	7,  // 28: cloud.lazycat.apis.sys.HPortalSys.RemoteSocks:input_type -> cloud.lazycat.apis.sys.RemoteSocksRequest
	34, // 29: cloud.lazycat.apis.sys.HPortalSys.UpdateBoxSystemStatus:input_type -> cloud.lazycat.apis.sys.UpdateBoxSystemStatusRequest
	18, // 30: cloud.lazycat.apis.sys.HPortalSys.GetDomainSelfCert:input_type -> cloud.lazycat.apis.sys.DomainCertRequest
	36, // 31: cloud.lazycat.apis.sys.HPortalSys.UpdateBoxStatus:input_type -> cloud.lazycat.apis.sys.UpdateBoxStatusRequest
	39, // 32: cloud.lazycat.apis.sys.HPortalSys.ForceResetPassword:input_type -> cloud.lazycat.apis.sys.ForceResetPasswordRequest
	40, // 33: cloud.lazycat.apis.sys.HPortalSys.Logout:input_type -> cloud.lazycat.apis.sys.LogoutRequest
	38, // 34: cloud.lazycat.apis.sys.HPortalSys.TrustUserDevice:input_type -> cloud.lazycat.apis.sys.TrustUserDeviceRequest
	41, // 35: cloud.lazycat.apis.sys.HPortalSys.GetAppCert:input_type -> cloud.lazycat.apis.sys.AppCertRequest
	15, // 36: cloud.lazycat.apis.sys.HPortalSys.QueryLogin:output_type -> cloud.lazycat.apis.sys.LoginInfo
	17, // 37: cloud.lazycat.apis.sys.HPortalSys.QueryBoxInfo:output_type -> cloud.lazycat.apis.sys.BoxInfo
	19, // 38: cloud.lazycat.apis.sys.HPortalSys.GetDomainCert:output_type -> cloud.lazycat.apis.sys.DomainCertReply
	11, // 39: cloud.lazycat.apis.sys.HPortalSys.AllocVirtualExternalIP:output_type -> cloud.lazycat.apis.sys.AllocVEIPReply
	13, // 40: cloud.lazycat.apis.sys.HPortalSys.FreeVirtualExternalIP:output_type -> cloud.lazycat.apis.sys.FreeVEIPReply
	9,  // 41: cloud.lazycat.apis.sys.HPortalSys.ListUsers:output_type -> cloud.lazycat.apis.sys.ListUsersReply
	44, // 42: cloud.lazycat.apis.sys.HPortalSys.CreateUser:output_type -> google.protobuf.Empty
	44, // 43: cloud.lazycat.apis.sys.HPortalSys.DeleteUser:output_type -> google.protobuf.Empty
	44, // 44: cloud.lazycat.apis.sys.HPortalSys.ResetPassword:output_type -> google.protobuf.Empty
	44, // 45: cloud.lazycat.apis.sys.HPortalSys.CheckPassword:output_type -> google.protobuf.Empty
	25, // 46: cloud.lazycat.apis.sys.HPortalSys.QueryRole:output_type -> cloud.lazycat.apis.sys.QueryRoleReply
	44, // 47: cloud.lazycat.apis.sys.HPortalSys.ChangeRole:output_type -> google.protobuf.Empty
	33, // 48: cloud.lazycat.apis.sys.HPortalSys.ChangeTrustEndDevice:output_type -> cloud.lazycat.apis.sys.ChangeTrustEndDeviceReply
	22, // 49: cloud.lazycat.apis.sys.HPortalSys.ListDevices:output_type -> cloud.lazycat.apis.sys.ListDeviceReply
	20, // 50: cloud.lazycat.apis.sys.HPortalSys.QueryDeviceByID:output_type -> cloud.lazycat.apis.sys.Device
	31, // 51: cloud.lazycat.apis.sys.HPortalSys.ClearLoginSession:output_type -> cloud.lazycat.apis.sys.ClearLoginSessionReply
	8,  // 52: cloud.lazycat.apis.sys.HPortalSys.RemoteSocks:output_type -> cloud.lazycat.apis.sys.RemoteSocksReply
	35, // 53: cloud.lazycat.apis.sys.HPortalSys.UpdateBoxSystemStatus:output_type -> cloud.lazycat.apis.sys.UpdateBoxSystemStatusResponse
	19, // 54: cloud.lazycat.apis.sys.HPortalSys.GetDomainSelfCert:output_type -> cloud.lazycat.apis.sys.DomainCertReply
	37, // 55: cloud.lazycat.apis.sys.HPortalSys.UpdateBoxStatus:output_type -> cloud.lazycat.apis.sys.UpdateBoxStatusResponse
	44, // 56: cloud.lazycat.apis.sys.HPortalSys.ForceResetPassword:output_type -> google.protobuf.Empty
	44, // 57: cloud.lazycat.apis.sys.HPortalSys.Logout:output_type -> google.protobuf.Empty
	44, // 58: cloud.lazycat.apis.sys.HPortalSys.TrustUserDevice:output_type -> google.protobuf.Empty
	42, // 59: cloud.lazycat.apis.sys.HPortalSys.GetAppCert:output_type -> cloud.lazycat.apis.sys.AppCertReply
	36, // [36:60] is the sub-list for method output_type
	12, // [12:36] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_sys_portal_server_portal_server_proto_init() }
func file_sys_portal_server_portal_server_proto_init() {
	if File_sys_portal_server_portal_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sys_portal_server_portal_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteSocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteSocksReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUsersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocVEIPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocVEIPReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreeVEIPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreeVEIPReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoxInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainCertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainCertReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDeviceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeRoleReqeust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRoleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearLoginSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearLoginSessionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeTrustEndDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeTrustEndDeviceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBoxSystemStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBoxSystemStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBoxStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBoxStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrustUserDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForceResetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppCertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_portal_server_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppCertReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sys_portal_server_portal_server_proto_msgTypes[27].OneofWrappers = []interface{}{}
	file_sys_portal_server_portal_server_proto_msgTypes[29].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sys_portal_server_portal_server_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sys_portal_server_portal_server_proto_goTypes,
		DependencyIndexes: file_sys_portal_server_portal_server_proto_depIdxs,
		EnumInfos:         file_sys_portal_server_portal_server_proto_enumTypes,
		MessageInfos:      file_sys_portal_server_portal_server_proto_msgTypes,
	}.Build()
	File_sys_portal_server_portal_server_proto = out.File
	file_sys_portal_server_portal_server_proto_rawDesc = nil
	file_sys_portal_server_portal_server_proto_goTypes = nil
	file_sys_portal_server_portal_server_proto_depIdxs = nil
}
