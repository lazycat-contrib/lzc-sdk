// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.1
// source: sys/portal-server/remote_listen.proto

package portal_server

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RemoteListenRequest_ListenType int32

const (
	RemoteListenRequest_Unkonwn RemoteListenRequest_ListenType = 0
	//在当前hserver所处的物理网络协议栈上监听TCP或UDP服务(含UDP广播)
	RemoteListenRequest_HServerLAN RemoteListenRequest_ListenType = 1
	//在当前hserver所处的内部通过token提供定制化的HTTP Server服务，
	//由hclient配合处理，
	//hclient会将`http://[fc03:1136:3800::1]:30553/tmpconn/$boxid/$token/$PATH*`
	//这个地址范围内的所有请求自动转发到监听者的listener去，并将最终PATH改为$PATH并保留query/http header等信息
	RemoteListenRequest_HServerByToken RemoteListenRequest_ListenType = 2
	//在指定的的hclient所处的物理网络协议栈上监听TCP或UDP服务(UDP广播取决于hclient是否获取到对应权限)
	RemoteListenRequest_HClientLAN RemoteListenRequest_ListenType = 3
)

// Enum value maps for RemoteListenRequest_ListenType.
var (
	RemoteListenRequest_ListenType_name = map[int32]string{
		0: "Unkonwn",
		1: "HServerLAN",
		2: "HServerByToken",
		3: "HClientLAN",
	}
	RemoteListenRequest_ListenType_value = map[string]int32{
		"Unkonwn":        0,
		"HServerLAN":     1,
		"HServerByToken": 2,
		"HClientLAN":     3,
	}
)

func (x RemoteListenRequest_ListenType) Enum() *RemoteListenRequest_ListenType {
	p := new(RemoteListenRequest_ListenType)
	*p = x
	return p
}

func (x RemoteListenRequest_ListenType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemoteListenRequest_ListenType) Descriptor() protoreflect.EnumDescriptor {
	return file_sys_portal_server_remote_listen_proto_enumTypes[0].Descriptor()
}

func (RemoteListenRequest_ListenType) Type() protoreflect.EnumType {
	return &file_sys_portal_server_remote_listen_proto_enumTypes[0]
}

func (x RemoteListenRequest_ListenType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemoteListenRequest_ListenType.Descriptor instead.
func (RemoteListenRequest_ListenType) EnumDescriptor() ([]byte, []int) {
	return file_sys_portal_server_remote_listen_proto_rawDescGZIP(), []int{0, 0}
}

type RemoteListenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListenType RemoteListenRequest_ListenType `protobuf:"varint,1,opt,name=listen_type,json=listenType,proto3,enum=cloud.lazycat.apis.sys.RemoteListenRequest_ListenType" json:"listen_type,omitempty"`
	// hclient id
	Target *string `protobuf:"bytes,2,opt,name=target,proto3,oneof" json:"target,omitempty"`
	// UDP或TCP
	Network string `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	// ip 地址+端口
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	// 将上述服务转发到这两个参数提供的服务上。
	//
	// 被调用者视角的服务地址
	ServerNetwork string `protobuf:"bytes,5,opt,name=server_network,json=serverNetwork,proto3" json:"server_network,omitempty"`
	ServerAddress string `protobuf:"bytes,6,opt,name=server_address,json=serverAddress,proto3" json:"server_address,omitempty"`
}

func (x *RemoteListenRequest) Reset() {
	*x = RemoteListenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_remote_listen_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteListenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteListenRequest) ProtoMessage() {}

func (x *RemoteListenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_remote_listen_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteListenRequest.ProtoReflect.Descriptor instead.
func (*RemoteListenRequest) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_remote_listen_proto_rawDescGZIP(), []int{0}
}

func (x *RemoteListenRequest) GetListenType() RemoteListenRequest_ListenType {
	if x != nil {
		return x.ListenType
	}
	return RemoteListenRequest_Unkonwn
}

func (x *RemoteListenRequest) GetTarget() string {
	if x != nil && x.Target != nil {
		return *x.Target
	}
	return ""
}

func (x *RemoteListenRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *RemoteListenRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RemoteListenRequest) GetServerNetwork() string {
	if x != nil {
		return x.ServerNetwork
	}
	return ""
}

func (x *RemoteListenRequest) GetServerAddress() string {
	if x != nil {
		return x.ServerAddress
	}
	return ""
}

type RemoteListenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 若成功则为true
	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	// 若出错则返回错误信息
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	//返回当前默认出口网卡的IPv4地址，若无则为空
	DefaultIpv4InterfaceAddress *string `protobuf:"bytes,3,opt,name=default_ipv4_interface_address,json=defaultIpv4InterfaceAddress,proto3,oneof" json:"default_ipv4_interface_address,omitempty"`
	//返回当前默认出口网卡的IPv6地址，若无则为空
	DefaultIpv6InterfaceAddress *string `protobuf:"bytes,4,opt,name=default_ipv6_interface_address,json=defaultIpv6InterfaceAddress,proto3,oneof" json:"default_ipv6_interface_address,omitempty"`
	//调用者视角的服务地址，若无法判断则不设置
	ServerNetwork *string `protobuf:"bytes,5,opt,name=server_network,json=serverNetwork,proto3,oneof" json:"server_network,omitempty"`
	ServerAddress *string `protobuf:"bytes,6,opt,name=server_address,json=serverAddress,proto3,oneof" json:"server_address,omitempty"` //若类型为HServerByToken则此字段返回实际的token
}

func (x *RemoteListenReply) Reset() {
	*x = RemoteListenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_portal_server_remote_listen_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteListenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteListenReply) ProtoMessage() {}

func (x *RemoteListenReply) ProtoReflect() protoreflect.Message {
	mi := &file_sys_portal_server_remote_listen_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteListenReply.ProtoReflect.Descriptor instead.
func (*RemoteListenReply) Descriptor() ([]byte, []int) {
	return file_sys_portal_server_remote_listen_proto_rawDescGZIP(), []int{1}
}

func (x *RemoteListenReply) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *RemoteListenReply) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *RemoteListenReply) GetDefaultIpv4InterfaceAddress() string {
	if x != nil && x.DefaultIpv4InterfaceAddress != nil {
		return *x.DefaultIpv4InterfaceAddress
	}
	return ""
}

func (x *RemoteListenReply) GetDefaultIpv6InterfaceAddress() string {
	if x != nil && x.DefaultIpv6InterfaceAddress != nil {
		return *x.DefaultIpv6InterfaceAddress
	}
	return ""
}

func (x *RemoteListenReply) GetServerNetwork() string {
	if x != nil && x.ServerNetwork != nil {
		return *x.ServerNetwork
	}
	return ""
}

func (x *RemoteListenReply) GetServerAddress() string {
	if x != nil && x.ServerAddress != nil {
		return *x.ServerAddress
	}
	return ""
}

var File_sys_portal_server_remote_listen_proto protoreflect.FileDescriptor

var file_sys_portal_server_remote_listen_proto_rawDesc = []byte{
	0x0a, 0x25, 0x73, 0x79, 0x73, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x22,
	0xe7, 0x02, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x4d, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x6e, 0x6b, 0x6f, 0x6e, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x41, 0x4e, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x48, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x10, 0x02, 0x12, 0x0e,
	0x0a, 0x0a, 0x48, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x41, 0x4e, 0x10, 0x03, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0xa0, 0x03, 0x0a, 0x11, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x69, 0x70, 0x76, 0x34, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x1b,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x70, 0x76, 0x34, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x48,
	0x0a, 0x1e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x70, 0x76, 0x36, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x1b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x49, 0x70, 0x76, 0x36, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0d,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x21, 0x0a, 0x1f, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x70, 0x76,
	0x34, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x42, 0x21, 0x0a, 0x1f, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x69, 0x70, 0x76, 0x36, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x36, 0x5a, 0x34,
	0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x6e, 0x61, 0x6b, 0x65,
	0x73, 0x69, 0x2f, 0x6c, 0x7a, 0x63, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f,
	0x67, 0x6f, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sys_portal_server_remote_listen_proto_rawDescOnce sync.Once
	file_sys_portal_server_remote_listen_proto_rawDescData = file_sys_portal_server_remote_listen_proto_rawDesc
)

func file_sys_portal_server_remote_listen_proto_rawDescGZIP() []byte {
	file_sys_portal_server_remote_listen_proto_rawDescOnce.Do(func() {
		file_sys_portal_server_remote_listen_proto_rawDescData = protoimpl.X.CompressGZIP(file_sys_portal_server_remote_listen_proto_rawDescData)
	})
	return file_sys_portal_server_remote_listen_proto_rawDescData
}

var file_sys_portal_server_remote_listen_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sys_portal_server_remote_listen_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sys_portal_server_remote_listen_proto_goTypes = []interface{}{
	(RemoteListenRequest_ListenType)(0), // 0: cloud.lazycat.apis.sys.RemoteListenRequest.ListenType
	(*RemoteListenRequest)(nil),         // 1: cloud.lazycat.apis.sys.RemoteListenRequest
	(*RemoteListenReply)(nil),           // 2: cloud.lazycat.apis.sys.RemoteListenReply
}
var file_sys_portal_server_remote_listen_proto_depIdxs = []int32{
	0, // 0: cloud.lazycat.apis.sys.RemoteListenRequest.listen_type:type_name -> cloud.lazycat.apis.sys.RemoteListenRequest.ListenType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_sys_portal_server_remote_listen_proto_init() }
func file_sys_portal_server_remote_listen_proto_init() {
	if File_sys_portal_server_remote_listen_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sys_portal_server_remote_listen_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteListenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_portal_server_remote_listen_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteListenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sys_portal_server_remote_listen_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_sys_portal_server_remote_listen_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sys_portal_server_remote_listen_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sys_portal_server_remote_listen_proto_goTypes,
		DependencyIndexes: file_sys_portal_server_remote_listen_proto_depIdxs,
		EnumInfos:         file_sys_portal_server_remote_listen_proto_enumTypes,
		MessageInfos:      file_sys_portal_server_remote_listen_proto_msgTypes,
	}.Build()
	File_sys_portal_server_remote_listen_proto = out.File
	file_sys_portal_server_remote_listen_proto_rawDesc = nil
	file_sys_portal_server_remote_listen_proto_goTypes = nil
	file_sys_portal_server_remote_listen_proto_depIdxs = nil
}
