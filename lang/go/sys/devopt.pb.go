// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.23.4
// source: sys/devopt.proto

package sys

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeveloperOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 禁用自动休眠长时间未使用的应用
	DisableHibernation bool `protobuf:"varint,1,opt,name=DisableHibernation,proto3" json:"DisableHibernation,omitempty"`
	// 开启 debug bridge
	//
	// Deprecated: Do not use.
	DebugBridge bool `protobuf:"varint,2,opt,name=DebugBridge,proto3" json:"DebugBridge,omitempty"`
	// 开启 sshd 服务
	//
	// Deprecated: Do not use.
	DebugSshd bool `protobuf:"varint,3,opt,name=DebugSshd,proto3" json:"DebugSshd,omitempty"`
	// 开启 open telemetry
	//
	// Deprecated: Do not use.
	OpenTelemetry bool `protobuf:"varint,4,opt,name=OpenTelemetry,proto3" json:"OpenTelemetry,omitempty"`
	// 禁用 upnp
	DisableUPnP bool `protobuf:"varint,5,opt,name=DisableUPnP,proto3" json:"DisableUPnP,omitempty"`
}

func (x *DeveloperOptions) Reset() {
	*x = DeveloperOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_devopt_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeveloperOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeveloperOptions) ProtoMessage() {}

func (x *DeveloperOptions) ProtoReflect() protoreflect.Message {
	mi := &file_sys_devopt_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeveloperOptions.ProtoReflect.Descriptor instead.
func (*DeveloperOptions) Descriptor() ([]byte, []int) {
	return file_sys_devopt_proto_rawDescGZIP(), []int{0}
}

func (x *DeveloperOptions) GetDisableHibernation() bool {
	if x != nil {
		return x.DisableHibernation
	}
	return false
}

// Deprecated: Do not use.
func (x *DeveloperOptions) GetDebugBridge() bool {
	if x != nil {
		return x.DebugBridge
	}
	return false
}

// Deprecated: Do not use.
func (x *DeveloperOptions) GetDebugSshd() bool {
	if x != nil {
		return x.DebugSshd
	}
	return false
}

// Deprecated: Do not use.
func (x *DeveloperOptions) GetOpenTelemetry() bool {
	if x != nil {
		return x.OpenTelemetry
	}
	return false
}

func (x *DeveloperOptions) GetDisableUPnP() bool {
	if x != nil {
		return x.DisableUPnP
	}
	return false
}

type SshdEnableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否开启 sshd 服务
	Enable bool `protobuf:"varint,1,opt,name=Enable,proto3" json:"Enable,omitempty"`
	// root 密码（该字段仅当 Enable 为 true 时有效）
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *SshdEnableRequest) Reset() {
	*x = SshdEnableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_devopt_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SshdEnableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SshdEnableRequest) ProtoMessage() {}

func (x *SshdEnableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_devopt_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SshdEnableRequest.ProtoReflect.Descriptor instead.
func (*SshdEnableRequest) Descriptor() ([]byte, []int) {
	return file_sys_devopt_proto_rawDescGZIP(), []int{1}
}

func (x *SshdEnableRequest) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *SshdEnableRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type EnableSshdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否开启了 sshd 服务
	Enabled bool `protobuf:"varint,1,opt,name=Enabled,proto3" json:"Enabled,omitempty"`
}

func (x *EnableSshdResponse) Reset() {
	*x = EnableSshdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_devopt_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableSshdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableSshdResponse) ProtoMessage() {}

func (x *EnableSshdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sys_devopt_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableSshdResponse.ProtoReflect.Descriptor instead.
func (*EnableSshdResponse) Descriptor() ([]byte, []int) {
	return file_sys_devopt_proto_rawDescGZIP(), []int{2}
}

func (x *EnableSshdResponse) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

var File_sys_devopt_proto protoreflect.FileDescriptor

var file_sys_devopt_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x79, 0x73, 0x2f, 0x64, 0x65, 0x76, 0x6f, 0x70, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x16, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd6, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x12,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x69, 0x62, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x48, 0x69, 0x62, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0b,
	0x44, 0x65, 0x62, 0x75, 0x67, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0b, 0x44, 0x65, 0x62, 0x75, 0x67, 0x42, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x44, 0x65, 0x62, 0x75, 0x67, 0x53, 0x73, 0x68, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x44, 0x65, 0x62, 0x75, 0x67,
	0x53, 0x73, 0x68, 0x64, 0x12, 0x28, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x0d, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x50, 0x6e, 0x50, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x50, 0x6e, 0x50,
	0x22, 0x47, 0x0a, 0x11, 0x53, 0x73, 0x68, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x2e, 0x0a, 0x12, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x73, 0x68, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x32, 0xed, 0x02, 0x0a, 0x0d, 0x44, 0x65,
	0x76, 0x4f, 0x70, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x51, 0x0a, 0x0a, 0x53, 0x73, 0x68, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x73, 0x68, 0x64, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0b, 0x53, 0x73, 0x68, 0x64, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x73, 0x68, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74,
	0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x6e, 0x61, 0x6b, 0x65, 0x73, 0x69, 0x2f,
	0x6c, 0x7a, 0x63, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x67, 0x6f, 0x2f,
	0x73, 0x79, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sys_devopt_proto_rawDescOnce sync.Once
	file_sys_devopt_proto_rawDescData = file_sys_devopt_proto_rawDesc
)

func file_sys_devopt_proto_rawDescGZIP() []byte {
	file_sys_devopt_proto_rawDescOnce.Do(func() {
		file_sys_devopt_proto_rawDescData = protoimpl.X.CompressGZIP(file_sys_devopt_proto_rawDescData)
	})
	return file_sys_devopt_proto_rawDescData
}

var file_sys_devopt_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_sys_devopt_proto_goTypes = []interface{}{
	(*DeveloperOptions)(nil),   // 0: cloud.lazycat.apis.sys.DeveloperOptions
	(*SshdEnableRequest)(nil),  // 1: cloud.lazycat.apis.sys.SshdEnableRequest
	(*EnableSshdResponse)(nil), // 2: cloud.lazycat.apis.sys.EnableSshdResponse
	(*emptypb.Empty)(nil),      // 3: google.protobuf.Empty
}
var file_sys_devopt_proto_depIdxs = []int32{
	3, // 0: cloud.lazycat.apis.sys.DevOptService.GetDeveloperOptions:input_type -> google.protobuf.Empty
	0, // 1: cloud.lazycat.apis.sys.DevOptService.SetDeveloperOptions:input_type -> cloud.lazycat.apis.sys.DeveloperOptions
	1, // 2: cloud.lazycat.apis.sys.DevOptService.SshdEnable:input_type -> cloud.lazycat.apis.sys.SshdEnableRequest
	3, // 3: cloud.lazycat.apis.sys.DevOptService.SshdEnabled:input_type -> google.protobuf.Empty
	0, // 4: cloud.lazycat.apis.sys.DevOptService.GetDeveloperOptions:output_type -> cloud.lazycat.apis.sys.DeveloperOptions
	3, // 5: cloud.lazycat.apis.sys.DevOptService.SetDeveloperOptions:output_type -> google.protobuf.Empty
	3, // 6: cloud.lazycat.apis.sys.DevOptService.SshdEnable:output_type -> google.protobuf.Empty
	2, // 7: cloud.lazycat.apis.sys.DevOptService.SshdEnabled:output_type -> cloud.lazycat.apis.sys.EnableSshdResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sys_devopt_proto_init() }
func file_sys_devopt_proto_init() {
	if File_sys_devopt_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sys_devopt_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeveloperOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_devopt_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SshdEnableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_devopt_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableSshdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sys_devopt_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sys_devopt_proto_goTypes,
		DependencyIndexes: file_sys_devopt_proto_depIdxs,
		MessageInfos:      file_sys_devopt_proto_msgTypes,
	}.Build()
	File_sys_devopt_proto = out.File
	file_sys_devopt_proto_rawDesc = nil
	file_sys_devopt_proto_goTypes = nil
	file_sys_devopt_proto_depIdxs = nil
}
