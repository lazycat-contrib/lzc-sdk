// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.1
// source: sys/OS_snapshot.proto

package sys

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SnapshotBackupPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用于备份的 ZFS 池的名称
	PoolName string `protobuf:"bytes,1,opt,name=PoolName,proto3" json:"PoolName,omitempty"`
}

func (x *SnapshotBackupPoolRequest) Reset() {
	*x = SnapshotBackupPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotBackupPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotBackupPoolRequest) ProtoMessage() {}

func (x *SnapshotBackupPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotBackupPoolRequest.ProtoReflect.Descriptor instead.
func (*SnapshotBackupPoolRequest) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{0}
}

func (x *SnapshotBackupPoolRequest) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

type SnapshotBackupPoolListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolNameList []string `protobuf:"bytes,1,rep,name=PoolNameList,proto3" json:"PoolNameList,omitempty"`
}

func (x *SnapshotBackupPoolListResponse) Reset() {
	*x = SnapshotBackupPoolListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotBackupPoolListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotBackupPoolListResponse) ProtoMessage() {}

func (x *SnapshotBackupPoolListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotBackupPoolListResponse.ProtoReflect.Descriptor instead.
func (*SnapshotBackupPoolListResponse) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{1}
}

func (x *SnapshotBackupPoolListResponse) GetPoolNameList() []string {
	if x != nil {
		return x.PoolNameList
	}
	return nil
}

type SnapshotDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 数据集挂载点的绝对路径。
	// 对应的数据集名称会根据路径自动生成，无需客户端关注
	DatasetPath string `protobuf:"bytes,1,opt,name=DatasetPath,proto3" json:"DatasetPath,omitempty"`
}

func (x *SnapshotDatasetRequest) Reset() {
	*x = SnapshotDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotDatasetRequest) ProtoMessage() {}

func (x *SnapshotDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotDatasetRequest.ProtoReflect.Descriptor instead.
func (*SnapshotDatasetRequest) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{2}
}

func (x *SnapshotDatasetRequest) GetDatasetPath() string {
	if x != nil {
		return x.DatasetPath
	}
	return ""
}

type SnapshotDatasetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetPathList []string `protobuf:"bytes,1,rep,name=DatasetPathList,proto3" json:"DatasetPathList,omitempty"`
}

func (x *SnapshotDatasetListResponse) Reset() {
	*x = SnapshotDatasetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotDatasetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotDatasetListResponse) ProtoMessage() {}

func (x *SnapshotDatasetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotDatasetListResponse.ProtoReflect.Descriptor instead.
func (*SnapshotDatasetListResponse) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{3}
}

func (x *SnapshotDatasetListResponse) GetDatasetPathList() []string {
	if x != nil {
		return x.DatasetPathList
	}
	return nil
}

type SnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetPath string `protobuf:"bytes,1,opt,name=DatasetPath,proto3" json:"DatasetPath,omitempty"`
	// 快照名称（"@" 之后的部分）
	SnapshotName string `protobuf:"bytes,2,opt,name=SnapshotName,proto3" json:"SnapshotName,omitempty"`
}

func (x *SnapshotRequest) Reset() {
	*x = SnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotRequest) ProtoMessage() {}

func (x *SnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotRequest.ProtoReflect.Descriptor instead.
func (*SnapshotRequest) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{4}
}

func (x *SnapshotRequest) GetDatasetPath() string {
	if x != nil {
		return x.DatasetPath
	}
	return ""
}

func (x *SnapshotRequest) GetSnapshotName() string {
	if x != nil {
		return x.SnapshotName
	}
	return ""
}

type SnapshotListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotNameList []string `protobuf:"bytes,1,rep,name=SnapshotNameList,proto3" json:"SnapshotNameList,omitempty"`
}

func (x *SnapshotListResponse) Reset() {
	*x = SnapshotListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotListResponse) ProtoMessage() {}

func (x *SnapshotListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotListResponse.ProtoReflect.Descriptor instead.
func (*SnapshotListResponse) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{5}
}

func (x *SnapshotListResponse) GetSnapshotNameList() []string {
	if x != nil {
		return x.SnapshotNameList
	}
	return nil
}

type SnapshotBackupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolName     string `protobuf:"bytes,1,opt,name=PoolName,proto3" json:"PoolName,omitempty"`
	DatasetPath  string `protobuf:"bytes,2,opt,name=DatasetPath,proto3" json:"DatasetPath,omitempty"`
	SnapshotName string `protobuf:"bytes,3,opt,name=SnapshotName,proto3" json:"SnapshotName,omitempty"`
}

func (x *SnapshotBackupRequest) Reset() {
	*x = SnapshotBackupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotBackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotBackupRequest) ProtoMessage() {}

func (x *SnapshotBackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotBackupRequest.ProtoReflect.Descriptor instead.
func (*SnapshotBackupRequest) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{6}
}

func (x *SnapshotBackupRequest) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *SnapshotBackupRequest) GetDatasetPath() string {
	if x != nil {
		return x.DatasetPath
	}
	return ""
}

func (x *SnapshotBackupRequest) GetSnapshotName() string {
	if x != nil {
		return x.SnapshotName
	}
	return ""
}

type SnapshotBackupListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolName    string `protobuf:"bytes,1,opt,name=PoolName,proto3" json:"PoolName,omitempty"`
	DatasetPath string `protobuf:"bytes,2,opt,name=DatasetPath,proto3" json:"DatasetPath,omitempty"`
}

func (x *SnapshotBackupListRequest) Reset() {
	*x = SnapshotBackupListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotBackupListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotBackupListRequest) ProtoMessage() {}

func (x *SnapshotBackupListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotBackupListRequest.ProtoReflect.Descriptor instead.
func (*SnapshotBackupListRequest) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{7}
}

func (x *SnapshotBackupListRequest) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *SnapshotBackupListRequest) GetDatasetPath() string {
	if x != nil {
		return x.DatasetPath
	}
	return ""
}

var File_sys_OS_snapshot_proto protoreflect.FileDescriptor

var file_sys_OS_snapshot_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x79, 0x73, 0x2f, 0x4f, 0x53, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a, 0x19,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x6f,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x6f,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x1e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x6f, 0x6f, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x50,
	0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3a, 0x0a, 0x16, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x47, 0x0a, 0x1b, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0f, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x57, 0x0a, 0x0f, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x14, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x79, 0x0a,
	0x15, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x59, 0x0a, 0x19, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x32, 0xc9, 0x0a, 0x0a, 0x11, 0x4f, 0x53, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x0d, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x41, 0x64, 0x64, 0x12, 0x31, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0d, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x6c, 0x12, 0x31, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50,
	0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0a, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x41, 0x64, 0x64, 0x12, 0x2e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x56, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x12,
	0x2e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0b, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0b, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x41, 0x64, 0x64, 0x12, 0x2e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x50, 0x0a, 0x0b, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x6c, 0x12,
	0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63,
	0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63,
	0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x54, 0x0a, 0x0f, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61,
	0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x64, 0x64, 0x12, 0x2d, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x12, 0x2d, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x12, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a,
	0x15, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x2d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42,
	0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x6e,
	0x61, 0x6b, 0x65, 0x73, 0x69, 0x2f, 0x6c, 0x7a, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x79,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sys_OS_snapshot_proto_rawDescOnce sync.Once
	file_sys_OS_snapshot_proto_rawDescData = file_sys_OS_snapshot_proto_rawDesc
)

func file_sys_OS_snapshot_proto_rawDescGZIP() []byte {
	file_sys_OS_snapshot_proto_rawDescOnce.Do(func() {
		file_sys_OS_snapshot_proto_rawDescData = protoimpl.X.CompressGZIP(file_sys_OS_snapshot_proto_rawDescData)
	})
	return file_sys_OS_snapshot_proto_rawDescData
}

var file_sys_OS_snapshot_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_sys_OS_snapshot_proto_goTypes = []interface{}{
	(*SnapshotBackupPoolRequest)(nil),      // 0: cloud.lazycat.apis.sys.SnapshotBackupPoolRequest
	(*SnapshotBackupPoolListResponse)(nil), // 1: cloud.lazycat.apis.sys.SnapshotBackupPoolListResponse
	(*SnapshotDatasetRequest)(nil),         // 2: cloud.lazycat.apis.sys.SnapshotDatasetRequest
	(*SnapshotDatasetListResponse)(nil),    // 3: cloud.lazycat.apis.sys.SnapshotDatasetListResponse
	(*SnapshotRequest)(nil),                // 4: cloud.lazycat.apis.sys.SnapshotRequest
	(*SnapshotListResponse)(nil),           // 5: cloud.lazycat.apis.sys.SnapshotListResponse
	(*SnapshotBackupRequest)(nil),          // 6: cloud.lazycat.apis.sys.SnapshotBackupRequest
	(*SnapshotBackupListRequest)(nil),      // 7: cloud.lazycat.apis.sys.SnapshotBackupListRequest
	(*emptypb.Empty)(nil),                  // 8: google.protobuf.Empty
}
var file_sys_OS_snapshot_proto_depIdxs = []int32{
	0,  // 0: cloud.lazycat.apis.sys.OSSnapshotService.BackupPoolAdd:input_type -> cloud.lazycat.apis.sys.SnapshotBackupPoolRequest
	0,  // 1: cloud.lazycat.apis.sys.OSSnapshotService.BackupPoolDel:input_type -> cloud.lazycat.apis.sys.SnapshotBackupPoolRequest
	8,  // 2: cloud.lazycat.apis.sys.OSSnapshotService.BackupPoolList:input_type -> google.protobuf.Empty
	2,  // 3: cloud.lazycat.apis.sys.OSSnapshotService.DatasetAdd:input_type -> cloud.lazycat.apis.sys.SnapshotDatasetRequest
	2,  // 4: cloud.lazycat.apis.sys.OSSnapshotService.DatasetDel:input_type -> cloud.lazycat.apis.sys.SnapshotDatasetRequest
	8,  // 5: cloud.lazycat.apis.sys.OSSnapshotService.DatasetList:input_type -> google.protobuf.Empty
	2,  // 6: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotAdd:input_type -> cloud.lazycat.apis.sys.SnapshotDatasetRequest
	4,  // 7: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotDel:input_type -> cloud.lazycat.apis.sys.SnapshotRequest
	2,  // 8: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotList:input_type -> cloud.lazycat.apis.sys.SnapshotDatasetRequest
	4,  // 9: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotRestore:input_type -> cloud.lazycat.apis.sys.SnapshotRequest
	6,  // 10: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotBackupAdd:input_type -> cloud.lazycat.apis.sys.SnapshotBackupRequest
	6,  // 11: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotBackupDel:input_type -> cloud.lazycat.apis.sys.SnapshotBackupRequest
	7,  // 12: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotBackupList:input_type -> cloud.lazycat.apis.sys.SnapshotBackupListRequest
	6,  // 13: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotBackupRestore:input_type -> cloud.lazycat.apis.sys.SnapshotBackupRequest
	8,  // 14: cloud.lazycat.apis.sys.OSSnapshotService.BackupPoolAdd:output_type -> google.protobuf.Empty
	8,  // 15: cloud.lazycat.apis.sys.OSSnapshotService.BackupPoolDel:output_type -> google.protobuf.Empty
	1,  // 16: cloud.lazycat.apis.sys.OSSnapshotService.BackupPoolList:output_type -> cloud.lazycat.apis.sys.SnapshotBackupPoolListResponse
	8,  // 17: cloud.lazycat.apis.sys.OSSnapshotService.DatasetAdd:output_type -> google.protobuf.Empty
	8,  // 18: cloud.lazycat.apis.sys.OSSnapshotService.DatasetDel:output_type -> google.protobuf.Empty
	3,  // 19: cloud.lazycat.apis.sys.OSSnapshotService.DatasetList:output_type -> cloud.lazycat.apis.sys.SnapshotDatasetListResponse
	8,  // 20: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotAdd:output_type -> google.protobuf.Empty
	8,  // 21: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotDel:output_type -> google.protobuf.Empty
	5,  // 22: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotList:output_type -> cloud.lazycat.apis.sys.SnapshotListResponse
	8,  // 23: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotRestore:output_type -> google.protobuf.Empty
	8,  // 24: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotBackupAdd:output_type -> google.protobuf.Empty
	8,  // 25: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotBackupDel:output_type -> google.protobuf.Empty
	5,  // 26: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotBackupList:output_type -> cloud.lazycat.apis.sys.SnapshotListResponse
	8,  // 27: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotBackupRestore:output_type -> google.protobuf.Empty
	14, // [14:28] is the sub-list for method output_type
	0,  // [0:14] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_sys_OS_snapshot_proto_init() }
func file_sys_OS_snapshot_proto_init() {
	if File_sys_OS_snapshot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sys_OS_snapshot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotBackupPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_OS_snapshot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotBackupPoolListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_OS_snapshot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_OS_snapshot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotDatasetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_OS_snapshot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_OS_snapshot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_OS_snapshot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotBackupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_OS_snapshot_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotBackupListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sys_OS_snapshot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sys_OS_snapshot_proto_goTypes,
		DependencyIndexes: file_sys_OS_snapshot_proto_depIdxs,
		MessageInfos:      file_sys_OS_snapshot_proto_msgTypes,
	}.Build()
	File_sys_OS_snapshot_proto = out.File
	file_sys_OS_snapshot_proto_rawDesc = nil
	file_sys_OS_snapshot_proto_goTypes = nil
	file_sys_OS_snapshot_proto_depIdxs = nil
}
