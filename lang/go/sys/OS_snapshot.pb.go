// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.1
// source: sys/OS_snapshot.proto

package sys

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SnapshotManagerStatus int32

const (
	SnapshotManagerStatus_Stopped SnapshotManagerStatus = 0
	SnapshotManagerStatus_Running SnapshotManagerStatus = 1
)

// Enum value maps for SnapshotManagerStatus.
var (
	SnapshotManagerStatus_name = map[int32]string{
		0: "Stopped",
		1: "Running",
	}
	SnapshotManagerStatus_value = map[string]int32{
		"Stopped": 0,
		"Running": 1,
	}
)

func (x SnapshotManagerStatus) Enum() *SnapshotManagerStatus {
	p := new(SnapshotManagerStatus)
	*p = x
	return p
}

func (x SnapshotManagerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SnapshotManagerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_sys_OS_snapshot_proto_enumTypes[0].Descriptor()
}

func (SnapshotManagerStatus) Type() protoreflect.EnumType {
	return &file_sys_OS_snapshot_proto_enumTypes[0]
}

func (x SnapshotManagerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SnapshotManagerStatus.Descriptor instead.
func (SnapshotManagerStatus) EnumDescriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{0}
}

type SnapshotTransferMode int32

const (
	SnapshotTransferMode_Normal SnapshotTransferMode = 0
	// 若存在可恢复的传输任务，是否不尝试恢复，重新传输
	SnapshotTransferMode_NoResume SnapshotTransferMode = 1
	// 不进行传输，只预估传输的数据量
	SnapshotTransferMode_DryRun SnapshotTransferMode = 2
)

// Enum value maps for SnapshotTransferMode.
var (
	SnapshotTransferMode_name = map[int32]string{
		0: "Normal",
		1: "NoResume",
		2: "DryRun",
	}
	SnapshotTransferMode_value = map[string]int32{
		"Normal":   0,
		"NoResume": 1,
		"DryRun":   2,
	}
)

func (x SnapshotTransferMode) Enum() *SnapshotTransferMode {
	p := new(SnapshotTransferMode)
	*p = x
	return p
}

func (x SnapshotTransferMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SnapshotTransferMode) Descriptor() protoreflect.EnumDescriptor {
	return file_sys_OS_snapshot_proto_enumTypes[1].Descriptor()
}

func (SnapshotTransferMode) Type() protoreflect.EnumType {
	return &file_sys_OS_snapshot_proto_enumTypes[1]
}

func (x SnapshotTransferMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SnapshotTransferMode.Descriptor instead.
func (SnapshotTransferMode) EnumDescriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{1}
}

type SnapshotBackupPoolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用于备份的 ZFS 池的名称
	PoolName string `protobuf:"bytes,1,opt,name=PoolName,proto3" json:"PoolName,omitempty"`
}

func (x *SnapshotBackupPoolRequest) Reset() {
	*x = SnapshotBackupPoolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotBackupPoolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotBackupPoolRequest) ProtoMessage() {}

func (x *SnapshotBackupPoolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotBackupPoolRequest.ProtoReflect.Descriptor instead.
func (*SnapshotBackupPoolRequest) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{0}
}

func (x *SnapshotBackupPoolRequest) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

type SnapshotBackupPoolListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolNameList []string `protobuf:"bytes,1,rep,name=PoolNameList,proto3" json:"PoolNameList,omitempty"`
}

func (x *SnapshotBackupPoolListResponse) Reset() {
	*x = SnapshotBackupPoolListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotBackupPoolListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotBackupPoolListResponse) ProtoMessage() {}

func (x *SnapshotBackupPoolListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotBackupPoolListResponse.ProtoReflect.Descriptor instead.
func (*SnapshotBackupPoolListResponse) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{1}
}

func (x *SnapshotBackupPoolListResponse) GetPoolNameList() []string {
	if x != nil {
		return x.PoolNameList
	}
	return nil
}

type SnapshotDatasetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 数据集挂载点的绝对路径。
	// 对应的数据集名称会根据路径自动生成，无需客户端关注
	DatasetPath string `protobuf:"bytes,1,opt,name=DatasetPath,proto3" json:"DatasetPath,omitempty"`
}

func (x *SnapshotDatasetRequest) Reset() {
	*x = SnapshotDatasetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotDatasetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotDatasetRequest) ProtoMessage() {}

func (x *SnapshotDatasetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotDatasetRequest.ProtoReflect.Descriptor instead.
func (*SnapshotDatasetRequest) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{2}
}

func (x *SnapshotDatasetRequest) GetDatasetPath() string {
	if x != nil {
		return x.DatasetPath
	}
	return ""
}

type SnapshotDatasetBackupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolName    string `protobuf:"bytes,1,opt,name=PoolName,proto3" json:"PoolName,omitempty"`
	DatasetPath string `protobuf:"bytes,2,opt,name=DatasetPath,proto3" json:"DatasetPath,omitempty"`
}

func (x *SnapshotDatasetBackupRequest) Reset() {
	*x = SnapshotDatasetBackupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotDatasetBackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotDatasetBackupRequest) ProtoMessage() {}

func (x *SnapshotDatasetBackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotDatasetBackupRequest.ProtoReflect.Descriptor instead.
func (*SnapshotDatasetBackupRequest) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{3}
}

func (x *SnapshotDatasetBackupRequest) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *SnapshotDatasetBackupRequest) GetDatasetPath() string {
	if x != nil {
		return x.DatasetPath
	}
	return ""
}

type SnapshotDatasetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetPathList []string `protobuf:"bytes,1,rep,name=DatasetPathList,proto3" json:"DatasetPathList,omitempty"`
}

func (x *SnapshotDatasetListResponse) Reset() {
	*x = SnapshotDatasetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotDatasetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotDatasetListResponse) ProtoMessage() {}

func (x *SnapshotDatasetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotDatasetListResponse.ProtoReflect.Descriptor instead.
func (*SnapshotDatasetListResponse) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{4}
}

func (x *SnapshotDatasetListResponse) GetDatasetPathList() []string {
	if x != nil {
		return x.DatasetPathList
	}
	return nil
}

type SnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetPath string `protobuf:"bytes,1,opt,name=DatasetPath,proto3" json:"DatasetPath,omitempty"`
	// 快照名称（"@" 之后的部分）
	SnapshotName string `protobuf:"bytes,2,opt,name=SnapshotName,proto3" json:"SnapshotName,omitempty"`
}

func (x *SnapshotRequest) Reset() {
	*x = SnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotRequest) ProtoMessage() {}

func (x *SnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotRequest.ProtoReflect.Descriptor instead.
func (*SnapshotRequest) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{5}
}

func (x *SnapshotRequest) GetDatasetPath() string {
	if x != nil {
		return x.DatasetPath
	}
	return ""
}

func (x *SnapshotRequest) GetSnapshotName() string {
	if x != nil {
		return x.SnapshotName
	}
	return ""
}

type SnapshotListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotNameList []string `protobuf:"bytes,1,rep,name=SnapshotNameList,proto3" json:"SnapshotNameList,omitempty"`
}

func (x *SnapshotListResponse) Reset() {
	*x = SnapshotListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotListResponse) ProtoMessage() {}

func (x *SnapshotListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotListResponse.ProtoReflect.Descriptor instead.
func (*SnapshotListResponse) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{6}
}

func (x *SnapshotListResponse) GetSnapshotNameList() []string {
	if x != nil {
		return x.SnapshotNameList
	}
	return nil
}

type SnapshotBackupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolName     string `protobuf:"bytes,1,opt,name=PoolName,proto3" json:"PoolName,omitempty"`
	DatasetPath  string `protobuf:"bytes,2,opt,name=DatasetPath,proto3" json:"DatasetPath,omitempty"`
	SnapshotName string `protobuf:"bytes,3,opt,name=SnapshotName,proto3" json:"SnapshotName,omitempty"`
}

func (x *SnapshotBackupRequest) Reset() {
	*x = SnapshotBackupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotBackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotBackupRequest) ProtoMessage() {}

func (x *SnapshotBackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotBackupRequest.ProtoReflect.Descriptor instead.
func (*SnapshotBackupRequest) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{7}
}

func (x *SnapshotBackupRequest) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *SnapshotBackupRequest) GetDatasetPath() string {
	if x != nil {
		return x.DatasetPath
	}
	return ""
}

func (x *SnapshotBackupRequest) GetSnapshotName() string {
	if x != nil {
		return x.SnapshotName
	}
	return ""
}

type SnapshotBackupTransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolName     string               `protobuf:"bytes,1,opt,name=PoolName,proto3" json:"PoolName,omitempty"`
	DatasetPath  string               `protobuf:"bytes,2,opt,name=DatasetPath,proto3" json:"DatasetPath,omitempty"`
	SnapshotName string               `protobuf:"bytes,3,opt,name=SnapshotName,proto3" json:"SnapshotName,omitempty"`
	TransferMode SnapshotTransferMode `protobuf:"varint,4,opt,name=TransferMode,proto3,enum=cloud.lazycat.apis.sys.SnapshotTransferMode" json:"TransferMode,omitempty"`
}

func (x *SnapshotBackupTransferRequest) Reset() {
	*x = SnapshotBackupTransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotBackupTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotBackupTransferRequest) ProtoMessage() {}

func (x *SnapshotBackupTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotBackupTransferRequest.ProtoReflect.Descriptor instead.
func (*SnapshotBackupTransferRequest) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{8}
}

func (x *SnapshotBackupTransferRequest) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *SnapshotBackupTransferRequest) GetDatasetPath() string {
	if x != nil {
		return x.DatasetPath
	}
	return ""
}

func (x *SnapshotBackupTransferRequest) GetSnapshotName() string {
	if x != nil {
		return x.SnapshotName
	}
	return ""
}

func (x *SnapshotBackupTransferRequest) GetTransferMode() SnapshotTransferMode {
	if x != nil {
		return x.TransferMode
	}
	return SnapshotTransferMode_Normal
}

type SnapshotBackupTransferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 若存在可恢复的传输任务，则为已传输的数据量
	// 当 TransferMode 为 NoResume 时，忽略该字段
	BytesSent  uint64 `protobuf:"varint,1,opt,name=BytesSent,proto3" json:"BytesSent,omitempty"`
	BytesTotal uint64 `protobuf:"varint,2,opt,name=BytesTotal,proto3" json:"BytesTotal,omitempty"`
}

func (x *SnapshotBackupTransferResponse) Reset() {
	*x = SnapshotBackupTransferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotBackupTransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotBackupTransferResponse) ProtoMessage() {}

func (x *SnapshotBackupTransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotBackupTransferResponse.ProtoReflect.Descriptor instead.
func (*SnapshotBackupTransferResponse) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{9}
}

func (x *SnapshotBackupTransferResponse) GetBytesSent() uint64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *SnapshotBackupTransferResponse) GetBytesTotal() uint64 {
	if x != nil {
		return x.BytesTotal
	}
	return 0
}

type SnapshotBackupListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoolName    string `protobuf:"bytes,1,opt,name=PoolName,proto3" json:"PoolName,omitempty"`
	DatasetPath string `protobuf:"bytes,2,opt,name=DatasetPath,proto3" json:"DatasetPath,omitempty"`
}

func (x *SnapshotBackupListRequest) Reset() {
	*x = SnapshotBackupListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotBackupListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotBackupListRequest) ProtoMessage() {}

func (x *SnapshotBackupListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotBackupListRequest.ProtoReflect.Descriptor instead.
func (*SnapshotBackupListRequest) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{10}
}

func (x *SnapshotBackupListRequest) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *SnapshotBackupListRequest) GetDatasetPath() string {
	if x != nil {
		return x.DatasetPath
	}
	return ""
}

type SnapshotStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status SnapshotManagerStatus `protobuf:"varint,1,opt,name=Status,proto3,enum=cloud.lazycat.apis.sys.SnapshotManagerStatus" json:"Status,omitempty"`
	// 最近一次传输任务中，已传输的数据量
	BytesSent uint64 `protobuf:"varint,2,opt,name=BytesSent,proto3" json:"BytesSent,omitempty"`
	// 最近一次传输任务中，预估的总数据量。
	// 实际需要传输的数据量一般会略小于该数值。判断传输任务是否完成，以 Status 字段为准
	BytesTotal uint64 `protobuf:"varint,3,opt,name=BytesTotal,proto3" json:"BytesTotal,omitempty"`
}

func (x *SnapshotStatusResponse) Reset() {
	*x = SnapshotStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sys_OS_snapshot_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotStatusResponse) ProtoMessage() {}

func (x *SnapshotStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sys_OS_snapshot_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotStatusResponse.ProtoReflect.Descriptor instead.
func (*SnapshotStatusResponse) Descriptor() ([]byte, []int) {
	return file_sys_OS_snapshot_proto_rawDescGZIP(), []int{11}
}

func (x *SnapshotStatusResponse) GetStatus() SnapshotManagerStatus {
	if x != nil {
		return x.Status
	}
	return SnapshotManagerStatus_Stopped
}

func (x *SnapshotStatusResponse) GetBytesSent() uint64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *SnapshotStatusResponse) GetBytesTotal() uint64 {
	if x != nil {
		return x.BytesTotal
	}
	return 0
}

var File_sys_OS_snapshot_proto protoreflect.FileDescriptor

var file_sys_OS_snapshot_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x79, 0x73, 0x2f, 0x4f, 0x53, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a, 0x19,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x6f,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x6f,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x1e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x6f, 0x6f, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x50,
	0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3a, 0x0a, 0x16, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x5c, 0x0a, 0x1c, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x47, 0x0a, 0x1b, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x57,
	0x0a, 0x0f, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x14, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x79, 0x0a, 0x15, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd3, 0x01, 0x0a, 0x1d, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x6f, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x6f, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x0c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x5e, 0x0a, 0x1e,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x42, 0x79, 0x74, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x42, 0x79, 0x74, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x42, 0x79, 0x74, 0x65, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x59, 0x0a, 0x19,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x6f,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x6f,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x22, 0x9d, 0x01, 0x0a, 0x16, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63,
	0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x2a, 0x31, 0x0a, 0x15, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x2a, 0x3c, 0x0a, 0x14, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x44, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x10, 0x02, 0x32, 0x90, 0x0e, 0x0a, 0x11, 0x4f, 0x53, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c,
	0x0a, 0x0d, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x41, 0x64, 0x64, 0x12,
	0x31, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0d,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x65, 0x6c, 0x12, 0x31, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0e, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x50, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a,
	0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6f, 0x6f, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56,
	0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x41, 0x64, 0x64, 0x12, 0x2e, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x44, 0x65, 0x6c, 0x12, 0x2e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a,
	0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5c,
	0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61,
	0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x10,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x44, 0x65, 0x6c,
	0x12, 0x34, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x7d, 0x0a, 0x11, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61,
	0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x50, 0x0a, 0x0b, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x41, 0x64, 0x64, 0x12, 0x27,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x50, 0x0a, 0x0b, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x6c,
	0x12, 0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79,
	0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79,
	0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0f, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x11, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x41, 0x64, 0x64, 0x12,
	0x35, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5c, 0x0a, 0x11, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x44, 0x65, 0x6c, 0x12, 0x2d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61,
	0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x77,
	0x0a, 0x12, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a,
	0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x15, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x35, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79,
	0x73, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x55, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x73, 0x79, 0x73,
	0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0c, 0x53, 0x74, 0x6f,
	0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x28, 0x5a, 0x26, 0x67,
	0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x6e, 0x61, 0x6b, 0x65, 0x73,
	0x69, 0x2f, 0x6c, 0x7a, 0x63, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x67,
	0x6f, 0x2f, 0x73, 0x79, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sys_OS_snapshot_proto_rawDescOnce sync.Once
	file_sys_OS_snapshot_proto_rawDescData = file_sys_OS_snapshot_proto_rawDesc
)

func file_sys_OS_snapshot_proto_rawDescGZIP() []byte {
	file_sys_OS_snapshot_proto_rawDescOnce.Do(func() {
		file_sys_OS_snapshot_proto_rawDescData = protoimpl.X.CompressGZIP(file_sys_OS_snapshot_proto_rawDescData)
	})
	return file_sys_OS_snapshot_proto_rawDescData
}

var file_sys_OS_snapshot_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sys_OS_snapshot_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_sys_OS_snapshot_proto_goTypes = []interface{}{
	(SnapshotManagerStatus)(0),             // 0: cloud.lazycat.apis.sys.SnapshotManagerStatus
	(SnapshotTransferMode)(0),              // 1: cloud.lazycat.apis.sys.SnapshotTransferMode
	(*SnapshotBackupPoolRequest)(nil),      // 2: cloud.lazycat.apis.sys.SnapshotBackupPoolRequest
	(*SnapshotBackupPoolListResponse)(nil), // 3: cloud.lazycat.apis.sys.SnapshotBackupPoolListResponse
	(*SnapshotDatasetRequest)(nil),         // 4: cloud.lazycat.apis.sys.SnapshotDatasetRequest
	(*SnapshotDatasetBackupRequest)(nil),   // 5: cloud.lazycat.apis.sys.SnapshotDatasetBackupRequest
	(*SnapshotDatasetListResponse)(nil),    // 6: cloud.lazycat.apis.sys.SnapshotDatasetListResponse
	(*SnapshotRequest)(nil),                // 7: cloud.lazycat.apis.sys.SnapshotRequest
	(*SnapshotListResponse)(nil),           // 8: cloud.lazycat.apis.sys.SnapshotListResponse
	(*SnapshotBackupRequest)(nil),          // 9: cloud.lazycat.apis.sys.SnapshotBackupRequest
	(*SnapshotBackupTransferRequest)(nil),  // 10: cloud.lazycat.apis.sys.SnapshotBackupTransferRequest
	(*SnapshotBackupTransferResponse)(nil), // 11: cloud.lazycat.apis.sys.SnapshotBackupTransferResponse
	(*SnapshotBackupListRequest)(nil),      // 12: cloud.lazycat.apis.sys.SnapshotBackupListRequest
	(*SnapshotStatusResponse)(nil),         // 13: cloud.lazycat.apis.sys.SnapshotStatusResponse
	(*emptypb.Empty)(nil),                  // 14: google.protobuf.Empty
}
var file_sys_OS_snapshot_proto_depIdxs = []int32{
	1,  // 0: cloud.lazycat.apis.sys.SnapshotBackupTransferRequest.TransferMode:type_name -> cloud.lazycat.apis.sys.SnapshotTransferMode
	0,  // 1: cloud.lazycat.apis.sys.SnapshotStatusResponse.Status:type_name -> cloud.lazycat.apis.sys.SnapshotManagerStatus
	2,  // 2: cloud.lazycat.apis.sys.OSSnapshotService.BackupPoolAdd:input_type -> cloud.lazycat.apis.sys.SnapshotBackupPoolRequest
	2,  // 3: cloud.lazycat.apis.sys.OSSnapshotService.BackupPoolDel:input_type -> cloud.lazycat.apis.sys.SnapshotBackupPoolRequest
	14, // 4: cloud.lazycat.apis.sys.OSSnapshotService.BackupPoolList:input_type -> google.protobuf.Empty
	4,  // 5: cloud.lazycat.apis.sys.OSSnapshotService.DatasetAdd:input_type -> cloud.lazycat.apis.sys.SnapshotDatasetRequest
	4,  // 6: cloud.lazycat.apis.sys.OSSnapshotService.DatasetDel:input_type -> cloud.lazycat.apis.sys.SnapshotDatasetRequest
	14, // 7: cloud.lazycat.apis.sys.OSSnapshotService.DatasetList:input_type -> google.protobuf.Empty
	5,  // 8: cloud.lazycat.apis.sys.OSSnapshotService.DatasetBackupDel:input_type -> cloud.lazycat.apis.sys.SnapshotDatasetBackupRequest
	2,  // 9: cloud.lazycat.apis.sys.OSSnapshotService.DatasetBackupList:input_type -> cloud.lazycat.apis.sys.SnapshotBackupPoolRequest
	7,  // 10: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotAdd:input_type -> cloud.lazycat.apis.sys.SnapshotRequest
	7,  // 11: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotDel:input_type -> cloud.lazycat.apis.sys.SnapshotRequest
	4,  // 12: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotList:input_type -> cloud.lazycat.apis.sys.SnapshotDatasetRequest
	7,  // 13: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotRestore:input_type -> cloud.lazycat.apis.sys.SnapshotRequest
	10, // 14: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotBackupAdd:input_type -> cloud.lazycat.apis.sys.SnapshotBackupTransferRequest
	9,  // 15: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotBackupDel:input_type -> cloud.lazycat.apis.sys.SnapshotBackupRequest
	12, // 16: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotBackupList:input_type -> cloud.lazycat.apis.sys.SnapshotBackupListRequest
	10, // 17: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotBackupRestore:input_type -> cloud.lazycat.apis.sys.SnapshotBackupTransferRequest
	14, // 18: cloud.lazycat.apis.sys.OSSnapshotService.GetStatus:input_type -> google.protobuf.Empty
	14, // 19: cloud.lazycat.apis.sys.OSSnapshotService.StopTransfer:input_type -> google.protobuf.Empty
	14, // 20: cloud.lazycat.apis.sys.OSSnapshotService.BackupPoolAdd:output_type -> google.protobuf.Empty
	14, // 21: cloud.lazycat.apis.sys.OSSnapshotService.BackupPoolDel:output_type -> google.protobuf.Empty
	3,  // 22: cloud.lazycat.apis.sys.OSSnapshotService.BackupPoolList:output_type -> cloud.lazycat.apis.sys.SnapshotBackupPoolListResponse
	14, // 23: cloud.lazycat.apis.sys.OSSnapshotService.DatasetAdd:output_type -> google.protobuf.Empty
	14, // 24: cloud.lazycat.apis.sys.OSSnapshotService.DatasetDel:output_type -> google.protobuf.Empty
	6,  // 25: cloud.lazycat.apis.sys.OSSnapshotService.DatasetList:output_type -> cloud.lazycat.apis.sys.SnapshotDatasetListResponse
	14, // 26: cloud.lazycat.apis.sys.OSSnapshotService.DatasetBackupDel:output_type -> google.protobuf.Empty
	6,  // 27: cloud.lazycat.apis.sys.OSSnapshotService.DatasetBackupList:output_type -> cloud.lazycat.apis.sys.SnapshotDatasetListResponse
	14, // 28: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotAdd:output_type -> google.protobuf.Empty
	14, // 29: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotDel:output_type -> google.protobuf.Empty
	8,  // 30: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotList:output_type -> cloud.lazycat.apis.sys.SnapshotListResponse
	14, // 31: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotRestore:output_type -> google.protobuf.Empty
	11, // 32: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotBackupAdd:output_type -> cloud.lazycat.apis.sys.SnapshotBackupTransferResponse
	14, // 33: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotBackupDel:output_type -> google.protobuf.Empty
	8,  // 34: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotBackupList:output_type -> cloud.lazycat.apis.sys.SnapshotListResponse
	11, // 35: cloud.lazycat.apis.sys.OSSnapshotService.SnapshotBackupRestore:output_type -> cloud.lazycat.apis.sys.SnapshotBackupTransferResponse
	13, // 36: cloud.lazycat.apis.sys.OSSnapshotService.GetStatus:output_type -> cloud.lazycat.apis.sys.SnapshotStatusResponse
	14, // 37: cloud.lazycat.apis.sys.OSSnapshotService.StopTransfer:output_type -> google.protobuf.Empty
	20, // [20:38] is the sub-list for method output_type
	2,  // [2:20] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_sys_OS_snapshot_proto_init() }
func file_sys_OS_snapshot_proto_init() {
	if File_sys_OS_snapshot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sys_OS_snapshot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotBackupPoolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_OS_snapshot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotBackupPoolListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_OS_snapshot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotDatasetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_OS_snapshot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotDatasetBackupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_OS_snapshot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotDatasetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_OS_snapshot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_OS_snapshot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_OS_snapshot_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotBackupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_OS_snapshot_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotBackupTransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_OS_snapshot_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotBackupTransferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_OS_snapshot_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotBackupListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sys_OS_snapshot_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sys_OS_snapshot_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sys_OS_snapshot_proto_goTypes,
		DependencyIndexes: file_sys_OS_snapshot_proto_depIdxs,
		EnumInfos:         file_sys_OS_snapshot_proto_enumTypes,
		MessageInfos:      file_sys_OS_snapshot_proto_msgTypes,
	}.Build()
	File_sys_OS_snapshot_proto = out.File
	file_sys_OS_snapshot_proto_rawDesc = nil
	file_sys_OS_snapshot_proto_goTypes = nil
	file_sys_OS_snapshot_proto_depIdxs = nil
}
