// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.23.4
// source: localdevice/remote-control.proto

package localdevice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// /usr/include/linux/input-event-codes.h
type InputEvent int32

const (
	InputEvent_KEY_HOME      InputEvent = 0
	InputEvent_KEY_BACK      InputEvent = 1
	InputEvent_KEY_F11       InputEvent = 2
	InputEvent_KEY_MENU      InputEvent = 3
	InputEvent_KEY_UP        InputEvent = 4
	InputEvent_KEY_DOWN      InputEvent = 5
	InputEvent_KEY_LEFT      InputEvent = 6
	InputEvent_KEY_RIGHT     InputEvent = 7
	InputEvent_KEY_PAGEUP    InputEvent = 8
	InputEvent_KEY_PAGEDOWN  InputEvent = 9
	InputEvent_KEY_ENTER     InputEvent = 10
	InputEvent_KEY_BACKSPACE InputEvent = 11
)

// Enum value maps for InputEvent.
var (
	InputEvent_name = map[int32]string{
		0:  "KEY_HOME",
		1:  "KEY_BACK",
		2:  "KEY_F11",
		3:  "KEY_MENU",
		4:  "KEY_UP",
		5:  "KEY_DOWN",
		6:  "KEY_LEFT",
		7:  "KEY_RIGHT",
		8:  "KEY_PAGEUP",
		9:  "KEY_PAGEDOWN",
		10: "KEY_ENTER",
		11: "KEY_BACKSPACE",
	}
	InputEvent_value = map[string]int32{
		"KEY_HOME":      0,
		"KEY_BACK":      1,
		"KEY_F11":       2,
		"KEY_MENU":      3,
		"KEY_UP":        4,
		"KEY_DOWN":      5,
		"KEY_LEFT":      6,
		"KEY_RIGHT":     7,
		"KEY_PAGEUP":    8,
		"KEY_PAGEDOWN":  9,
		"KEY_ENTER":     10,
		"KEY_BACKSPACE": 11,
	}
)

func (x InputEvent) Enum() *InputEvent {
	p := new(InputEvent)
	*p = x
	return p
}

func (x InputEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InputEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_localdevice_remote_control_proto_enumTypes[0].Descriptor()
}

func (InputEvent) Type() protoreflect.EnumType {
	return &file_localdevice_remote_control_proto_enumTypes[0]
}

func (x InputEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InputEvent.Descriptor instead.
func (InputEvent) EnumDescriptor() ([]byte, []int) {
	return file_localdevice_remote_control_proto_rawDescGZIP(), []int{0}
}

type EventState int32

const (
	EventState_PRESS   EventState = 0
	EventState_RELEASE EventState = 1
)

// Enum value maps for EventState.
var (
	EventState_name = map[int32]string{
		0: "PRESS",
		1: "RELEASE",
	}
	EventState_value = map[string]int32{
		"PRESS":   0,
		"RELEASE": 1,
	}
)

func (x EventState) Enum() *EventState {
	p := new(EventState)
	*p = x
	return p
}

func (x EventState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventState) Descriptor() protoreflect.EnumDescriptor {
	return file_localdevice_remote_control_proto_enumTypes[1].Descriptor()
}

func (EventState) Type() protoreflect.EnumType {
	return &file_localdevice_remote_control_proto_enumTypes[1]
}

func (x EventState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventState.Descriptor instead.
func (EventState) EnumDescriptor() ([]byte, []int) {
	return file_localdevice_remote_control_proto_rawDescGZIP(), []int{1}
}

// uinput TouchPad interface
type TouchEvent int32

const (
	TouchEvent_MoveTo      TouchEvent = 0
	TouchEvent_LeftClick   TouchEvent = 1
	TouchEvent_RightClick  TouchEvent = 2
	TouchEvent_LeftPress   TouchEvent = 3
	TouchEvent_LeftRelease TouchEvent = 4
	TouchEvent_RightPress  TouchEvent = 5
	TouchEvent_TouchDown   TouchEvent = 6
	TouchEvent_TouchUp     TouchEvent = 7
)

// Enum value maps for TouchEvent.
var (
	TouchEvent_name = map[int32]string{
		0: "MoveTo",
		1: "LeftClick",
		2: "RightClick",
		3: "LeftPress",
		4: "LeftRelease",
		5: "RightPress",
		6: "TouchDown",
		7: "TouchUp",
	}
	TouchEvent_value = map[string]int32{
		"MoveTo":      0,
		"LeftClick":   1,
		"RightClick":  2,
		"LeftPress":   3,
		"LeftRelease": 4,
		"RightPress":  5,
		"TouchDown":   6,
		"TouchUp":     7,
	}
)

func (x TouchEvent) Enum() *TouchEvent {
	p := new(TouchEvent)
	*p = x
	return p
}

func (x TouchEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TouchEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_localdevice_remote_control_proto_enumTypes[2].Descriptor()
}

func (TouchEvent) Type() protoreflect.EnumType {
	return &file_localdevice_remote_control_proto_enumTypes[2]
}

func (x TouchEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TouchEvent.Descriptor instead.
func (TouchEvent) EnumDescriptor() ([]byte, []int) {
	return file_localdevice_remote_control_proto_rawDescGZIP(), []int{2}
}

type SendKeyboardEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  InputEvent `protobuf:"varint,1,opt,name=code,proto3,enum=cloud.lazycat.apis.localdevice.InputEvent" json:"code,omitempty"`
	State EventState `protobuf:"varint,2,opt,name=state,proto3,enum=cloud.lazycat.apis.localdevice.EventState" json:"state,omitempty"`
}

func (x *SendKeyboardEventRequest) Reset() {
	*x = SendKeyboardEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_remote_control_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendKeyboardEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendKeyboardEventRequest) ProtoMessage() {}

func (x *SendKeyboardEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_remote_control_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendKeyboardEventRequest.ProtoReflect.Descriptor instead.
func (*SendKeyboardEventRequest) Descriptor() ([]byte, []int) {
	return file_localdevice_remote_control_proto_rawDescGZIP(), []int{0}
}

func (x *SendKeyboardEventRequest) GetCode() InputEvent {
	if x != nil {
		return x.Code
	}
	return InputEvent_KEY_HOME
}

func (x *SendKeyboardEventRequest) GetState() EventState {
	if x != nil {
		return x.State
	}
	return EventState_PRESS
}

type MovePosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *MovePosition) Reset() {
	*x = MovePosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_remote_control_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovePosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovePosition) ProtoMessage() {}

func (x *MovePosition) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_remote_control_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovePosition.ProtoReflect.Descriptor instead.
func (*MovePosition) Descriptor() ([]byte, []int) {
	return file_localdevice_remote_control_proto_rawDescGZIP(), []int{1}
}

func (x *MovePosition) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *MovePosition) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type SendTouchpadEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event    TouchEvent    `protobuf:"varint,1,opt,name=event,proto3,enum=cloud.lazycat.apis.localdevice.TouchEvent" json:"event,omitempty"`
	Position *MovePosition `protobuf:"bytes,2,opt,name=position,proto3,oneof" json:"position,omitempty"`
}

func (x *SendTouchpadEventRequest) Reset() {
	*x = SendTouchpadEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_remote_control_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTouchpadEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTouchpadEventRequest) ProtoMessage() {}

func (x *SendTouchpadEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_remote_control_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTouchpadEventRequest.ProtoReflect.Descriptor instead.
func (*SendTouchpadEventRequest) Descriptor() ([]byte, []int) {
	return file_localdevice_remote_control_proto_rawDescGZIP(), []int{2}
}

func (x *SendTouchpadEventRequest) GetEvent() TouchEvent {
	if x != nil {
		return x.Event
	}
	return TouchEvent_MoveTo
}

func (x *SendTouchpadEventRequest) GetPosition() *MovePosition {
	if x != nil {
		return x.Position
	}
	return nil
}

type SendTouchpadMoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *MovePosition `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *SendTouchpadMoveRequest) Reset() {
	*x = SendTouchpadMoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_remote_control_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTouchpadMoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTouchpadMoveRequest) ProtoMessage() {}

func (x *SendTouchpadMoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_remote_control_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTouchpadMoveRequest.ProtoReflect.Descriptor instead.
func (*SendTouchpadMoveRequest) Descriptor() ([]byte, []int) {
	return file_localdevice_remote_control_proto_rawDescGZIP(), []int{3}
}

func (x *SendTouchpadMoveRequest) GetPosition() *MovePosition {
	if x != nil {
		return x.Position
	}
	return nil
}

type SendMouseMoveByDirectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pixel int32 `protobuf:"varint,1,opt,name=pixel,proto3" json:"pixel,omitempty"`
}

func (x *SendMouseMoveByDirectionRequest) Reset() {
	*x = SendMouseMoveByDirectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_remote_control_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMouseMoveByDirectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMouseMoveByDirectionRequest) ProtoMessage() {}

func (x *SendMouseMoveByDirectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_remote_control_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMouseMoveByDirectionRequest.ProtoReflect.Descriptor instead.
func (*SendMouseMoveByDirectionRequest) Descriptor() ([]byte, []int) {
	return file_localdevice_remote_control_proto_rawDescGZIP(), []int{4}
}

func (x *SendMouseMoveByDirectionRequest) GetPixel() int32 {
	if x != nil {
		return x.Pixel
	}
	return 0
}

type SendMouseMoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *SendMouseMoveRequest) Reset() {
	*x = SendMouseMoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_remote_control_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMouseMoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMouseMoveRequest) ProtoMessage() {}

func (x *SendMouseMoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_remote_control_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMouseMoveRequest.ProtoReflect.Descriptor instead.
func (*SendMouseMoveRequest) Descriptor() ([]byte, []int) {
	return file_localdevice_remote_control_proto_rawDescGZIP(), []int{5}
}

func (x *SendMouseMoveRequest) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *SendMouseMoveRequest) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type SendMouseWheelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Horizontal bool  `protobuf:"varint,1,opt,name=horizontal,proto3" json:"horizontal,omitempty"`
	Delta      int32 `protobuf:"varint,2,opt,name=delta,proto3" json:"delta,omitempty"`
}

func (x *SendMouseWheelRequest) Reset() {
	*x = SendMouseWheelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_remote_control_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMouseWheelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMouseWheelRequest) ProtoMessage() {}

func (x *SendMouseWheelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_remote_control_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMouseWheelRequest.ProtoReflect.Descriptor instead.
func (*SendMouseWheelRequest) Descriptor() ([]byte, []int) {
	return file_localdevice_remote_control_proto_rawDescGZIP(), []int{6}
}

func (x *SendMouseWheelRequest) GetHorizontal() bool {
	if x != nil {
		return x.Horizontal
	}
	return false
}

func (x *SendMouseWheelRequest) GetDelta() int32 {
	if x != nil {
		return x.Delta
	}
	return 0
}

type SetRemoteScreenRectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height int32 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Width  int32 `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *SetRemoteScreenRectRequest) Reset() {
	*x = SetRemoteScreenRectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_remote_control_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRemoteScreenRectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRemoteScreenRectRequest) ProtoMessage() {}

func (x *SetRemoteScreenRectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_remote_control_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRemoteScreenRectRequest.ProtoReflect.Descriptor instead.
func (*SetRemoteScreenRectRequest) Descriptor() ([]byte, []int) {
	return file_localdevice_remote_control_proto_rawDescGZIP(), []int{7}
}

func (x *SetRemoteScreenRectRequest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *SetRemoteScreenRectRequest) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

type WriteClipboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *WriteClipboardRequest) Reset() {
	*x = WriteClipboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_remote_control_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteClipboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteClipboardRequest) ProtoMessage() {}

func (x *WriteClipboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_remote_control_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteClipboardRequest.ProtoReflect.Descriptor instead.
func (*WriteClipboardRequest) Descriptor() ([]byte, []int) {
	return file_localdevice_remote_control_proto_rawDescGZIP(), []int{8}
}

func (x *WriteClipboardRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ReadClipboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *ReadClipboardResponse) Reset() {
	*x = ReadClipboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_remote_control_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadClipboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadClipboardResponse) ProtoMessage() {}

func (x *ReadClipboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_remote_control_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadClipboardResponse.ProtoReflect.Descriptor instead.
func (*ReadClipboardResponse) Descriptor() ([]byte, []int) {
	return file_localdevice_remote_control_proto_rawDescGZIP(), []int{9}
}

func (x *ReadClipboardResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

var File_localdevice_remote_control_proto protoreflect.FileDescriptor

var file_localdevice_remote_control_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x9c, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x6e, 0x64, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2a,
	0x0a, 0x0c, 0x4d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c,
	0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x22, 0xb8, 0x01, 0x0a, 0x18, 0x53,
	0x65, 0x6e, 0x64, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76,
	0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x75,
	0x63, 0x68, 0x70, 0x61, 0x64, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x48, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63,
	0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x37, 0x0a, 0x1f, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x42, 0x79, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x22, 0x32, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x75, 0x73, 0x65,
	0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x22, 0x4d, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x6f, 0x75, 0x73, 0x65, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x22, 0x4a, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x22, 0x2b, 0x0a, 0x15, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x70, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22,
	0x2b, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x2a, 0xbe, 0x01, 0x0a,
	0x0a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x08, 0x4b,
	0x45, 0x59, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4b, 0x45, 0x59,
	0x5f, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4b, 0x45, 0x59, 0x5f, 0x46,
	0x31, 0x31, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4b, 0x45, 0x59, 0x5f, 0x4d, 0x45, 0x4e, 0x55,
	0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4b, 0x45, 0x59, 0x5f, 0x55, 0x50, 0x10, 0x04, 0x12, 0x0c,
	0x0a, 0x08, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08,
	0x4b, 0x45, 0x59, 0x5f, 0x4c, 0x45, 0x46, 0x54, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x4b, 0x45,
	0x59, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x4b, 0x45, 0x59,
	0x5f, 0x50, 0x41, 0x47, 0x45, 0x55, 0x50, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x45, 0x59,
	0x5f, 0x50, 0x41, 0x47, 0x45, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x4b,
	0x45, 0x59, 0x5f, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x10, 0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x4b, 0x45,
	0x59, 0x5f, 0x42, 0x41, 0x43, 0x4b, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x0b, 0x2a, 0x24, 0x0a,
	0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x50,
	0x52, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53,
	0x45, 0x10, 0x01, 0x2a, 0x83, 0x01, 0x0a, 0x0a, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x4c, 0x65, 0x66, 0x74, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x10, 0x01, 0x12, 0x0e, 0x0a,
	0x0a, 0x52, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x4c, 0x65, 0x66, 0x74, 0x50, 0x72, 0x65, 0x73, 0x73, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b,
	0x4c, 0x65, 0x66, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x10, 0x04, 0x12, 0x0e, 0x0a,
	0x0a, 0x52, 0x69, 0x67, 0x68, 0x74, 0x50, 0x72, 0x65, 0x73, 0x73, 0x10, 0x05, 0x12, 0x0d, 0x0a,
	0x09, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x44, 0x6f, 0x77, 0x6e, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07,
	0x54, 0x6f, 0x75, 0x63, 0x68, 0x55, 0x70, 0x10, 0x07, 0x32, 0x9b, 0x0f, 0x0a, 0x0d, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x67, 0x0a, 0x11, 0x53,
	0x65, 0x6e, 0x64, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x38, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x75, 0x63,
	0x68, 0x70, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54,
	0x6f, 0x75, 0x63, 0x68, 0x70, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a,
	0x11, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61, 0x64, 0x43, 0x6c, 0x69,
	0x63, 0x6b, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x75, 0x63,
	0x68, 0x70, 0x61, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x4b, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61, 0x64,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a,
	0x10, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61, 0x64, 0x4d, 0x6f, 0x76,
	0x65, 0x12, 0x37, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61, 0x64, 0x4d,
	0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x75, 0x73,
	0x65, 0x4d, 0x6f, 0x76, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x3f, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d,
	0x6f, 0x75, 0x73, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x42, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x75, 0x73,
	0x65, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3f, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x6f, 0x75, 0x73, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x42, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x75,
	0x73, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x55, 0x70, 0x12, 0x3f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f,
	0x75, 0x73, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x42, 0x79, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x75, 0x73, 0x65,
	0x4d, 0x6f, 0x76, 0x65, 0x12, 0x34, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a,
	0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x4d,
	0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0f, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x4d, 0x6f, 0x76,
	0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x34, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x75,
	0x73, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x46, 0x0a, 0x12, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x47, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x14, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x43, 0x6c, 0x69,
	0x63, 0x6b, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x75, 0x73,
	0x65, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x12, 0x35, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c,
	0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x75, 0x73,
	0x65, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x10, 0x4d, 0x6f, 0x75, 0x73, 0x65,
	0x57, 0x68, 0x65, 0x65, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x35, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x48,
	0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x74, 0x12,
	0x3a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x52, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6c,
	0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x35, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6c,
	0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64,
	0x43, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x35, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x07, 0x44, 0x6f,
	0x50, 0x61, 0x73, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x65, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x6e, 0x61, 0x6b, 0x65, 0x73, 0x69, 0x2f, 0x6c, 0x7a,
	0x63, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x67, 0x6f, 0x2f, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_localdevice_remote_control_proto_rawDescOnce sync.Once
	file_localdevice_remote_control_proto_rawDescData = file_localdevice_remote_control_proto_rawDesc
)

func file_localdevice_remote_control_proto_rawDescGZIP() []byte {
	file_localdevice_remote_control_proto_rawDescOnce.Do(func() {
		file_localdevice_remote_control_proto_rawDescData = protoimpl.X.CompressGZIP(file_localdevice_remote_control_proto_rawDescData)
	})
	return file_localdevice_remote_control_proto_rawDescData
}

var file_localdevice_remote_control_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_localdevice_remote_control_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_localdevice_remote_control_proto_goTypes = []interface{}{
	(InputEvent)(0),                         // 0: cloud.lazycat.apis.localdevice.InputEvent
	(EventState)(0),                         // 1: cloud.lazycat.apis.localdevice.EventState
	(TouchEvent)(0),                         // 2: cloud.lazycat.apis.localdevice.TouchEvent
	(*SendKeyboardEventRequest)(nil),        // 3: cloud.lazycat.apis.localdevice.SendKeyboardEventRequest
	(*MovePosition)(nil),                    // 4: cloud.lazycat.apis.localdevice.MovePosition
	(*SendTouchpadEventRequest)(nil),        // 5: cloud.lazycat.apis.localdevice.SendTouchpadEventRequest
	(*SendTouchpadMoveRequest)(nil),         // 6: cloud.lazycat.apis.localdevice.SendTouchpadMoveRequest
	(*SendMouseMoveByDirectionRequest)(nil), // 7: cloud.lazycat.apis.localdevice.SendMouseMoveByDirectionRequest
	(*SendMouseMoveRequest)(nil),            // 8: cloud.lazycat.apis.localdevice.SendMouseMoveRequest
	(*SendMouseWheelRequest)(nil),           // 9: cloud.lazycat.apis.localdevice.SendMouseWheelRequest
	(*SetRemoteScreenRectRequest)(nil),      // 10: cloud.lazycat.apis.localdevice.SetRemoteScreenRectRequest
	(*WriteClipboardRequest)(nil),           // 11: cloud.lazycat.apis.localdevice.WriteClipboardRequest
	(*ReadClipboardResponse)(nil),           // 12: cloud.lazycat.apis.localdevice.ReadClipboardResponse
	(*emptypb.Empty)(nil),                   // 13: google.protobuf.Empty
}
var file_localdevice_remote_control_proto_depIdxs = []int32{
	0,  // 0: cloud.lazycat.apis.localdevice.SendKeyboardEventRequest.code:type_name -> cloud.lazycat.apis.localdevice.InputEvent
	1,  // 1: cloud.lazycat.apis.localdevice.SendKeyboardEventRequest.state:type_name -> cloud.lazycat.apis.localdevice.EventState
	2,  // 2: cloud.lazycat.apis.localdevice.SendTouchpadEventRequest.event:type_name -> cloud.lazycat.apis.localdevice.TouchEvent
	4,  // 3: cloud.lazycat.apis.localdevice.SendTouchpadEventRequest.position:type_name -> cloud.lazycat.apis.localdevice.MovePosition
	4,  // 4: cloud.lazycat.apis.localdevice.SendTouchpadMoveRequest.position:type_name -> cloud.lazycat.apis.localdevice.MovePosition
	3,  // 5: cloud.lazycat.apis.localdevice.RemoteControl.SendKeyboardEvent:input_type -> cloud.lazycat.apis.localdevice.SendKeyboardEventRequest
	5,  // 6: cloud.lazycat.apis.localdevice.RemoteControl.SendTouchpadEvent:input_type -> cloud.lazycat.apis.localdevice.SendTouchpadEventRequest
	13, // 7: cloud.lazycat.apis.localdevice.RemoteControl.SendTouchpadClick:input_type -> google.protobuf.Empty
	13, // 8: cloud.lazycat.apis.localdevice.RemoteControl.SendTouchpadRightClick:input_type -> google.protobuf.Empty
	13, // 9: cloud.lazycat.apis.localdevice.RemoteControl.SendTouchpadDoubleClick:input_type -> google.protobuf.Empty
	6,  // 10: cloud.lazycat.apis.localdevice.RemoteControl.SendTouchpadMove:input_type -> cloud.lazycat.apis.localdevice.SendTouchpadMoveRequest
	7,  // 11: cloud.lazycat.apis.localdevice.RemoteControl.SendMouseMoveLeft:input_type -> cloud.lazycat.apis.localdevice.SendMouseMoveByDirectionRequest
	7,  // 12: cloud.lazycat.apis.localdevice.RemoteControl.SendMouseMoveRight:input_type -> cloud.lazycat.apis.localdevice.SendMouseMoveByDirectionRequest
	7,  // 13: cloud.lazycat.apis.localdevice.RemoteControl.SendMouseMoveUp:input_type -> cloud.lazycat.apis.localdevice.SendMouseMoveByDirectionRequest
	8,  // 14: cloud.lazycat.apis.localdevice.RemoteControl.SendMouseMove:input_type -> cloud.lazycat.apis.localdevice.SendMouseMoveRequest
	8,  // 15: cloud.lazycat.apis.localdevice.RemoteControl.MouseMoveStream:input_type -> cloud.lazycat.apis.localdevice.SendMouseMoveRequest
	13, // 16: cloud.lazycat.apis.localdevice.RemoteControl.SendMouseLeftClick:input_type -> google.protobuf.Empty
	13, // 17: cloud.lazycat.apis.localdevice.RemoteControl.SendMouseRightClick:input_type -> google.protobuf.Empty
	13, // 18: cloud.lazycat.apis.localdevice.RemoteControl.SendMouseMiddleClick:input_type -> google.protobuf.Empty
	9,  // 19: cloud.lazycat.apis.localdevice.RemoteControl.SendMouseWheel:input_type -> cloud.lazycat.apis.localdevice.SendMouseWheelRequest
	9,  // 20: cloud.lazycat.apis.localdevice.RemoteControl.MouseWheelStream:input_type -> cloud.lazycat.apis.localdevice.SendMouseWheelRequest
	13, // 21: cloud.lazycat.apis.localdevice.RemoteControl.SendMouseDoubleClick:input_type -> google.protobuf.Empty
	10, // 22: cloud.lazycat.apis.localdevice.RemoteControl.SetRemoteScreenRect:input_type -> cloud.lazycat.apis.localdevice.SetRemoteScreenRectRequest
	11, // 23: cloud.lazycat.apis.localdevice.RemoteControl.WriteClipboard:input_type -> cloud.lazycat.apis.localdevice.WriteClipboardRequest
	13, // 24: cloud.lazycat.apis.localdevice.RemoteControl.ReadClipboard:input_type -> google.protobuf.Empty
	13, // 25: cloud.lazycat.apis.localdevice.RemoteControl.DoPaste:input_type -> google.protobuf.Empty
	13, // 26: cloud.lazycat.apis.localdevice.RemoteControl.SendKeyboardEvent:output_type -> google.protobuf.Empty
	13, // 27: cloud.lazycat.apis.localdevice.RemoteControl.SendTouchpadEvent:output_type -> google.protobuf.Empty
	13, // 28: cloud.lazycat.apis.localdevice.RemoteControl.SendTouchpadClick:output_type -> google.protobuf.Empty
	13, // 29: cloud.lazycat.apis.localdevice.RemoteControl.SendTouchpadRightClick:output_type -> google.protobuf.Empty
	13, // 30: cloud.lazycat.apis.localdevice.RemoteControl.SendTouchpadDoubleClick:output_type -> google.protobuf.Empty
	13, // 31: cloud.lazycat.apis.localdevice.RemoteControl.SendTouchpadMove:output_type -> google.protobuf.Empty
	13, // 32: cloud.lazycat.apis.localdevice.RemoteControl.SendMouseMoveLeft:output_type -> google.protobuf.Empty
	13, // 33: cloud.lazycat.apis.localdevice.RemoteControl.SendMouseMoveRight:output_type -> google.protobuf.Empty
	13, // 34: cloud.lazycat.apis.localdevice.RemoteControl.SendMouseMoveUp:output_type -> google.protobuf.Empty
	13, // 35: cloud.lazycat.apis.localdevice.RemoteControl.SendMouseMove:output_type -> google.protobuf.Empty
	13, // 36: cloud.lazycat.apis.localdevice.RemoteControl.MouseMoveStream:output_type -> google.protobuf.Empty
	13, // 37: cloud.lazycat.apis.localdevice.RemoteControl.SendMouseLeftClick:output_type -> google.protobuf.Empty
	13, // 38: cloud.lazycat.apis.localdevice.RemoteControl.SendMouseRightClick:output_type -> google.protobuf.Empty
	13, // 39: cloud.lazycat.apis.localdevice.RemoteControl.SendMouseMiddleClick:output_type -> google.protobuf.Empty
	13, // 40: cloud.lazycat.apis.localdevice.RemoteControl.SendMouseWheel:output_type -> google.protobuf.Empty
	13, // 41: cloud.lazycat.apis.localdevice.RemoteControl.MouseWheelStream:output_type -> google.protobuf.Empty
	13, // 42: cloud.lazycat.apis.localdevice.RemoteControl.SendMouseDoubleClick:output_type -> google.protobuf.Empty
	13, // 43: cloud.lazycat.apis.localdevice.RemoteControl.SetRemoteScreenRect:output_type -> google.protobuf.Empty
	13, // 44: cloud.lazycat.apis.localdevice.RemoteControl.WriteClipboard:output_type -> google.protobuf.Empty
	12, // 45: cloud.lazycat.apis.localdevice.RemoteControl.ReadClipboard:output_type -> cloud.lazycat.apis.localdevice.ReadClipboardResponse
	13, // 46: cloud.lazycat.apis.localdevice.RemoteControl.DoPaste:output_type -> google.protobuf.Empty
	26, // [26:47] is the sub-list for method output_type
	5,  // [5:26] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_localdevice_remote_control_proto_init() }
func file_localdevice_remote_control_proto_init() {
	if File_localdevice_remote_control_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_localdevice_remote_control_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendKeyboardEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_remote_control_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovePosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_remote_control_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTouchpadEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_remote_control_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTouchpadMoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_remote_control_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMouseMoveByDirectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_remote_control_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMouseMoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_remote_control_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMouseWheelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_remote_control_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRemoteScreenRectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_remote_control_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteClipboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_remote_control_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadClipboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_localdevice_remote_control_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_localdevice_remote_control_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_localdevice_remote_control_proto_goTypes,
		DependencyIndexes: file_localdevice_remote_control_proto_depIdxs,
		EnumInfos:         file_localdevice_remote_control_proto_enumTypes,
		MessageInfos:      file_localdevice_remote_control_proto_msgTypes,
	}.Build()
	File_localdevice_remote_control_proto = out.File
	file_localdevice_remote_control_proto_rawDesc = nil
	file_localdevice_remote_control_proto_goTypes = nil
	file_localdevice_remote_control_proto_depIdxs = nil
}
