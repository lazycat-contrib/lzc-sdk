// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.1
// source: localdevice/photo.proto

package localdevice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查询照片信息的排序方式
type PhotoMetasSortType int32

const (
	// 创建时间降序
	PhotoMetasSortType_CREATE_DATE_DESC PhotoMetasSortType = 0
	// 拍照时间降序
	PhotoMetasSortType_TAKEN_DATE_DESC PhotoMetasSortType = 1
	// 创建时间升序
	PhotoMetasSortType_CREATE_DATE_ASC PhotoMetasSortType = 2
	// 拍摄时间升序
	PhotoMetasSortType_TAKEN_DATE_ASC PhotoMetasSortType = 3
	// 创建时间,拍摄时间降序
	PhotoMetasSortType_CREATE_TAKEN_DESC PhotoMetasSortType = 4
	// 创建时间,拍摄时间升序
	PhotoMetasSortType_CREATE_TAKEN_ASC PhotoMetasSortType = 5
	// 拍摄时间，创建时间 降序
	PhotoMetasSortType_TOKEN_CREATE_DESC PhotoMetasSortType = 6
	// 拍摄时间，创建时间升序
	PhotoMetasSortType_TOKEN_CREATE_ASC PhotoMetasSortType = 7
)

// Enum value maps for PhotoMetasSortType.
var (
	PhotoMetasSortType_name = map[int32]string{
		0: "CREATE_DATE_DESC",
		1: "TAKEN_DATE_DESC",
		2: "CREATE_DATE_ASC",
		3: "TAKEN_DATE_ASC",
		4: "CREATE_TAKEN_DESC",
		5: "CREATE_TAKEN_ASC",
		6: "TOKEN_CREATE_DESC",
		7: "TOKEN_CREATE_ASC",
	}
	PhotoMetasSortType_value = map[string]int32{
		"CREATE_DATE_DESC":  0,
		"TAKEN_DATE_DESC":   1,
		"CREATE_DATE_ASC":   2,
		"TAKEN_DATE_ASC":    3,
		"CREATE_TAKEN_DESC": 4,
		"CREATE_TAKEN_ASC":  5,
		"TOKEN_CREATE_DESC": 6,
		"TOKEN_CREATE_ASC":  7,
	}
)

func (x PhotoMetasSortType) Enum() *PhotoMetasSortType {
	p := new(PhotoMetasSortType)
	*p = x
	return p
}

func (x PhotoMetasSortType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhotoMetasSortType) Descriptor() protoreflect.EnumDescriptor {
	return file_localdevice_photo_proto_enumTypes[0].Descriptor()
}

func (PhotoMetasSortType) Type() protoreflect.EnumType {
	return &file_localdevice_photo_proto_enumTypes[0]
}

func (x PhotoMetasSortType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PhotoMetasSortType.Descriptor instead.
func (PhotoMetasSortType) EnumDescriptor() ([]byte, []int) {
	return file_localdevice_photo_proto_rawDescGZIP(), []int{0}
}

type QueryPhotoHashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// changed_after语义为: changed_after之后的新增文件都会加入返回的集合里,
	// 与文件本身的modify time无关。
	ChangedAfter *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=changed_after,json=changedAfter,proto3" json:"changed_after,omitempty"`
}

func (x *QueryPhotoHashRequest) Reset() {
	*x = QueryPhotoHashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_photo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPhotoHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPhotoHashRequest) ProtoMessage() {}

func (x *QueryPhotoHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_photo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPhotoHashRequest.ProtoReflect.Descriptor instead.
func (*QueryPhotoHashRequest) Descriptor() ([]byte, []int) {
	return file_localdevice_photo_proto_rawDescGZIP(), []int{0}
}

func (x *QueryPhotoHashRequest) GetChangedAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangedAfter
	}
	return nil
}

type PhotoHashSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// hash --> id
	Entry map[string]string `protobuf:"bytes,1,rep,name=entry,proto3" json:"entry,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PhotoHashSet) Reset() {
	*x = PhotoHashSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_photo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoHashSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoHashSet) ProtoMessage() {}

func (x *PhotoHashSet) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_photo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoHashSet.ProtoReflect.Descriptor instead.
func (*PhotoHashSet) Descriptor() ([]byte, []int) {
	return file_localdevice_photo_proto_rawDescGZIP(), []int{1}
}

func (x *PhotoHashSet) GetEntry() map[string]string {
	if x != nil {
		return x.Entry
	}
	return nil
}

type QueryPhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryPhotoRequest) Reset() {
	*x = QueryPhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_photo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPhotoRequest) ProtoMessage() {}

func (x *QueryPhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_photo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPhotoRequest.ProtoReflect.Descriptor instead.
func (*QueryPhotoRequest) Descriptor() ([]byte, []int) {
	return file_localdevice_photo_proto_rawDescGZIP(), []int{2}
}

func (x *QueryPhotoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PutPhotoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 新添加图片的id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PutPhotoReply) Reset() {
	*x = PutPhotoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_photo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutPhotoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutPhotoReply) ProtoMessage() {}

func (x *PutPhotoReply) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_photo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutPhotoReply.ProtoReflect.Descriptor instead.
func (*PutPhotoReply) Descriptor() ([]byte, []int) {
	return file_localdevice_photo_proto_rawDescGZIP(), []int{3}
}

func (x *PutPhotoReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeletePhotoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 删除失败的图片id
	FailedId []string `protobuf:"bytes,1,rep,name=failed_id,json=failedId,proto3" json:"failed_id,omitempty"`
}

func (x *DeletePhotoReply) Reset() {
	*x = DeletePhotoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_photo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePhotoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePhotoReply) ProtoMessage() {}

func (x *DeletePhotoReply) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_photo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePhotoReply.ProtoReflect.Descriptor instead.
func (*DeletePhotoReply) Descriptor() ([]byte, []int) {
	return file_localdevice_photo_proto_rawDescGZIP(), []int{4}
}

func (x *DeletePhotoReply) GetFailedId() []string {
	if x != nil {
		return x.FailedId
	}
	return nil
}

type DeletePhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePhotoRequest) Reset() {
	*x = DeletePhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_photo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePhotoRequest) ProtoMessage() {}

func (x *DeletePhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_photo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePhotoRequest.ProtoReflect.Descriptor instead.
func (*DeletePhotoRequest) Descriptor() ([]byte, []int) {
	return file_localdevice_photo_proto_rawDescGZIP(), []int{5}
}

func (x *DeletePhotoRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type ListPhotoMetasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 相册ID, 若为空，则表示返回所有相册中的图片
	AlbumIds        []string `protobuf:"bytes,1,rep,name=album_ids,json=albumIds,proto3" json:"album_ids,omitempty"`
	ThumbnailWidth  int32    `protobuf:"varint,2,opt,name=thumbnail_width,json=thumbnailWidth,proto3" json:"thumbnail_width,omitempty"`
	ThumbnailHeight int32    `protobuf:"varint,3,opt,name=thumbnail_height,json=thumbnailHeight,proto3" json:"thumbnail_height,omitempty"`
	NeedFileName    bool     `protobuf:"varint,4,opt,name=need_file_name,json=needFileName,proto3" json:"need_file_name,omitempty"`
	NeedAlbumIds    bool     `protobuf:"varint,5,opt,name=need_album_ids,json=needAlbumIds,proto3" json:"need_album_ids,omitempty"`
	// 不填写默认按照创建时间降序排序
	Stype *PhotoMetasSortType `protobuf:"varint,6,opt,name=stype,proto3,enum=cloud.lazycat.apis.localdevice.PhotoMetasSortType,oneof" json:"stype,omitempty"`
	// 查询第几页(不填写默认为第一页)
	PageNum *uint32 `protobuf:"varint,7,opt,name=page_num,json=pageNum,proto3,oneof" json:"page_num,omitempty"`
	// （每页返回的数据条数，不填写将返回所有数据）
	PageSize *uint32 `protobuf:"varint,8,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	// 是否过滤视频 （默认false,照片和视频信息一起返回)
	IsFilterVideo *bool `protobuf:"varint,9,opt,name=is_filter_video,json=isFilterVideo,proto3,oneof" json:"is_filter_video,omitempty"`
	// 给定文件的修改时间过滤meta信息返回
	FilterByModifiedDate *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=filter_by_modified_date,json=filterByModifiedDate,proto3,oneof" json:"filter_by_modified_date,omitempty"`
}

func (x *ListPhotoMetasRequest) Reset() {
	*x = ListPhotoMetasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_photo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPhotoMetasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPhotoMetasRequest) ProtoMessage() {}

func (x *ListPhotoMetasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_photo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPhotoMetasRequest.ProtoReflect.Descriptor instead.
func (*ListPhotoMetasRequest) Descriptor() ([]byte, []int) {
	return file_localdevice_photo_proto_rawDescGZIP(), []int{6}
}

func (x *ListPhotoMetasRequest) GetAlbumIds() []string {
	if x != nil {
		return x.AlbumIds
	}
	return nil
}

func (x *ListPhotoMetasRequest) GetThumbnailWidth() int32 {
	if x != nil {
		return x.ThumbnailWidth
	}
	return 0
}

func (x *ListPhotoMetasRequest) GetThumbnailHeight() int32 {
	if x != nil {
		return x.ThumbnailHeight
	}
	return 0
}

func (x *ListPhotoMetasRequest) GetNeedFileName() bool {
	if x != nil {
		return x.NeedFileName
	}
	return false
}

func (x *ListPhotoMetasRequest) GetNeedAlbumIds() bool {
	if x != nil {
		return x.NeedAlbumIds
	}
	return false
}

func (x *ListPhotoMetasRequest) GetStype() PhotoMetasSortType {
	if x != nil && x.Stype != nil {
		return *x.Stype
	}
	return PhotoMetasSortType_CREATE_DATE_DESC
}

func (x *ListPhotoMetasRequest) GetPageNum() uint32 {
	if x != nil && x.PageNum != nil {
		return *x.PageNum
	}
	return 0
}

func (x *ListPhotoMetasRequest) GetPageSize() uint32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListPhotoMetasRequest) GetIsFilterVideo() bool {
	if x != nil && x.IsFilterVideo != nil {
		return *x.IsFilterVideo
	}
	return false
}

func (x *ListPhotoMetasRequest) GetFilterByModifiedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.FilterByModifiedDate
	}
	return nil
}

type PhotoMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PhotoUrl     string                 `protobuf:"bytes,2,opt,name=photo_url,json=photoUrl,proto3" json:"photo_url,omitempty"` //浏览器直接可以使用的url, 可能是device domain下的一个文件或是一个data url
	ThumbnailUrl string                 `protobuf:"bytes,3,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	Width        string                 `protobuf:"bytes,4,opt,name=width,proto3" json:"width,omitempty"`
	Height       string                 `protobuf:"bytes,5,opt,name=height,proto3" json:"height,omitempty"`
	AlbumIds     []string               `protobuf:"bytes,6,rep,name=album_ids,json=albumIds,proto3" json:"album_ids,omitempty"`
	Size         int64                  `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	Mime         string                 `protobuf:"bytes,8,opt,name=mime,proto3" json:"mime,omitempty"`
	FileName     *string                `protobuf:"bytes,10,opt,name=file_name,json=fileName,proto3,oneof" json:"file_name,omitempty"`
	CreationDate *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=creation_date,json=creationDate,proto3,oneof" json:"creation_date,omitempty"`
	Latitude     *float32               `protobuf:"fixed32,12,opt,name=latitude,proto3,oneof" json:"latitude,omitempty"`
	Longitude    *float32               `protobuf:"fixed32,13,opt,name=longitude,proto3,oneof" json:"longitude,omitempty"`
	TakenDate    *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=taken_date,json=takenDate,proto3,oneof" json:"taken_date,omitempty"`
	ModifiedDate *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=modified_date,json=modifiedDate,proto3,oneof" json:"modified_date,omitempty"`
}

func (x *PhotoMeta) Reset() {
	*x = PhotoMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_photo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoMeta) ProtoMessage() {}

func (x *PhotoMeta) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_photo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoMeta.ProtoReflect.Descriptor instead.
func (*PhotoMeta) Descriptor() ([]byte, []int) {
	return file_localdevice_photo_proto_rawDescGZIP(), []int{7}
}

func (x *PhotoMeta) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PhotoMeta) GetPhotoUrl() string {
	if x != nil {
		return x.PhotoUrl
	}
	return ""
}

func (x *PhotoMeta) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *PhotoMeta) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

func (x *PhotoMeta) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *PhotoMeta) GetAlbumIds() []string {
	if x != nil {
		return x.AlbumIds
	}
	return nil
}

func (x *PhotoMeta) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PhotoMeta) GetMime() string {
	if x != nil {
		return x.Mime
	}
	return ""
}

func (x *PhotoMeta) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *PhotoMeta) GetCreationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *PhotoMeta) GetLatitude() float32 {
	if x != nil && x.Latitude != nil {
		return *x.Latitude
	}
	return 0
}

func (x *PhotoMeta) GetLongitude() float32 {
	if x != nil && x.Longitude != nil {
		return *x.Longitude
	}
	return 0
}

func (x *PhotoMeta) GetTakenDate() *timestamppb.Timestamp {
	if x != nil {
		return x.TakenDate
	}
	return nil
}

func (x *PhotoMeta) GetModifiedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ModifiedDate
	}
	return nil
}

type Album struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ImageCount    int32  `protobuf:"varint,3,opt,name=image_count,json=imageCount,proto3" json:"image_count,omitempty"`
	VideoCount    int32  `protobuf:"varint,4,opt,name=video_count,json=videoCount,proto3" json:"video_count,omitempty"`
	CoverImageUrl string `protobuf:"bytes,5,opt,name=cover_image_url,json=coverImageUrl,proto3" json:"cover_image_url,omitempty"`
	// 封面文件(图）id
	CoverImageId string `protobuf:"bytes,6,opt,name=cover_image_id,json=coverImageId,proto3" json:"cover_image_id,omitempty"`
}

func (x *Album) Reset() {
	*x = Album{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_photo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Album) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Album) ProtoMessage() {}

func (x *Album) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_photo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Album.ProtoReflect.Descriptor instead.
func (*Album) Descriptor() ([]byte, []int) {
	return file_localdevice_photo_proto_rawDescGZIP(), []int{8}
}

func (x *Album) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Album) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Album) GetImageCount() int32 {
	if x != nil {
		return x.ImageCount
	}
	return 0
}

func (x *Album) GetVideoCount() int32 {
	if x != nil {
		return x.VideoCount
	}
	return 0
}

func (x *Album) GetCoverImageUrl() string {
	if x != nil {
		return x.CoverImageUrl
	}
	return ""
}

func (x *Album) GetCoverImageId() string {
	if x != nil {
		return x.CoverImageId
	}
	return ""
}

type ListAlbumsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThumbnailWidth     *int32 `protobuf:"varint,1,opt,name=thumbnail_width,json=thumbnailWidth,proto3,oneof" json:"thumbnail_width,omitempty"`
	ThumbnailHeight    *int32 `protobuf:"varint,2,opt,name=thumbnail_height,json=thumbnailHeight,proto3,oneof" json:"thumbnail_height,omitempty"`
	ThumbnailChooseWay *int32 `protobuf:"varint,3,opt,name=thumbnail_choose_way,json=thumbnailChooseWay,proto3,oneof" json:"thumbnail_choose_way,omitempty"`
}

func (x *ListAlbumsRequest) Reset() {
	*x = ListAlbumsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_photo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlbumsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlbumsRequest) ProtoMessage() {}

func (x *ListAlbumsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_photo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlbumsRequest.ProtoReflect.Descriptor instead.
func (*ListAlbumsRequest) Descriptor() ([]byte, []int) {
	return file_localdevice_photo_proto_rawDescGZIP(), []int{9}
}

func (x *ListAlbumsRequest) GetThumbnailWidth() int32 {
	if x != nil && x.ThumbnailWidth != nil {
		return *x.ThumbnailWidth
	}
	return 0
}

func (x *ListAlbumsRequest) GetThumbnailHeight() int32 {
	if x != nil && x.ThumbnailHeight != nil {
		return *x.ThumbnailHeight
	}
	return 0
}

func (x *ListAlbumsRequest) GetThumbnailChooseWay() int32 {
	if x != nil && x.ThumbnailChooseWay != nil {
		return *x.ThumbnailChooseWay
	}
	return 0
}

type ListAlbumsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Albums []*Album `protobuf:"bytes,1,rep,name=albums,proto3" json:"albums,omitempty"`
}

func (x *ListAlbumsReply) Reset() {
	*x = ListAlbumsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_photo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlbumsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlbumsReply) ProtoMessage() {}

func (x *ListAlbumsReply) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_photo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlbumsReply.ProtoReflect.Descriptor instead.
func (*ListAlbumsReply) Descriptor() ([]byte, []int) {
	return file_localdevice_photo_proto_rawDescGZIP(), []int{10}
}

func (x *ListAlbumsReply) GetAlbums() []*Album {
	if x != nil {
		return x.Albums
	}
	return nil
}

type PutPhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumId string `protobuf:"bytes,1,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`
	// 图片路径, 支持dataurl
	Url      string  `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	FileName *string `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3,oneof" json:"file_name,omitempty"`
}

func (x *PutPhotoRequest) Reset() {
	*x = PutPhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_localdevice_photo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutPhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutPhotoRequest) ProtoMessage() {}

func (x *PutPhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_localdevice_photo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutPhotoRequest.ProtoReflect.Descriptor instead.
func (*PutPhotoRequest) Descriptor() ([]byte, []int) {
	return file_localdevice_photo_proto_rawDescGZIP(), []int{11}
}

func (x *PutPhotoRequest) GetAlbumId() string {
	if x != nil {
		return x.AlbumId
	}
	return ""
}

func (x *PutPhotoRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PutPhotoRequest) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

var File_localdevice_photo_proto protoreflect.FileDescriptor

var file_localdevice_photo_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x58, 0x0a, 0x15, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x22, 0x97, 0x01, 0x0a, 0x0c, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x48, 0x61,
	0x73, 0x68, 0x53, 0x65, 0x74, 0x12, 0x4d, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a,
	0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x53,
	0x65, 0x74, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x23,
	0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x1f, 0x0a, 0x0d, 0x50, 0x75, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbf, 0x04, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49,
	0x64, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x10, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x6e, 0x65, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x6e, 0x65, 0x65, 0x64, 0x5f, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x49,
	0x64, 0x73, 0x12, 0x4d, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x32, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x53, 0x6f, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1e, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x0d,
	0x69, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x88, 0x01, 0x01,
	0x12, 0x56, 0x0a, 0x17, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x04, 0x52,
	0x14, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74, 0x79,
	0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x22, 0xde, 0x04,
	0x0a, 0x09, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x44, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x48, 0x03, 0x52, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x0a,
	0x74, 0x61, 0x6b, 0x65, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x04, 0x52, 0x09,
	0x74, 0x61, 0x6b, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x0d,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48,
	0x05, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x74, 0x61, 0x6b, 0x65, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x22, 0xbd,
	0x01, 0x0a, 0x05, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xea,
	0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x0e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x64, 0x74, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0f,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x35, 0x0a, 0x14, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f,
	0x63, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x5f, 0x77, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x02, 0x52, 0x12, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x43, 0x68, 0x6f,
	0x6f, 0x73, 0x65, 0x57, 0x61, 0x79, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x5f, 0x63, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x5f, 0x77, 0x61, 0x79, 0x22, 0x50, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3d,
	0x0a, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x06, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x22, 0x6e, 0x0a,
	0x0f, 0x50, 0x75, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x2a, 0xc2, 0x01,
	0x0a, 0x12, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x53, 0x6f, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x44,
	0x41, 0x54, 0x45, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x41,
	0x4b, 0x45, 0x4e, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x01, 0x12,
	0x13, 0x0a, 0x0f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x41,
	0x53, 0x43, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x41, 0x4b, 0x45, 0x4e, 0x5f, 0x44, 0x41,
	0x54, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x5f, 0x54, 0x41, 0x4b, 0x45, 0x4e, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x04, 0x12,
	0x14, 0x0a, 0x10, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x41, 0x4b, 0x45, 0x4e, 0x5f,
	0x41, 0x53, 0x43, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10,
	0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x53, 0x43,
	0x10, 0x07, 0x32, 0xcd, 0x04, 0x0a, 0x0c, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x12, 0x72, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x73, 0x12, 0x31, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61,
	0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a,
	0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x08, 0x50, 0x75, 0x74, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x12, 0x2f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79,
	0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a,
	0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x12, 0x32, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a,
	0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x0e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x12, 0x35,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61,
	0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x65, 0x74, 0x61,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x6c, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x12, 0x31, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61, 0x7a, 0x79, 0x63,
	0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x6c, 0x61,
	0x7a, 0x79, 0x63, 0x61, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x65, 0x74, 0x61,
	0x22, 0x00, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6c, 0x69, 0x6e, 0x61, 0x6b, 0x65, 0x73, 0x69, 0x2f, 0x6c, 0x7a, 0x63, 0x2d, 0x73, 0x64, 0x6b,
	0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x67, 0x6f, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_localdevice_photo_proto_rawDescOnce sync.Once
	file_localdevice_photo_proto_rawDescData = file_localdevice_photo_proto_rawDesc
)

func file_localdevice_photo_proto_rawDescGZIP() []byte {
	file_localdevice_photo_proto_rawDescOnce.Do(func() {
		file_localdevice_photo_proto_rawDescData = protoimpl.X.CompressGZIP(file_localdevice_photo_proto_rawDescData)
	})
	return file_localdevice_photo_proto_rawDescData
}

var file_localdevice_photo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_localdevice_photo_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_localdevice_photo_proto_goTypes = []interface{}{
	(PhotoMetasSortType)(0),       // 0: cloud.lazycat.apis.localdevice.PhotoMetasSortType
	(*QueryPhotoHashRequest)(nil), // 1: cloud.lazycat.apis.localdevice.QueryPhotoHashRequest
	(*PhotoHashSet)(nil),          // 2: cloud.lazycat.apis.localdevice.PhotoHashSet
	(*QueryPhotoRequest)(nil),     // 3: cloud.lazycat.apis.localdevice.QueryPhotoRequest
	(*PutPhotoReply)(nil),         // 4: cloud.lazycat.apis.localdevice.PutPhotoReply
	(*DeletePhotoReply)(nil),      // 5: cloud.lazycat.apis.localdevice.DeletePhotoReply
	(*DeletePhotoRequest)(nil),    // 6: cloud.lazycat.apis.localdevice.DeletePhotoRequest
	(*ListPhotoMetasRequest)(nil), // 7: cloud.lazycat.apis.localdevice.ListPhotoMetasRequest
	(*PhotoMeta)(nil),             // 8: cloud.lazycat.apis.localdevice.PhotoMeta
	(*Album)(nil),                 // 9: cloud.lazycat.apis.localdevice.Album
	(*ListAlbumsRequest)(nil),     // 10: cloud.lazycat.apis.localdevice.ListAlbumsRequest
	(*ListAlbumsReply)(nil),       // 11: cloud.lazycat.apis.localdevice.ListAlbumsReply
	(*PutPhotoRequest)(nil),       // 12: cloud.lazycat.apis.localdevice.PutPhotoRequest
	nil,                           // 13: cloud.lazycat.apis.localdevice.PhotoHashSet.EntryEntry
	(*timestamppb.Timestamp)(nil), // 14: google.protobuf.Timestamp
}
var file_localdevice_photo_proto_depIdxs = []int32{
	14, // 0: cloud.lazycat.apis.localdevice.QueryPhotoHashRequest.changed_after:type_name -> google.protobuf.Timestamp
	13, // 1: cloud.lazycat.apis.localdevice.PhotoHashSet.entry:type_name -> cloud.lazycat.apis.localdevice.PhotoHashSet.EntryEntry
	0,  // 2: cloud.lazycat.apis.localdevice.ListPhotoMetasRequest.stype:type_name -> cloud.lazycat.apis.localdevice.PhotoMetasSortType
	14, // 3: cloud.lazycat.apis.localdevice.ListPhotoMetasRequest.filter_by_modified_date:type_name -> google.protobuf.Timestamp
	14, // 4: cloud.lazycat.apis.localdevice.PhotoMeta.creation_date:type_name -> google.protobuf.Timestamp
	14, // 5: cloud.lazycat.apis.localdevice.PhotoMeta.taken_date:type_name -> google.protobuf.Timestamp
	14, // 6: cloud.lazycat.apis.localdevice.PhotoMeta.modified_date:type_name -> google.protobuf.Timestamp
	9,  // 7: cloud.lazycat.apis.localdevice.ListAlbumsReply.albums:type_name -> cloud.lazycat.apis.localdevice.Album
	10, // 8: cloud.lazycat.apis.localdevice.PhotoLibrary.ListAlbums:input_type -> cloud.lazycat.apis.localdevice.ListAlbumsRequest
	12, // 9: cloud.lazycat.apis.localdevice.PhotoLibrary.PutPhoto:input_type -> cloud.lazycat.apis.localdevice.PutPhotoRequest
	6,  // 10: cloud.lazycat.apis.localdevice.PhotoLibrary.DeletePhoto:input_type -> cloud.lazycat.apis.localdevice.DeletePhotoRequest
	7,  // 11: cloud.lazycat.apis.localdevice.PhotoLibrary.ListPhotoMetas:input_type -> cloud.lazycat.apis.localdevice.ListPhotoMetasRequest
	3,  // 12: cloud.lazycat.apis.localdevice.PhotoLibrary.QueryPhoto:input_type -> cloud.lazycat.apis.localdevice.QueryPhotoRequest
	11, // 13: cloud.lazycat.apis.localdevice.PhotoLibrary.ListAlbums:output_type -> cloud.lazycat.apis.localdevice.ListAlbumsReply
	4,  // 14: cloud.lazycat.apis.localdevice.PhotoLibrary.PutPhoto:output_type -> cloud.lazycat.apis.localdevice.PutPhotoReply
	5,  // 15: cloud.lazycat.apis.localdevice.PhotoLibrary.DeletePhoto:output_type -> cloud.lazycat.apis.localdevice.DeletePhotoReply
	8,  // 16: cloud.lazycat.apis.localdevice.PhotoLibrary.ListPhotoMetas:output_type -> cloud.lazycat.apis.localdevice.PhotoMeta
	8,  // 17: cloud.lazycat.apis.localdevice.PhotoLibrary.QueryPhoto:output_type -> cloud.lazycat.apis.localdevice.PhotoMeta
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_localdevice_photo_proto_init() }
func file_localdevice_photo_proto_init() {
	if File_localdevice_photo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_localdevice_photo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPhotoHashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_photo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoHashSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_photo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_photo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutPhotoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_photo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePhotoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_photo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_photo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPhotoMetasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_photo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_photo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Album); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_photo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlbumsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_photo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlbumsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_localdevice_photo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutPhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_localdevice_photo_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_localdevice_photo_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_localdevice_photo_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_localdevice_photo_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_localdevice_photo_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_localdevice_photo_proto_goTypes,
		DependencyIndexes: file_localdevice_photo_proto_depIdxs,
		EnumInfos:         file_localdevice_photo_proto_enumTypes,
		MessageInfos:      file_localdevice_photo_proto_msgTypes,
	}.Build()
	File_localdevice_photo_proto = out.File
	file_localdevice_photo_proto_rawDesc = nil
	file_localdevice_photo_proto_goTypes = nil
	file_localdevice_photo_proto_depIdxs = nil
}
