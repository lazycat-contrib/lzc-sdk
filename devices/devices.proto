syntax = "proto3";

package cloud.lazycat.apis;

option go_package = "/devices";

import "google/protobuf/empty.proto";

service Devices {
  // 枚举当前登陆用户所有的设备信息
  rpc ListDevices(ListDeviceRequest) returns (ListDeviceReply) {}

  // 将发起请求的设备与登陆用户的其他所有设备建立其虚拟网络隧道
  // 以便发起请求的浏览器可以绕过盒子直接访问其他节点上的设备API，比如剪贴板、文件拷贝等
  // 后端代码本身就与任意设备建立好了虚拟网络隧道，因此不需要使用此API。
  // 前端代码可以调用browseronly.proto:PairAllDeivce自动设置相关参数。
  rpc PairAllDevices_(PairDeviceRequest) returns (stream google.protobuf.Empty) {}
}

message PairDeviceRequest {
  string user_token = 1; //用户登陆时hserver返回的token
}

message Device {
  string peer_id = 1;
  bool is_online = 2;

  // 因为device api的监听端口可能会变化，所以此url有效性不会太长
  string device_api_url = 3;
}
message ListDeviceRequest {
  string uid = 1;
}
message ListDeviceReply {
  repeated Device devices = 1;
}