lzc-sdk-version: 0.1  #决定了manifest文件格式以及lzcinit的最低版本.(最终版本取此值与实际盒子runtime两种中较大者)

package: abc.example.com #app的唯一标识符
version: 2.0.2           #app的版本

name: 测试abc
description: 简单易用的英语学习软件

license: https://choosealicense.com/licenses/mit/
homepage: http://github.com/snyh/abc #出现bug时候提交反馈的地方
author: snyh@snyh.org

permissions: #静态权限列表, 还在设计中，方向是权限定义以及权限要求都在protos文件中定义，然后扫描proto文件生成规则列表嵌入到api-server中
  - CLOUD.LAZYCAT.APIS.USER_DOCUMENT
  - CLOUD.LAZYCAT.APIS.END_DEVICES


runtime_dependencies: # 程序运行时依赖，目前支持系统版本和客户端版本的依赖说明。若运行环境不满足要求则app会提示用户进行更新等操作
  os: ">= 0.1.22-0"       # 支持">"、"<"、">="、"<="、"!="、"="操作，若忽略则为"="。
  client: "<0.3.3-0"      # 不支持使用"latest"等非semver规范的版本号。若要支持带"-xxx"的版本则需要添加"-0"尾巴否则无法匹配到

#application作为一个特殊的container运行，对应的service名称为固定的`app`，其他service可以通过此名称与app进行通讯
application:
  subdomain: abc  #期望的app域名，如果系统中已经有对应域名则会提示用户选择其他域名。最终app分配到的域名以/lzcapp/run/app.subdomain为准

  workdir: /lzcapp/pkg/content/ #设置lzcinit以及后续子进程的WORKDIR,若不设置或目录不存在则保持使用container的WORKDIR信息

  public_path:
     - /api/public  #默认情况下所有路径都需要登陆后才能访问，public_path之下的路径允许非登陆情况下访问

  background_task: false #是否存在后台任务，若存在则系统不会对此app进行主动休眠等操作

  gpu_accel: false # 是否允许使用硬件加速

  file_handler: # 声明本app支持操作的文件类型，mime至少存在一条记录，actions至少要支持open
    mime:  #按照mime类型注册到系统
      - x-scheme-handler/http
      - x-scheme-handler/https
      - text/html
      - application/xhtml+xml
      - x-lzc-extension/km      # app支持.km文件名后缀
    actions:  #打开对应文件的url路径,由文件管理器等app调用
      open: /open?file=%u   #%u是某个webdav上的具体文件路径，一定存在
      new:  /open?file=%u   #%u是某个webdav上的具体文件路径，不一定存在
      download: /download?file=%u #%u是某个webdav上的具体文件路径，一定存在

  routes:
    - /api/=exec://8000,/lzcapp/pkg/content/bin/backend     #格式与/usr/bin/lzcinit -up参数一致
    - /api/=http://$uid.service.appid.lzcapp:8000            #多实例应用需要在route里加上"$uid"，请求时lzcinit会自动替换成真正请求的用户
    - /=file:///lzcapp/pkg/content/dist/

  handlers:
    # 当routes中https/http/exec类型的反代出现错误时，则渲染对应模板。
    # 若错误类型为无法返回任何数据，则会生成一个502响应，比如上游游服务器不存在或网络不通等完全获取不到一个http response的情况。
    #
    # 其他情况则根据http response status code，选择对应的模板
    # 若命中错误处理页面, 则http response status code本身不会进行修改
    #
    # 页面渲染使用此数据结构
      # struct {
      #    StatusCode int
      #    ErrorDetail string #无法获取http response的情况下，此字段会显示对应错误信息，并将StatusCode设置为502
      # }
    error_page_templates:
      502: /lzcapp/pkg/content/errors/502.html.tpl
      404: /lzcapp/pkg/content/errors/404.html.tpl

  ingress:
    - protocol: tcp     #tcp or udp
      port: 22          #需要曝露的端口号
      service: db       #为空则为此app容器内的端口,也可以指定为db等其他service的名称

  authcallback: xxx #oauth相关

  image: alpine:3.16  #可选的运行环境，为空则使用sdk对应版本的镜像。若上架到商店，则此处的镜像必须上传到商店仓库统一托管。

  depends_on:
    - db

  user_app: true # 是否启用多实例


services: #传统docker镜像启动方式，如果需要数据库等配套容器一起运行则可以在这里申明。传统app如nextcloud、aria2c也可以使用这种方式进行兼容运行
  db: #目前只支持以下参数，network,ipc之类的配置字段(故意)不支持
    image: bitnami/wordpress:5.8.2
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      # oauth相关的环境变量
      - LAZYCAT_AUTH_OIDC_CLIENT_ID=xxx
      - LAZYCAT_AUTH_OIDC_CLIENT_SECRET=xxx
      - LAZYCAT_AUTH_OIDC_ISSUER_URL=xxx
    # 仅支持以下挂载点:
    # - /lzcapp/run
    # - /lzcapp/run/mnt/home
    # - /lzcapp/var
    # - /lzcapp/cache
    # - /lzcapp/pkg
    binds:
      - /lzcapp/run/mnt/home:/home
      - /lzcapp/var/db:/data
      - /lzcapp/cache/db:/cache
      - /lzcapp/pkg/content/entrypoint.sh:/entrypoint.sh # 挂载lpk包内的文件
    entrypoint: /bin/sh -c
    command: "/usr/bin/nextcloud"
    #depends_on:
